  * pointer *                                                  * iterator *
	.file	"main.cpp"						.file	"main.cpp"
# GNU C++ (GCC) version 4.8.0 (x86_64-unknown-linux-gnu)	# GNU C++ (GCC) version 4.8.0 (x86_64-unknown-linux-gnu)
#	compiled by GNU C version 4.7.2, GMP version 5.0.2, M	#	compiled by GNU C version 4.7.2, GMP version 5.0.2, M
# GGC heuristics: --param ggc-min-expand=30 --param ggc-min-h	# GGC heuristics: --param ggc-min-expand=30 --param ggc-min-h
# options passed:  -imultilib . -imultiarch x86_64-linux-gnu 	# options passed:  -imultilib . -imultiarch x86_64-linux-gnu 
# main.cpp -mtune=generic -march=x86-64 -auxbase-strip - -O3  |	# -D USE_ITERATOR main.cpp -mtune=generic -march=x86-64 -auxb
							      >	# -O3 -fverbose-asm
# options enabled:  -faggressive-loop-optimizations		# options enabled:  -faggressive-loop-optimizations
# -fasynchronous-unwind-tables -fauto-inc-dec -fbranch-count-	# -fasynchronous-unwind-tables -fauto-inc-dec -fbranch-count-
# -fcaller-saves -fcombine-stack-adjustments -fcommon -fcompa	# -fcaller-saves -fcombine-stack-adjustments -fcommon -fcompa
# -fcprop-registers -fcrossjumping -fcse-follow-jumps -fdefer	# -fcprop-registers -fcrossjumping -fcse-follow-jumps -fdefer
# -fdelete-null-pointer-checks -fdevirtualize -fdwarf2-cfi-as	# -fdelete-null-pointer-checks -fdevirtualize -fdwarf2-cfi-as
# -fearly-inlining -feliminate-unused-debug-types -fexception	# -fearly-inlining -feliminate-unused-debug-types -fexception
# -fexpensive-optimizations -fforward-propagate -ffunction-cs	# -fexpensive-optimizations -fforward-propagate -ffunction-cs
# -fgcse-after-reload -fgcse-lm -fgnu-runtime -fguess-branch-	# -fgcse-after-reload -fgcse-lm -fgnu-runtime -fguess-branch-
# -fhoist-adjacent-loads -fident -fif-conversion -fif-convers	# -fhoist-adjacent-loads -fident -fif-conversion -fif-convers
# -findirect-inlining -finline -finline-atomics -finline-func	# -findirect-inlining -finline -finline-atomics -finline-func
# -finline-functions-called-once -finline-small-functions -fi	# -finline-functions-called-once -finline-small-functions -fi
# -fipa-cp-clone -fipa-profile -fipa-pure-const -fipa-referen	# -fipa-cp-clone -fipa-profile -fipa-pure-const -fipa-referen
# -fira-hoist-pressure -fira-share-save-slots -fira-share-spi	# -fira-hoist-pressure -fira-share-save-slots -fira-share-spi
# -fivopts -fkeep-static-consts -fleading-underscore -fmath-e	# -fivopts -fkeep-static-consts -fleading-underscore -fmath-e
# -fmerge-constants -fmerge-debug-strings -fmove-loop-invaria	# -fmerge-constants -fmerge-debug-strings -fmove-loop-invaria
# -fomit-frame-pointer -foptimize-register-move -foptimize-si	# -fomit-frame-pointer -foptimize-register-move -foptimize-si
# -foptimize-strlen -fpartial-inlining -fpeephole -fpeephole2	# -foptimize-strlen -fpartial-inlining -fpeephole -fpeephole2
# -fpredictive-commoning -fprefetch-loop-arrays -free -freg-s	# -fpredictive-commoning -fprefetch-loop-arrays -free -freg-s
# -fregmove -freorder-blocks -freorder-functions -frerun-cse-	# -fregmove -freorder-blocks -freorder-functions -frerun-cse-
# -fsched-critical-path-heuristic -fsched-dep-count-heuristic	# -fsched-critical-path-heuristic -fsched-dep-count-heuristic
# -fsched-group-heuristic -fsched-interblock -fsched-last-ins	# -fsched-group-heuristic -fsched-interblock -fsched-last-ins
# -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuri	# -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuri
# -fsched-stalled-insns-dep -fschedule-insns2 -fshow-column -	# -fsched-stalled-insns-dep -fschedule-insns2 -fshow-column -
# -fsigned-zeros -fsplit-ivs-in-unroller -fsplit-wide-types	# -fsigned-zeros -fsplit-ivs-in-unroller -fsplit-wide-types
# -fstrict-aliasing -fstrict-overflow -fstrict-volatile-bitfi	# -fstrict-aliasing -fstrict-overflow -fstrict-volatile-bitfi
# -fsync-libcalls -fthread-jumps -ftoplevel-reorder -ftrappin	# -fsync-libcalls -fthread-jumps -ftoplevel-reorder -ftrappin
# -ftree-bit-ccp -ftree-builtin-call-dce -ftree-ccp -ftree-ch	# -ftree-bit-ccp -ftree-builtin-call-dce -ftree-ccp -ftree-ch
# -ftree-coalesce-vars -ftree-copy-prop -ftree-copyrename -ft	# -ftree-coalesce-vars -ftree-copy-prop -ftree-copyrename -ft
# -ftree-dce -ftree-dominator-opts -ftree-dse -ftree-forwprop	# -ftree-dce -ftree-dominator-opts -ftree-dse -ftree-forwprop
# -ftree-loop-distribute-patterns -ftree-loop-if-convert -ftr	# -ftree-loop-distribute-patterns -ftree-loop-if-convert -ftr
# -ftree-loop-ivcanon -ftree-loop-optimize -ftree-parallelize	# -ftree-loop-ivcanon -ftree-loop-optimize -ftree-parallelize
# -ftree-partial-pre -ftree-phiprop -ftree-pre -ftree-pta -ft	# -ftree-partial-pre -ftree-phiprop -ftree-pre -ftree-pta -ft
# -ftree-scev-cprop -ftree-sink -ftree-slp-vectorize -ftree-s	# -ftree-scev-cprop -ftree-sink -ftree-slp-vectorize -ftree-s
# -ftree-switch-conversion -ftree-tail-merge -ftree-ter		# -ftree-switch-conversion -ftree-tail-merge -ftree-ter
# -ftree-vect-loop-version -ftree-vectorize -ftree-vrp -funit	# -ftree-vect-loop-version -ftree-vectorize -ftree-vrp -funit
# -funswitch-loops -funwind-tables -fvect-cost-model -fverbos	# -funswitch-loops -funwind-tables -fvect-cost-model -fverbos
# -fzero-initialized-in-bss -m128bit-long-double -m64 -m80387	# -fzero-initialized-in-bss -m128bit-long-double -m64 -m80387
# -maccumulate-outgoing-args -malign-stringops -mfancy-math-3	# -maccumulate-outgoing-args -malign-stringops -mfancy-math-3
# -mfp-ret-in-387 -mglibc -mieee-fp -mlong-double-80 -mmmx -m	# -mfp-ret-in-387 -mglibc -mieee-fp -mlong-double-80 -mmmx -m
# -mpush-args -mred-zone -msse -msse2 -mtls-direct-seg-refs	# -mpush-args -mred-zone -msse -msse2 -mtls-direct-seg-refs

	.text								.text
	.p2align 4,,15							.p2align 4,,15
	.globl	_Z7processPiS_				      |		.globl	_Z7processN9__gnu_cxx17__normal_iteratorIPiSt
	.type	_Z7processPiS_, @function		      |		.type	_Z7processN9__gnu_cxx17__normal_iteratorIPiSt
_Z7processPiS_:						      |	_Z7processN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE
.LFB456:							.LFB456:
	.cfi_startproc							.cfi_startproc
	pushq	%rbp	#						pushq	%rbp	#
	.cfi_def_cfa_offset 16						.cfi_def_cfa_offset 16
	.cfi_offset 6, -16						.cfi_offset 6, -16
	movq	%rsi, %rbp	# end, end				movq	%rsi, %rbp	# end, end
	pushq	%rbx	#						pushq	%rbx	#
	.cfi_def_cfa_offset 24						.cfi_def_cfa_offset 24
	.cfi_offset 3, -24						.cfi_offset 3, -24
	movq	%rdi, %rbx	# begin, begin		      |		movq	%rdi, %rbx	# begin, ivtmp.37
	subq	$8, %rsp	#,					subq	$8, %rsp	#,
	.cfi_def_cfa_offset 32						.cfi_def_cfa_offset 32
	cmpq	%rsi, %rdi	# end, begin		      |		cmpq	%rsi, %rdi	# end, ivtmp.37
	je	.L1	#,						je	.L1	#,
	.p2align 4,,10							.p2align 4,,10
	.p2align 3							.p2align 3
.L5:								.L5:
	movl	(%rbx), %edi	# MEM[base: begin_11, offset: |		movl	(%rbx), %edi	# MEM[base: _11, offset: 0],
	addq	$4, %rbx	#, begin		      |		addq	$4, %rbx	#, ivtmp.37
	call	_Z9disappeari	#					call	_Z9disappeari	#
	cmpq	%rbx, %rbp	# begin, end		      |		cmpq	%rbx, %rbp	# ivtmp.37, end
	jne	.L5	#,						jne	.L5	#,
.L1:								.L1:
	addq	$8, %rsp	#,					addq	$8, %rsp	#,
	.cfi_def_cfa_offset 24						.cfi_def_cfa_offset 24
	popq	%rbx	#						popq	%rbx	#
	.cfi_def_cfa_offset 16						.cfi_def_cfa_offset 16
	popq	%rbp	#						popq	%rbp	#
	.cfi_def_cfa_offset 8						.cfi_def_cfa_offset 8
	ret								ret
	.cfi_endproc							.cfi_endproc
.LFE456:							.LFE456:
	.size	_Z7processPiS_, .-_Z7processPiS_	      |		.size	_Z7processN9__gnu_cxx17__normal_iteratorIPiSt
	.section	.text.startup,"ax",@progbits			.section	.text.startup,"ax",@progbits
	.p2align 4,,15							.p2align 4,,15
	.globl	main							.globl	main
	.type	main, @function						.type	main, @function
main:								main:
.LFB457:							.LFB457:
	.cfi_startproc							.cfi_startproc
	.cfi_personality 0x3,__gxx_personality_v0			.cfi_personality 0x3,__gxx_personality_v0
	.cfi_lsda 0x3,.LLSDA457						.cfi_lsda 0x3,.LLSDA457
	pushq	%rbp	#						pushq	%rbp	#
	.cfi_def_cfa_offset 16						.cfi_def_cfa_offset 16
	.cfi_offset 6, -16						.cfi_offset 6, -16
	pushq	%rbx	#						pushq	%rbx	#
	.cfi_def_cfa_offset 24						.cfi_def_cfa_offset 24
	.cfi_offset 3, -24						.cfi_offset 3, -24
	subq	$40, %rsp	#,					subq	$40, %rsp	#,
	.cfi_def_cfa_offset 64						.cfi_def_cfa_offset 64
	movq	%rsp, %rdi	#,					movq	%rsp, %rdi	#,
.LEHB0:								.LEHB0:
	call	_Z8get_datav	#					call	_Z8get_datav	#
.LEHE0:								.LEHE0:
	movq	(%rsp), %rbx	# MEM[(struct vector *)&data] |		movq	8(%rsp), %rbp	# MEM[(int * const &)&data + 
	movq	8(%rsp), %rbp	# MEM[(const struct vector *) |		movq	(%rsp), %rbx	# MEM[(int * const &)&data], 
	subq	%rbx, %rbp	# begin, D.8681		      |		cmpq	%rbx, %rbp	# ivtmp.45, D.8835
	andq	$-4, %rbp	#, D.8681		      <
	addq	%rbx, %rbp	# begin, D.8680		      <
	cmpq	%rbp, %rbx	# D.8680, begin		      <
	je	.L12	#,						je	.L12	#,
	.p2align 4,,10							.p2align 4,,10
	.p2align 3							.p2align 3
.L19:								.L19:
	movl	(%rbx), %edi	# MEM[base: begin_27, offset: |		movl	(%rbx), %edi	# MEM[base: _24, offset: 0],
.LEHB1:								.LEHB1:
	call	_Z9disappeari	#					call	_Z9disappeari	#
.LEHE1:								.LEHE1:
	addq	$4, %rbx	#, begin		      |		addq	$4, %rbx	#, ivtmp.45
	cmpq	%rbx, %rbp	# begin, D.8680		      |		cmpq	%rbx, %rbp	# ivtmp.45, D.8835
	jne	.L19	#,						jne	.L19	#,
.L12:								.L12:
	movq	(%rsp), %rdi	# MEM[(struct _Vector_base *) |		movq	(%rsp), %rdi	# MEM[(struct _Vector_base *)
	testq	%rdi, %rdi	# D.8680		      |		testq	%rdi, %rdi	# D.8835
	je	.L21	#,						je	.L21	#,
	call	_ZdlPv	#						call	_ZdlPv	#
.L21:								.L21:
	addq	$40, %rsp	#,					addq	$40, %rsp	#,
	.cfi_remember_state						.cfi_remember_state
	.cfi_def_cfa_offset 24						.cfi_def_cfa_offset 24
	xorl	%eax, %eax	#					xorl	%eax, %eax	#
	popq	%rbx	#						popq	%rbx	#
	.cfi_def_cfa_offset 16						.cfi_def_cfa_offset 16
	popq	%rbp	#						popq	%rbp	#
	.cfi_def_cfa_offset 8						.cfi_def_cfa_offset 8
	ret								ret
.L16:								.L16:
	.cfi_restore_state						.cfi_restore_state
	movq	(%rsp), %rdi	# MEM[(struct _Vector_base *) |		movq	(%rsp), %rdi	# MEM[(struct _Vector_base *)
	movq	%rax, %rbx	#, tmp80		      |		movq	%rax, %rbx	#, tmp71
	testq	%rdi, %rdi	# D.8680		      |		testq	%rdi, %rdi	# D.8835
	je	.L15	#,						je	.L15	#,
	call	_ZdlPv	#						call	_ZdlPv	#
.L15:								.L15:
	movq	%rbx, %rdi	# tmp80,		      |		movq	%rbx, %rdi	# tmp71,
.LEHB2:								.LEHB2:
	call	_Unwind_Resume	#					call	_Unwind_Resume	#
.LEHE2:								.LEHE2:
	.cfi_endproc							.cfi_endproc
.LFE457:							.LFE457:
	.globl	__gxx_personality_v0					.globl	__gxx_personality_v0
	.section	.gcc_except_table,"a",@progbits			.section	.gcc_except_table,"a",@progbits
.LLSDA457:							.LLSDA457:
	.byte	0xff							.byte	0xff
	.byte	0xff							.byte	0xff
	.byte	0x1							.byte	0x1
	.uleb128 .LLSDACSE457-.LLSDACSB457				.uleb128 .LLSDACSE457-.LLSDACSB457
.LLSDACSB457:							.LLSDACSB457:
	.uleb128 .LEHB0-.LFB457						.uleb128 .LEHB0-.LFB457
	.uleb128 .LEHE0-.LEHB0						.uleb128 .LEHE0-.LEHB0
	.uleb128 0							.uleb128 0
	.uleb128 0							.uleb128 0
	.uleb128 .LEHB1-.LFB457						.uleb128 .LEHB1-.LFB457
	.uleb128 .LEHE1-.LEHB1						.uleb128 .LEHE1-.LEHB1
	.uleb128 .L16-.LFB457						.uleb128 .L16-.LFB457
	.uleb128 0							.uleb128 0
	.uleb128 .LEHB2-.LFB457						.uleb128 .LEHB2-.LFB457
	.uleb128 .LEHE2-.LEHB2						.uleb128 .LEHE2-.LEHB2
	.uleb128 0							.uleb128 0
	.uleb128 0							.uleb128 0
.LLSDACSE457:							.LLSDACSE457:
	.section	.text.startup					.section	.text.startup
	.size	main, .-main						.size	main, .-main
	.ident	"GCC: (GNU) 4.8.0"					.ident	"GCC: (GNU) 4.8.0"
	.section	.note.GNU-stack,"",@progbits			.section	.note.GNU-stack,"",@progbits
