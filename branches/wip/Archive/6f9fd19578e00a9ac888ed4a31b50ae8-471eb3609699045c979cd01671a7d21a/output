+ g++-4.8 -std=c++11 -O3 -pthread main.cpp -S -o -
+ c++filt
	.file	"main.cpp"
	.section	.rodata.str1.1,"aMS",@progbits,1
.LC0:
	.string	"before"
.LC1:
	.string	"after"
.LC2:
	.string	"locked"
	.section	.text.startup,"ax",@progbits
	.p2align 4,,15
	.globl	main
	.type	main, @function
main:
.LFB1565:
	.cfi_startproc
	subq	$56, %rsp
	.cfi_def_cfa_offset 64
	movl	$.LC0, %edi
	movq	%fs:40, %rax
	movq	%rax, 40(%rsp)
	xorl	%eax, %eax
	movq	$0, (%rsp)
	movq	$0, 8(%rsp)
	movq	$0, 16(%rsp)
	movq	$0, 24(%rsp)
	movq	$0, 32(%rsp)
	call	puts
	movl	__gthrw___pthread_key_create(unsigned int*, void (*)(void*)), %eax
	testq	%rax, %rax
	je	.L2
	movq	%rsp, %rdi
	call	__gthrw_pthread_mutex_lock(pthread_mutex_t*)
	testl	%eax, %eax
	jne	.L9
	movl	$.LC2, %edi
	call	puts
	movq	%rsp, %rdi
	call	__gthrw_pthread_mutex_unlock(pthread_mutex_t*)
.L4:
	movl	$.LC1, %edi
	call	puts
	xorl	%eax, %eax
	movq	40(%rsp), %rdx
	xorq	%fs:40, %rdx
	jne	.L10
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L10:
	.cfi_restore_state
	call	__stack_chk_fail
.L9:
	movl	%eax, %edi
	call	std::__throw_system_error(int)
.L2:
	movl	$.LC2, %edi
	call	puts
	jmp	.L4
	.cfi_endproc
.LFE1565:
	.size	main, .-main
	.weakref	__gthrw___pthread_key_create(unsigned int*, void (*)(void*)),__pthread_key_create
	.weakref	__gthrw_pthread_mutex_unlock(pthread_mutex_t*),pthread_mutex_unlock
	.weakref	__gthrw_pthread_mutex_lock(pthread_mutex_t*),pthread_mutex_lock
	.ident	"GCC: (Ubuntu/Linaro 4.8.0-3ubuntu3~12.04) 4.8.0"
	.section	.note.GNU-stack,"",@progbits
