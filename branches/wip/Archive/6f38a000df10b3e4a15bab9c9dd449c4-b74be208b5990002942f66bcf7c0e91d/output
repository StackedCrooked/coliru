+ bash main.cpp


--- /Archive/wide ---
/Archive/wide/ClangExperiments/Stages/Codegen/Expression.cpp.o
/Archive/wide/ClangExperiments/Stages/Codegen/FunctionCodeGen.cpp.o
/Archive/wide/ClangExperiments/Stages/Codegen/Statement.cpp.o
/Archive/wide/ClangExperiments/Stages/Codegen/Generator.cpp.o
/Archive/wide/ClangExperiments/Stages/Wide.cpp.o
/Archive/wide/ClangExperiments/Stages/Semantic/Function.cpp.o
/Archive/wide/ClangExperiments/Stages/Semantic/StringType.cpp.o
/Archive/wide/ClangExperiments/Stages/Semantic/ClangNamespace.cpp.o
/Archive/wide/ClangExperiments/Stages/Semantic/UserDefinedType.cpp.o
/Archive/wide/ClangExperiments/Stages/Semantic/Type.cpp.o
/Archive/wide/ClangExperiments/Stages/Semantic/Util.cpp.o
/Archive/wide/ClangExperiments/Stages/Semantic/Module.cpp.o
/Archive/wide/ClangExperiments/Stages/Semantic/IntegralType.cpp.o
/Archive/wide/ClangExperiments/Stages/Semantic/ClangInclude.cpp.o
/Archive/wide/ClangExperiments/Stages/Semantic/OverloadSet.cpp.o
/Archive/wide/ClangExperiments/Stages/Semantic/RvalueType.cpp.o
/Archive/wide/ClangExperiments/Stages/Semantic/ConstructorType.cpp.o
/Archive/wide/ClangExperiments/Stages/Semantic/Void.cpp.o
/Archive/wide/ClangExperiments/Stages/Semantic/ClangTemplateClass.cpp.o
/Archive/wide/ClangExperiments/Stages/Semantic/ClangTU.cpp.o
/Archive/wide/ClangExperiments/Stages/Semantic/Analyzer.cpp.o
/Archive/wide/ClangExperiments/Stages/Semantic/PrimitiveType.cpp.o
/Archive/wide/ClangExperiments/Stages/Semantic/LvalueType.cpp.o
/Archive/wide/ClangExperiments/Stages/Semantic/ClangType.cpp.o
/Archive/wide/ClangExperiments/Stages/Semantic/Bool.cpp.o
/Archive/wide/ClangExperiments/Stages/Semantic/FunctionType.cpp.o
/Archive/wide/ClangExperiments/Stages/Semantic/ClangOverloadSet.cpp.o
/Archive/wide/ClangExperiments/Stages/Parser/Builder.cpp.o
/Archive/wide/ClangExperiments/main.cpp.o
/Archive/wide/ClangExperiments/WideLibrary/main_trampoline.cpp.o


--- Current Link Command ---
g++ -o wide -std=c++11 -L/usr/lib -L/usr/local/lib -lclang \
  ./ClangExperiments/Stages/Semantic/Analyzer.cpp.o \
  ./ClangExperiments/Stages/Semantic/Util.cpp.o \
  ./ClangExperiments/Stages/Semantic/StringType.cpp.o \
  ./ClangExperiments/Stages/Semantic/ConstructorType.cpp.o \
  ./ClangExperiments/Stages/Semantic/RvalueType.cpp.o \
  ./ClangExperiments/Stages/Semantic/Bool.cpp.o \
  ./ClangExperiments/Stages/Semantic/LvalueType.cpp.o \
  ./ClangExperiments/Stages/Semantic/Function.cpp.o \
  ./ClangExperiments/Stages/Semantic/ClangInclude.cpp.o \
  ./ClangExperiments/Stages/Semantic/ClangTU.cpp.o \
  ./ClangExperiments/Stages/Semantic/Type.cpp.o \
  ./ClangExperiments/Stages/Semantic/PrimitiveType.cpp.o \
  ./ClangExperiments/Stages/Semantic/UserDefinedType.cpp.o \
  ./ClangExperiments/Stages/Semantic/OverloadSet.cpp.o \
  ./ClangExperiments/Stages/Semantic/FunctionType.cpp.o \
  ./ClangExperiments/Stages/Semantic/Module.cpp.o \
  ./ClangExperiments/Stages/Semantic/ClangType.cpp.o \
  ./ClangExperiments/Stages/Semantic/IntegralType.cpp.o \
  ./ClangExperiments/Stages/Semantic/Void.cpp.o \
  ./ClangExperiments/Stages/Semantic/ClangOverloadSet.cpp.o \
  ./ClangExperiments/Stages/Semantic/ClangNamespace.cpp.o \
  ./ClangExperiments/Stages/Semantic/ClangTemplateClass.cpp.o \
  ./ClangExperiments/Stages/Wide.cpp.o \
  ./ClangExperiments/Stages/Parser/Builder.cpp.o \
  ./ClangExperiments/Stages/Codegen/Statement.cpp.o \
  ./ClangExperiments/Stages/Codegen/Generator.cpp.o \
  ./ClangExperiments/Stages/Codegen/FunctionCodeGen.cpp.o \
  ./ClangExperiments/Stages/Codegen/Expression.cpp.o \
  ./ClangExperiments/WideLibrary/main_trampoline.cpp.o 


--- /Archive/LLVM/Clang/build/Release ---
/Archive/LLVM/Clang/build/Release/lib/libclang.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMARMAsmPrinter.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMX86Desc.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMPowerPCCodeGen.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMMBlazeInfo.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMAArch64AsmParser.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMSparcInfo.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMMipsCodeGen.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMAsmPrinter.a
/Archive/LLVM/Clang/build/Release/lib/libclangCodeGen.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMMCJIT.a
/Archive/LLVM/Clang/build/Release/lib/libclangStaticAnalyzerCheckers.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMMSP430Info.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMXCoreDisassembler.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMInstrumentation.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMHexagonInfo.a
/Archive/LLVM/Clang/build/Release/lib/libclangARCMigrate.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMRuntimeDyld.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMObjCARCOpts.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMX86AsmPrinter.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMMBlazeDesc.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMX86Info.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMTableGen.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMAsmParser.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMSelectionDAG.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMMCParser.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMArchive.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMX86Utils.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMExecutionEngine.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMXCoreInfo.a
/Archive/LLVM/Clang/build/Release/lib/libclangStaticAnalyzerFrontend.a
/Archive/LLVM/Clang/build/Release/lib/libclangRewriteFrontend.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMSystemZAsmParser.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMSystemZAsmPrinter.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMMipsInfo.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMPowerPCAsmPrinter.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMNVPTXDesc.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMipa.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMMSP430AsmPrinter.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMXCoreCodeGen.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMOption.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMMBlazeAsmPrinter.a
/Archive/LLVM/Clang/build/Release/lib/libclangRewriteCore.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMSystemZInfo.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMLinker.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMPowerPCAsmParser.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMCppBackendInfo.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMMBlazeDisassembler.a
/Archive/LLVM/Clang/build/Release/lib/libLTO.so
/Archive/LLVM/Clang/build/Release/lib/libLLVMScalarOpts.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMMBlazeAsmParser.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMSystemZDesc.a
/Archive/LLVM/Clang/build/Release/lib/libclang.so
/Archive/LLVM/Clang/build/Release/lib/libclangTooling.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMSparcCodeGen.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMPowerPCInfo.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMIRReader.a
/Archive/LLVM/Clang/build/Release/lib/libclangAST.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMTransformUtils.a
/Archive/LLVM/Clang/build/Release/lib/libclangParse.a
/Archive/LLVM/Clang/build/Release/lib/libclangDriver.a
/Archive/LLVM/Clang/build/Release/lib/libclangFrontend.a
/Archive/LLVM/Clang/build/Release/lib/libclangBasic.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMBitReader.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMHexagonCodeGen.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMMipsAsmParser.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMAArch64Utils.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMNVPTXCodeGen.a
/Archive/LLVM/Clang/build/Release/lib/LLVMHello.so
/Archive/LLVM/Clang/build/Release/lib/libLLVMCodeGen.a
/Archive/LLVM/Clang/build/Release/lib/libclangSerialization.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMARMCodeGen.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMInterpreter.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMARMDesc.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMNVPTXAsmPrinter.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMAArch64Disassembler.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMMipsAsmPrinter.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMAArch64Desc.a
/Archive/LLVM/Clang/build/Release/lib/libprofile_rt.so
/Archive/LLVM/Clang/build/Release/lib/libLLVMTarget.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMMipsDesc.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMVectorize.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMHexagonDesc.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMX86Disassembler.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMCore.a
/Archive/LLVM/Clang/build/Release/lib/BugpointPasses.so
/Archive/LLVM/Clang/build/Release/lib/libLLVMMSP430CodeGen.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMAArch64AsmPrinter.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMObject.a
/Archive/LLVM/Clang/build/Release/lib/libclangFrontendTool.a
/Archive/LLVM/Clang/build/Release/lib/clang/3.4/lib/linux/libclang_rt.ubsan_cxx-x86_64.a
/Archive/LLVM/Clang/build/Release/lib/clang/3.4/lib/linux/libclang_rt.san-x86_64.a
/Archive/LLVM/Clang/build/Release/lib/clang/3.4/lib/linux/libclang_rt.asan-x86_64.a
/Archive/LLVM/Clang/build/Release/lib/clang/3.4/lib/linux/libclang_rt.full-x86_64.a
/Archive/LLVM/Clang/build/Release/lib/clang/3.4/lib/linux/libclang_rt.tsan-x86_64.a
/Archive/LLVM/Clang/build/Release/lib/clang/3.4/lib/linux/libclang_rt.ubsan-x86_64.a
/Archive/LLVM/Clang/build/Release/lib/clang/3.4/lib/linux/libclang_rt.msan-x86_64.a
/Archive/LLVM/Clang/build/Release/lib/clang/3.4/lib/linux/libclang_rt.profile-x86_64.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMHexagonAsmPrinter.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMMipsDisassembler.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMMSP430Desc.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMAArch64CodeGen.a
/Archive/LLVM/Clang/build/Release/lib/libprofile_rt.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMARMInfo.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMDebugInfo.a
/Archive/LLVM/Clang/build/Release/lib/libclangAnalysis.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMMC.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMAArch64Info.a
/Archive/LLVM/Clang/build/Release/lib/libmigrateCore.a
/Archive/LLVM/Clang/build/Release/lib/libgtest.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMMBlazeCodeGen.a
/Archive/LLVM/Clang/build/Release/lib/libclangSema.a
/Archive/LLVM/Clang/build/Release/lib/libLTO.a
/Archive/LLVM/Clang/build/Release/lib/libclangStaticAnalyzerCore.a
/Archive/LLVM/Clang/build/Release/lib/libclangASTMatchers.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMSparcDesc.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMARMAsmParser.a
/Archive/LLVM/Clang/build/Release/lib/libgtest_main.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMipo.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMXCoreDesc.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMSystemZCodeGen.a
/Archive/LLVM/Clang/build/Release/lib/libclangLex.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMNVPTXInfo.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMJIT.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMPowerPCDesc.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMX86CodeGen.a
/Archive/LLVM/Clang/build/Release/lib/libclangFormat.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMARMDisassembler.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMCppBackendCodeGen.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMSupport.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMBitWriter.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMXCoreAsmPrinter.a
/Archive/LLVM/Clang/build/Release/lib/libclangEdit.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMInstCombine.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMMCDisassembler.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMX86AsmParser.a
/Archive/LLVM/Clang/build/Release/lib/libLLVMAnalysis.a


 --- Current Linker Output ---
./ClangExperiments/Stages/Semantic/Analyzer.cpp.o: In function `Wide::Semantic::Analyzer::GetClangType(Wide::ClangUtil::ClangTU&, clang::QualType)':
Analyzer.cpp:(.text+0x4eb1): undefined reference to `clang::Type::isCharType() const'
Analyzer.cpp:(.text+0x4f53): undefined reference to `clang::Type::getPointeeType() const'
Analyzer.cpp:(.text+0x4f65): undefined reference to `clang::Type::isCharType() const'
./ClangExperiments/Stages/Semantic/Analyzer.cpp.o: In function `Wide::Semantic::ClangCommonState::ClangCommonState(Wide::Options::Clang const&)':
Analyzer.cpp:(.text+0x5868): undefined reference to `clang::FileManager::FileManager(clang::FileSystemOptions const&)'
Analyzer.cpp:(.text+0x58c3): undefined reference to `vtable for llvm::raw_string_ostream'
Analyzer.cpp:(.text+0x58f1): undefined reference to `clang::TextDiagnosticPrinter::TextDiagnosticPrinter(llvm::raw_ostream&, clang::DiagnosticOptions*, bool)'
Analyzer.cpp:(.text+0x5910): undefined reference to `clang::DiagnosticsEngine::DiagnosticsEngine(llvm::IntrusiveRefCntPtr<clang::DiagnosticIDs> const&, clang::DiagnosticOptions*, clang::DiagnosticConsumer*, bool)'
Analyzer.cpp:(.text+0x5960): undefined reference to `clang::CompilerInstance::CompilerInstance()'
Analyzer.cpp:(.text+0x59a2): undefined reference to `clang::HeaderSearch::HeaderSearch(llvm::IntrusiveRefCntPtr<clang::HeaderSearchOptions>, clang::FileManager&, clang::DiagnosticsEngine&, clang::LangOptions const&, clang::TargetInfo const*)'
Analyzer.cpp:(.text+0x5b92): undefined reference to `llvm::DataLayout::ID'
Analyzer.cpp:(.text+0x5ba7): undefined reference to `vtable for llvm::DataLayout'
Analyzer.cpp:(.text+0x5c01): undefined reference to `llvm::DataLayout::init(llvm::StringRef)'
Analyzer.cpp:(.text+0x5cbd): undefined reference to `llvm::ImmutablePass::~ImmutablePass()'
Analyzer.cpp:(.text+0x5cc7): undefined reference to `clang::HeaderSearch::~HeaderSearch()'
Analyzer.cpp:(.text+0x5cd6): undefined reference to `clang::CompilerInstance::~CompilerInstance()'
Analyzer.cpp:(.text+0x5cfb): undefined reference to `clang::DiagnosticsEngine::~DiagnosticsEngine()'
Analyzer.cpp:(.text+0x5d05): undefined reference to `llvm::raw_string_ostream::~raw_string_ostream()'
Analyzer.cpp:(.text+0x5d22): undefined reference to `clang::FileManager::~FileManager()'
./ClangExperiments/Stages/Semantic/Analyzer.cpp.o: In function `Wide::Semantic::Analyzer::~Analyzer()':
Analyzer.cpp:(.text+0x650c): undefined reference to `llvm::DataLayout::~DataLayout()'
Analyzer.cpp:(.text+0x6518): undefined reference to `clang::HeaderSearch::~HeaderSearch()'
Analyzer.cpp:(.text+0x6524): undefined reference to `clang::CompilerInstance::~CompilerInstance()'
Analyzer.cpp:(.text+0x654d): undefined reference to `clang::DiagnosticsEngine::~DiagnosticsEngine()'
Analyzer.cpp:(.text+0x6559): undefined reference to `llvm::raw_string_ostream::~raw_string_ostream()'
Analyzer.cpp:(.text+0x657a): undefined reference to `clang::FileManager::~FileManager()'
./ClangExperiments/Stages/Semantic/Analyzer.cpp.o: In function `clang::ReferenceType const* clang::Type::castAs<clang::ReferenceType>() const':
Analyzer.cpp:(.text._ZNK5clang4Type6castAsINS_13ReferenceTypeEEEPKT_v[_ZNK5clang4Type6castAsINS_13ReferenceTypeEEEPKT_v]+0x4c): undefined reference to `clang::Type::getUnqualifiedDesugaredType() const'
./ClangExperiments/Stages/Semantic/Analyzer.cpp.o: In function `clang::LValueReferenceType const* clang::Type::getAs<clang::LValueReferenceType>() const':
Analyzer.cpp:(.text._ZNK5clang4Type5getAsINS_19LValueReferenceTypeEEEPKT_v[_ZNK5clang4Type5getAsINS_19LValueReferenceTypeEEEPKT_v]+0x39): undefined reference to `clang::Type::getUnqualifiedDesugaredType() const'
./ClangExperiments/Stages/Semantic/Analyzer.cpp.o: In function `clang::RValueReferenceType const* clang::Type::getAs<clang::RValueReferenceType>() const':
Analyzer.cpp:(.text._ZNK5clang4Type5getAsINS_19RValueReferenceTypeEEEPKT_v[_ZNK5clang4Type5getAsINS_19RValueReferenceTypeEEEPKT_v]+0x39): undefined reference to `clang::Type::getUnqualifiedDesugaredType() const'
./ClangExperiments/Stages/Semantic/Analyzer.cpp.o: In function `Wide::Semantic::ClangCommonState::~ClangCommonState()':
Analyzer.cpp:(.text._ZN4Wide8Semantic16ClangCommonStateD2Ev[_ZN4Wide8Semantic16ClangCommonStateD5Ev]+0x10): undefined reference to `llvm::DataLayout::~DataLayout()'
Analyzer.cpp:(.text._ZN4Wide8Semantic16ClangCommonStateD2Ev[_ZN4Wide8Semantic16ClangCommonStateD5Ev]+0x1c): undefined reference to `clang::HeaderSearch::~HeaderSearch()'
Analyzer.cpp:(.text._ZN4Wide8Semantic16ClangCommonStateD2Ev[_ZN4Wide8Semantic16ClangCommonStateD5Ev]+0x28): undefined reference to `clang::CompilerInstance::~CompilerInstance()'
Analyzer.cpp:(.text._ZN4Wide8Semantic16ClangCommonStateD2Ev[_ZN4Wide8Semantic16ClangCommonStateD5Ev]+0x51): undefined reference to `clang::DiagnosticsEngine::~DiagnosticsEngine()'
Analyzer.cpp:(.text._ZN4Wide8Semantic16ClangCommonStateD2Ev[_ZN4Wide8Semantic16ClangCommonStateD5Ev]+0x5d): undefined reference to `llvm::raw_string_ostream::~raw_string_ostream()'
Analyzer.cpp:(.text._ZN4Wide8Semantic16ClangCommonStateD2Ev[_ZN4Wide8Semantic16ClangCommonStateD5Ev]+0x7a): undefined reference to `clang::FileManager::~FileManager()'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `std::_Function_handler<llvm::Type* (llvm::Module*), Wide::ClangUtil::ClangTU::GetLLVMTypeFromClangType(clang::QualType, Wide::Semantic::Analyzer&)::{lambda(llvm::Module*)#1}>::_M_invoke(std::_Any_data const&, llvm::Module*)':
ClangTU.cpp:(.text+0x2ed): undefined reference to `clang::Type::getAsCXXRecordDecl() const'
ClangTU.cpp:(.text+0x333): undefined reference to `vtable for llvm::raw_string_ostream'
ClangTU.cpp:(.text+0x341): undefined reference to `clang::TypeWithKeyword::getKeywordForTagTypeKind(clang::TagTypeKind)'
ClangTU.cpp:(.text+0x34d): undefined reference to `clang::TypeWithKeyword::getKeywordName(clang::ElaboratedTypeKeyword)'
ClangTU.cpp:(.text+0x420): undefined reference to `clang::NamedDecl::printQualifiedName(llvm::raw_ostream&) const'
ClangTU.cpp:(.text+0x434): undefined reference to `llvm::raw_ostream::flush_nonempty()'
ClangTU.cpp:(.text+0x445): undefined reference to `llvm::Module::getTypeByName(llvm::StringRef) const'
ClangTU.cpp:(.text+0x468): undefined reference to `clang::Type::getAsCXXRecordDecl() const'
ClangTU.cpp:(.text+0x470): undefined reference to `clang::RecordDecl::field_begin() const'
ClangTU.cpp:(.text+0x490): undefined reference to `llvm::raw_string_ostream::~raw_string_ostream()'
ClangTU.cpp:(.text+0x4d5): undefined reference to `clang::DeclarationName::printName(llvm::raw_ostream&) const'
ClangTU.cpp:(.text+0x4ef): undefined reference to `llvm::raw_ostream::write(char const*, unsigned long)'
ClangTU.cpp:(.text+0x50a): undefined reference to `llvm::raw_ostream::write(unsigned char)'
ClangTU.cpp:(.text+0x53a): undefined reference to `clang::NamedDecl::printQualifiedName(llvm::raw_ostream&) const'
ClangTU.cpp:(.text+0x558): undefined reference to `clang::DeclarationName::printName(llvm::raw_ostream&) const'
ClangTU.cpp:(.text+0x56f): undefined reference to `llvm::raw_ostream::write(char const*, unsigned long)'
ClangTU.cpp:(.text+0x5c1): undefined reference to `vtable for llvm::raw_string_ostream'
ClangTU.cpp:(.text+0x5ce): undefined reference to `llvm::Module::print(llvm::raw_ostream&, llvm::AssemblyAnnotationWriter*) const'
ClangTU.cpp:(.text+0x5f7): undefined reference to `llvm::raw_string_ostream::~raw_string_ostream()'
ClangTU.cpp:(.text+0x66e): undefined reference to `llvm::raw_string_ostream::~raw_string_ostream()'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `Wide::ClangUtil::ClangTU::GenerateCodeAndLinkModule(llvm::Module*)':
ClangTU.cpp:(.text+0x74f): undefined reference to `clang::CodeGen::CodeGenModule::EmitTopLevelDecl(clang::Decl*)'
ClangTU.cpp:(.text+0x764): undefined reference to `clang::CodeGen::CodeGenModule::Release()'
ClangTU.cpp:(.text+0x771): undefined reference to `llvm::Linker::Linker(llvm::Module*)'
ClangTU.cpp:(.text+0x796): undefined reference to `llvm::Linker::linkInModule(llvm::Module*, unsigned int, std::string*)'
ClangTU.cpp:(.text+0x860): undefined reference to `llvm::Linker::~Linker()'
ClangTU.cpp:(.text+0x88e): undefined reference to `llvm::Linker::~Linker()'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `Wide::ClangUtil::ClangTU::IsComplexType(clang::CXXRecordDecl*)':
ClangTU.cpp:(.text+0xb0b): undefined reference to `clang::ASTContext::getTypeDeclTypeSlow(clang::TypeDecl const*) const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `Wide::ClangUtil::ClangTU::GetIdentifierInfo(std::string)':
ClangTU.cpp:(.text+0xbea): undefined reference to `llvm::StringMapImpl::LookupBucketFor(llvm::StringRef)'
ClangTU.cpp:(.text+0xc46): undefined reference to `llvm::BumpPtrAllocator::Allocate(unsigned long, unsigned long)'
ClangTU.cpp:(.text+0xcc3): undefined reference to `llvm::StringMapImpl::RehashTable()'
ClangTU.cpp:(.text+0xd22): undefined reference to `llvm::BumpPtrAllocator::Allocate(unsigned long, unsigned long)'
ClangTU.cpp:(.text+0xd32): undefined reference to `clang::IdentifierInfo::IdentifierInfo()'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `Wide::ClangUtil::ClangTU::GetFieldNumber(clang::FieldDecl*)':
ClangTU.cpp:(.text+0xdc1): undefined reference to `clang::CodeGen::CodeGenTypes::getCGRecordLayout(clang::RecordDecl const*)'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `Wide::ClangUtil::ClangTU::GetFileEnd()':
ClangTU.cpp:(.text+0xf63): undefined reference to `clang::SourceManager::getFileIDSize(clang::FileID) const'
ClangTU.cpp:(.text+0xfed): undefined reference to `clang::SourceManager::loadSLocEntry(unsigned int, bool*) const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `Wide::ClangUtil::ClangTU::~ClangTU()':
ClangTU.cpp:(.text+0x10ba): undefined reference to `clang::CodeGen::CodeGenModule::~CodeGenModule()'
ClangTU.cpp:(.text+0x10c6): undefined reference to `llvm::Module::~Module()'
ClangTU.cpp:(.text+0x1102): undefined reference to `clang::Sema::~Sema()'
ClangTU.cpp:(.text+0x1114): undefined reference to `vtable for clang::ASTConsumer'
ClangTU.cpp:(.text+0x1119): undefined reference to `clang::ASTContext::~ASTContext()'
ClangTU.cpp:(.text+0x1125): undefined reference to `clang::Preprocessor::~Preprocessor()'
ClangTU.cpp:(.text+0x1131): undefined reference to `clang::SourceManager::~SourceManager()'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseNestedNameSpecifierLoc(clang::NestedNameSpecifierLoc)':
ClangTU.cpp:(.text+0x25c1): undefined reference to `clang::NestedNameSpecifier::getKind() const'
ClangTU.cpp:(.text+0x25e4): undefined reference to `clang::NestedNameSpecifierLoc::getTypeLoc() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseCXXRecordHelper(clang::CXXRecordDecl*)':
ClangTU.cpp:(.text+0x26ae): undefined reference to `clang::CXXRecordDecl::DefinitionData::getBasesSlowCase() const'
ClangTU.cpp:(.text+0x26c7): undefined reference to `clang::CXXRecordDecl::DefinitionData::getBasesSlowCase() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseDeclarationNameInfo(clang::DeclarationNameInfo)':
ClangTU.cpp:(.text+0x2745): undefined reference to `clang::DeclarationName::getNameKind() const'
ClangTU.cpp:(.text+0x2766): undefined reference to `clang::DeclarationName::getNameKind() const'
ClangTU.cpp:(.text+0x2775): undefined reference to `clang::DeclarationName::getNameKind() const'
ClangTU.cpp:(.text+0x2784): undefined reference to `clang::DeclarationName::getNameKind() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `_ZN5clang19RecursiveASTVisitorIZZN4Wide9ClangUtil7ClangTU10MangleNameEPNS_9NamedDeclEENKUlPNS_12FunctionDeclEE_clES7_E17GeneratingVisitorE12TraverseStmtEPNS_4StmtE.part.1800':
ClangTU.cpp:(.text+0x3504): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
ClangTU.cpp:(.text+0x3624): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
ClangTU.cpp:(.text+0x36a4): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
ClangTU.cpp:(.text+0x3724): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
ClangTU.cpp:(.text+0x37a4): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o:ClangTU.cpp:(.text+0x3864): more undefined references to `clang::StmtIteratorBase::GetDeclExpr() const' follow
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseNestedNameSpecifier(clang::NestedNameSpecifier*)':
ClangTU.cpp:(.text+0x4928): undefined reference to `clang::NestedNameSpecifier::getKind() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `_ZN5clang19RecursiveASTVisitorIZZN4Wide9ClangUtil7ClangTU10MangleNameEPNS_9NamedDeclEENKUlPNS_12FunctionDeclEE_clES7_E17GeneratingVisitorE12TraverseDeclEPNS_4DeclE.part.1806':
ClangTU.cpp:(.text+0x5282): undefined reference to `clang::DeclContext::classof(clang::Decl const*)'
ClangTU.cpp:(.text+0x5292): undefined reference to `clang::DeclContext::classof(clang::Decl const*)'
ClangTU.cpp:(.text+0x52a4): undefined reference to `clang::Decl::castToDeclContext(clang::Decl const*)'
ClangTU.cpp:(.text+0x52c5): undefined reference to `clang::DeclContext::classof(clang::Decl const*)'
ClangTU.cpp:(.text+0x52d5): undefined reference to `clang::DeclContext::classof(clang::Decl const*)'
ClangTU.cpp:(.text+0x5315): undefined reference to `clang::DeclContext::classof(clang::Decl const*)'
ClangTU.cpp:(.text+0x5325): undefined reference to `clang::DeclContext::classof(clang::Decl const*)'
ClangTU.cpp:(.text+0x5354): undefined reference to `clang::DeclContext::classof(clang::Decl const*)'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o:ClangTU.cpp:(.text+0x5364): more undefined references to `clang::DeclContext::classof(clang::Decl const*)' follow
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `_ZN5clang19RecursiveASTVisitorIZZN4Wide9ClangUtil7ClangTU10MangleNameEPNS_9NamedDeclEENKUlPNS_12FunctionDeclEE_clES7_E17GeneratingVisitorE12TraverseDeclEPNS_4DeclE.part.1806':
ClangTU.cpp:(.text+0x5c87): undefined reference to `clang::ParmVarDecl::getDefaultArg()'
ClangTU.cpp:(.text+0x5ca2): undefined reference to `clang::DeclContext::classof(clang::Decl const*)'
ClangTU.cpp:(.text+0x5cb2): undefined reference to `clang::DeclContext::classof(clang::Decl const*)'
ClangTU.cpp:(.text+0x5d54): undefined reference to `clang::DeclContext::classof(clang::Decl const*)'
ClangTU.cpp:(.text+0x5d64): undefined reference to `clang::DeclContext::classof(clang::Decl const*)'
ClangTU.cpp:(.text+0x5d94): undefined reference to `clang::DeclContext::classof(clang::Decl const*)'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o:ClangTU.cpp:(.text+0x5da4): more undefined references to `clang::DeclContext::classof(clang::Decl const*)' follow
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `_ZN5clang19RecursiveASTVisitorIZZN4Wide9ClangUtil7ClangTU10MangleNameEPNS_9NamedDeclEENKUlPNS_12FunctionDeclEE_clES7_E17GeneratingVisitorE12TraverseDeclEPNS_4DeclE.part.1806':
ClangTU.cpp:(.text+0x6124): undefined reference to `clang::CXXRecordDecl::getTemplateSpecializationKind() const'
ClangTU.cpp:(.text+0x61eb): undefined reference to `clang::DeclContext::classof(clang::Decl const*)'
ClangTU.cpp:(.text+0x61fb): undefined reference to `clang::DeclContext::classof(clang::Decl const*)'
ClangTU.cpp:(.text+0x62cb): undefined reference to `clang::DeclContext::classof(clang::Decl const*)'
ClangTU.cpp:(.text+0x62d7): undefined reference to `clang::DeclContext::classof(clang::Decl const*)'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor::VisitFunctionDecl(clang::FunctionDecl*)':
ClangTU.cpp:(.text+0x64af): undefined reference to `clang::FunctionDecl::isTemplateInstantiation() const'
ClangTU.cpp:(.text+0x64ea): undefined reference to `llvm::BumpPtrAllocator::Allocate(unsigned long, unsigned long)'
ClangTU.cpp:(.text+0x6517): undefined reference to `vtable for clang::UsedAttr'
ClangTU.cpp:(.text+0x6560): undefined reference to `clang::Decl::getASTContext() const'
ClangTU.cpp:(.text+0x656e): undefined reference to `clang::Decl::setAttrsImpl(llvm::SmallVector<clang::Attr*, 2u> const&, clang::ASTContext&)'
ClangTU.cpp:(.text+0x65ab): undefined reference to `clang::DeclContext::decls_begin() const'
ClangTU.cpp:(.text+0x6651): undefined reference to `clang::Decl::castFromDeclContext(clang::DeclContext const*)'
ClangTU.cpp:(.text+0x6685): undefined reference to `clang::RecordDecl::field_begin() const'
ClangTU.cpp:(.text+0x66aa): undefined reference to `clang::Decl::castFromDeclContext(clang::DeclContext const*)'
ClangTU.cpp:(.text+0x6832): undefined reference to `clang::Decl::castFromDeclContext(clang::DeclContext const*)'
ClangTU.cpp:(.text+0x6879): undefined reference to `clang::CXXRecordDecl::DefinitionData::getBasesSlowCase() const'
ClangTU.cpp:(.text+0x6884): undefined reference to `clang::Decl::castFromDeclContext(clang::DeclContext const*)'
ClangTU.cpp:(.text+0x68ce): undefined reference to `clang::CXXRecordDecl::DefinitionData::getBasesSlowCase() const'
ClangTU.cpp:(.text+0x6946): undefined reference to `clang::Decl::castFromDeclContext(clang::DeclContext const*)'
ClangTU.cpp:(.text+0x6998): undefined reference to `llvm::BumpPtrAllocator::Allocate(unsigned long, unsigned long)'
ClangTU.cpp:(.text+0x69c5): undefined reference to `vtable for clang::UsedAttr'
ClangTU.cpp:(.text+0x69ef): undefined reference to `clang::Decl::getASTContext() const'
ClangTU.cpp:(.text+0x69fd): undefined reference to `clang::Decl::setAttrsImpl(llvm::SmallVector<clang::Attr*, 2u> const&, clang::ASTContext&)'
ClangTU.cpp:(.text+0x6a13): undefined reference to `clang::FunctionDecl::getTemplateSpecializationKind() const'
ClangTU.cpp:(.text+0x6a35): undefined reference to `clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool)'
ClangTU.cpp:(.text+0x6a64): undefined reference to `clang::Decl::getAttrs() const'
ClangTU.cpp:(.text+0x6ac6): undefined reference to `llvm::SmallVectorBase::grow_pod(void*, unsigned long, unsigned long)'
ClangTU.cpp:(.text+0x6ae2): undefined reference to `clang::FunctionDecl::setTemplateSpecializationKind(clang::TemplateSpecializationKind, clang::SourceLocation)'
ClangTU.cpp:(.text+0x6afb): undefined reference to `llvm::SmallVectorBase::grow_pod(void*, unsigned long, unsigned long)'
ClangTU.cpp:(.text+0x6bb5): undefined reference to `clang::CXXCtorInitializer::getBaseClass() const'
ClangTU.cpp:(.text+0x6d1b): undefined reference to `clang::Type::getAsCXXRecordDecl() const'
ClangTU.cpp:(.text+0x6d2c): undefined reference to `clang::Sema::LookupDefaultConstructor(clang::CXXRecordDecl*)'
ClangTU.cpp:(.text+0x6d52): undefined reference to `clang::Type::getAsCXXRecordDecl() const'
ClangTU.cpp:(.text+0x6d63): undefined reference to `clang::Sema::LookupDefaultConstructor(clang::CXXRecordDecl*)'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)':
ClangTU.cpp:(.text+0x6fd4): undefined reference to `clang::CodeGen::CodeGenModule::getMangledName(clang::GlobalDecl)'
ClangTU.cpp:(.text+0x7029): undefined reference to `llvm::BumpPtrAllocator::Allocate(unsigned long, unsigned long)'
ClangTU.cpp:(.text+0x7055): undefined reference to `vtable for clang::UsedAttr'
ClangTU.cpp:(.text+0x707f): undefined reference to `clang::Decl::getASTContext() const'
ClangTU.cpp:(.text+0x708d): undefined reference to `clang::Decl::setAttrsImpl(llvm::SmallVector<clang::Attr*, 2u> const&, clang::ASTContext&)'
ClangTU.cpp:(.text+0x7106): undefined reference to `clang::CodeGen::CodeGenModule::GetAddrOfGlobalVar(clang::VarDecl const*, llvm::Type*)'
ClangTU.cpp:(.text+0x713e): undefined reference to `llvm::BumpPtrAllocator::Allocate(unsigned long, unsigned long)'
ClangTU.cpp:(.text+0x7168): undefined reference to `vtable for clang::UsedAttr'
ClangTU.cpp:(.text+0x71ae): undefined reference to `clang::Decl::getASTContext() const'
ClangTU.cpp:(.text+0x71bc): undefined reference to `clang::Decl::setAttrsImpl(llvm::SmallVector<clang::Attr*, 2u> const&, clang::ASTContext&)'
ClangTU.cpp:(.text+0x71d0): undefined reference to `clang::CodeGen::CodeGenModule::GetAddrOfCXXConstructor(clang::CXXConstructorDecl const*, clang::CXXCtorType, clang::CodeGen::CGFunctionInfo const*)'
ClangTU.cpp:(.text+0x7298): undefined reference to `clang::CodeGen::CodeGenModule::getMangledName(clang::GlobalDecl)'
ClangTU.cpp:(.text+0x72c8): undefined reference to `clang::CodeGen::CodeGenModule::GetAddrOfCXXDestructor(clang::CXXDestructorDecl const*, clang::CXXDtorType, clang::CodeGen::CGFunctionInfo const*)'
ClangTU.cpp:(.text+0x72e0): undefined reference to `clang::CodeGen::CodeGenModule::GetAddrOfFunction(clang::GlobalDecl, llvm::Type*, bool)'
ClangTU.cpp:(.text+0x72f4): undefined reference to `clang::Decl::getAttrs() const'
ClangTU.cpp:(.text+0x732f): undefined reference to `llvm::SmallVectorBase::grow_pod(void*, unsigned long, unsigned long)'
ClangTU.cpp:(.text+0x7394): undefined reference to `clang::CodeGen::CodeGenModule::getMangledName(clang::GlobalDecl)'
ClangTU.cpp:(.text+0x73cf): undefined reference to `llvm::SmallVectorBase::grow_pod(void*, unsigned long, unsigned long)'
ClangTU.cpp:(.text+0x7455): undefined reference to `clang::CodeGen::CodeGenModule::getMangledName(clang::GlobalDecl)'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `std::_Function_handler<void (clang::CXXRecordDecl*), Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::CXXRecordDecl*)#2}>::_M_invoke(std::_Any_data const&, clang::CXXRecordDecl*)':
ClangTU.cpp:(.text+0x767e): undefined reference to `clang::CXXRecordDecl::getDestructor() const'
ClangTU.cpp:(.text+0x76bb): undefined reference to `clang::DeclContext::decls_begin() const'
ClangTU.cpp:(.text+0x7746): undefined reference to `clang::DeclContext::decls_begin() const'
ClangTU.cpp:(.text+0x77ef): undefined reference to `clang::CXXRecordDecl::DefinitionData::getBasesSlowCase() const'
ClangTU.cpp:(.text+0x7808): undefined reference to `clang::CXXRecordDecl::DefinitionData::getBasesSlowCase() const'
ClangTU.cpp:(.text+0x7842): undefined reference to `clang::Type::getAsCXXRecordDecl() const'
ClangTU.cpp:(.text+0x78d5): undefined reference to `clang::RecordDecl::field_begin() const'
ClangTU.cpp:(.text+0x7907): undefined reference to `clang::Type::getAsCXXRecordDecl() const'
ClangTU.cpp:(.text+0x7947): undefined reference to `clang::DeclContext::decls_begin() const'
ClangTU.cpp:(.text+0x7984): undefined reference to `clang::Type::getAsCXXRecordDecl() const'
ClangTU.cpp:(.text+0x7a22): undefined reference to `clang::ASTContext::getTypeDeclTypeSlow(clang::TypeDecl const*) const'
ClangTU.cpp:(.text+0x7aac): undefined reference to `clang::SourceManager::getFileIDSize(clang::FileID) const'
ClangTU.cpp:(.text+0x7ad9): undefined reference to `clang::Sema::InstantiateClassTemplateSpecialization(clang::SourceLocation, clang::ClassTemplateSpecializationDecl*, clang::TemplateSpecializationKind, bool)'
ClangTU.cpp:(.text+0x7b8d): undefined reference to `clang::SourceManager::getFileIDSize(clang::FileID) const'
ClangTU.cpp:(.text+0x7bb4): undefined reference to `clang::Sema::InstantiateClassTemplateSpecializationMembers(clang::SourceLocation, clang::ClassTemplateSpecializationDecl*, clang::TemplateSpecializationKind)'
ClangTU.cpp:(.text+0x7c6c): undefined reference to `clang::SourceManager::loadSLocEntry(unsigned int, bool*) const'
ClangTU.cpp:(.text+0x7cd5): undefined reference to `clang::SourceManager::loadSLocEntry(unsigned int, bool*) const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::dataTraverse(clang::Stmt*)':
ClangTU.cpp:(.text+0x7f5a): undefined reference to `clang::StmtIteratorBase::NextVA()'
ClangTU.cpp:(.text+0x7f67): undefined reference to `clang::Stmt::children()'
ClangTU.cpp:(.text+0x7f98): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
ClangTU.cpp:(.text+0x8119): undefined reference to `clang::Stmt::children()'
ClangTU.cpp:(.text+0x82a6): undefined reference to `clang::StmtIteratorBase::NextDecl(bool)'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseDeclContextHelper(clang::DeclContext*)':
ClangTU.cpp:(.text+0x8337): undefined reference to `clang::DeclContext::decls_begin() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `Wide::ClangUtil::CodeGenConsumer::~CodeGenConsumer()':
ClangTU.cpp:(.text._ZN4Wide9ClangUtil15CodeGenConsumerD2Ev[_ZN4Wide9ClangUtil15CodeGenConsumerD5Ev]+0x3): undefined reference to `vtable for clang::ASTConsumer'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `Wide::ClangUtil::CodeGenConsumer::~CodeGenConsumer()':
ClangTU.cpp:(.text._ZN4Wide9ClangUtil15CodeGenConsumerD0Ev[_ZN4Wide9ClangUtil15CodeGenConsumerD0Ev]+0x3): undefined reference to `vtable for clang::ASTConsumer'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseUnaryTypeTraitExpr(clang::UnaryTypeTraitExpr*)':
ClangTU.cpp:(.text.unlikely+0x4e0): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseVAArgExpr(clang::VAArgExpr*)':
ClangTU.cpp:(.text.unlikely+0x59c): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor::VisitCallExpr(clang::CallExpr*)':
ClangTU.cpp:(.text.unlikely+0x5d8): undefined reference to `clang::CallExpr::getDirectCallee()'
ClangTU.cpp:(.text.unlikely+0x5e5): undefined reference to `clang::CallExpr::getDirectCallee()'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseGCCAsmStmt(clang::GCCAsmStmt*)':
ClangTU.cpp:(.text.unlikely+0x713): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseMSAsmStmt(clang::MSAsmStmt*)':
ClangTU.cpp:(.text.unlikely+0x7a7): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseAttributedStmt(clang::AttributedStmt*)':
ClangTU.cpp:(.text.unlikely+0x837): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseBreakStmt(clang::BreakStmt*)':
ClangTU.cpp:(.text.unlikely+0x8c7): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseCXXCatchStmt(clang::CXXCatchStmt*)':
ClangTU.cpp:(.text.unlikely+0x975): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseCXXForRangeStmt(clang::CXXForRangeStmt*)':
ClangTU.cpp:(.text.unlikely+0x9f8): undefined reference to `clang::CXXForRangeStmt::getRangeInit()'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseCXXTryStmt(clang::CXXTryStmt*)':
ClangTU.cpp:(.text.unlikely+0xa8f): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseCapturedStmt(clang::CapturedStmt*)':
ClangTU.cpp:(.text.unlikely+0xadd): undefined reference to `clang::CapturedStmt::children()'
ClangTU.cpp:(.text.unlikely+0xb12): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseCompoundStmt(clang::CompoundStmt*)':
ClangTU.cpp:(.text.unlikely+0xbb0): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseContinueStmt(clang::ContinueStmt*)':
ClangTU.cpp:(.text.unlikely+0xc41): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseDoStmt(clang::DoStmt*)':
ClangTU.cpp:(.text.unlikely+0xcd1): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseBinaryConditionalOperator(clang::BinaryConditionalOperator*)':
ClangTU.cpp:(.text.unlikely+0xd61): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o:ClangTU.cpp:(.text.unlikely+0xdf1): more undefined references to `clang::StmtIteratorBase::GetDeclExpr() const' follow
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseCXXDependentScopeMemberExpr(clang::CXXDependentScopeMemberExpr*)':
ClangTU.cpp:(.text.unlikely+0x1775): undefined reference to `clang::CXXDependentScopeMemberExpr::isImplicitAccess() const'
ClangTU.cpp:(.text.unlikely+0x182a): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseCXXNewExpr(clang::CXXNewExpr*)':
ClangTU.cpp:(.text.unlikely+0x191e): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseCXXNoexceptExpr(clang::CXXNoexceptExpr*)':
ClangTU.cpp:(.text.unlikely+0x19b7): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseCXXNullPtrLiteralExpr(clang::CXXNullPtrLiteralExpr*)':
ClangTU.cpp:(.text.unlikely+0x1a47): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseCXXPseudoDestructorExpr(clang::CXXPseudoDestructorExpr*)':
ClangTU.cpp:(.text.unlikely+0x1b2a): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o:ClangTU.cpp:(.text.unlikely+0x1bf4): more undefined references to `clang::StmtIteratorBase::GetDeclExpr() const' follow
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseLambdaExpr(clang::LambdaExpr*)':
ClangTU.cpp:(.text.unlikely+0x34f2): undefined reference to `clang::LambdaExpr::explicit_capture_begin() const'
ClangTU.cpp:(.text.unlikely+0x34fa): undefined reference to `clang::LambdaExpr::explicit_capture_end() const'
ClangTU.cpp:(.text.unlikely+0x352c): undefined reference to `clang::LambdaExpr::getBody() const'
ClangTU.cpp:(.text.unlikely+0x3544): undefined reference to `clang::LambdaExpr::getCallOperator() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseMSPropertyRefExpr(clang::MSPropertyRefExpr*)':
ClangTU.cpp:(.text.unlikely+0x366b): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseMaterializeTemporaryExpr(clang::MaterializeTemporaryExpr*)':
ClangTU.cpp:(.text.unlikely+0x3703): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseMemberExpr(clang::MemberExpr*)':
ClangTU.cpp:(.text.unlikely+0x3897): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseObjCArrayLiteral(clang::ObjCArrayLiteral*)':
ClangTU.cpp:(.text.unlikely+0x3952): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseObjCBoolLiteralExpr(clang::ObjCBoolLiteralExpr*)':
ClangTU.cpp:(.text.unlikely+0x39e3): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o:ClangTU.cpp:(.text.unlikely+0x3a73): more undefined references to `clang::StmtIteratorBase::GetDeclExpr() const' follow
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseObjCMessageExpr(clang::ObjCMessageExpr*)':
ClangTU.cpp:(.text.unlikely+0x3da7): undefined reference to `clang::ObjCMessageExpr::children()'
ClangTU.cpp:(.text.unlikely+0x3ddf): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseObjCPropertyRefExpr(clang::ObjCPropertyRefExpr*)':
ClangTU.cpp:(.text.unlikely+0x3eb5): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseObjCProtocolExpr(clang::ObjCProtocolExpr*)':
ClangTU.cpp:(.text.unlikely+0x3f5d): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseObjCSelectorExpr(clang::ObjCSelectorExpr*)':
ClangTU.cpp:(.text.unlikely+0x3fed): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseObjCStringLiteral(clang::ObjCStringLiteral*)':
ClangTU.cpp:(.text.unlikely+0x407d): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o:ClangTU.cpp:(.text.unlikely+0x410d): more undefined references to `clang::StmtIteratorBase::GetDeclExpr() const' follow
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseUnresolvedMemberExpr(clang::UnresolvedMemberExpr*)':
ClangTU.cpp:(.text.unlikely+0x43ab): undefined reference to `clang::UnresolvedMemberExpr::isImplicitAccess() const'
ClangTU.cpp:(.text.unlikely+0x445b): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseParenExpr(clang::ParenExpr*)':
ClangTU.cpp:(.text.unlikely+0x4507): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseParenListExpr(clang::ParenListExpr*)':
ClangTU.cpp:(.text.unlikely+0x459a): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraversePredefinedExpr(clang::PredefinedExpr*)':
ClangTU.cpp:(.text.unlikely+0x462b): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseShuffleVectorExpr(clang::ShuffleVectorExpr*)':
ClangTU.cpp:(.text.unlikely+0x473e): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o:ClangTU.cpp:(.text.unlikely+0x47cf): more undefined references to `clang::StmtIteratorBase::GetDeclExpr() const' follow
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseUnaryExprOrTypeTraitExpr(clang::UnaryExprOrTypeTraitExpr*)':
ClangTU.cpp:(.text.unlikely+0x4b65): undefined reference to `clang::UnaryExprOrTypeTraitExpr::children()'
ClangTU.cpp:(.text.unlikely+0x4b98): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseUnaryOperator(clang::UnaryOperator*)':
ClangTU.cpp:(.text.unlikely+0x4c41): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseForStmt(clang::ForStmt*)':
ClangTU.cpp:(.text.unlikely+0x4cd1): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseGotoStmt(clang::GotoStmt*)':
ClangTU.cpp:(.text.unlikely+0x4d61): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::RecursiveASTVisitor<Wide::ClangUtil::ClangTU::MangleName(clang::NamedDecl*)::{lambda(clang::FunctionDecl*)#1}::operator()(clang::FunctionDecl*) const::GeneratingVisitor>::TraverseIfStmt(clang::IfStmt*)':
ClangTU.cpp:(.text.unlikely+0x4df1): undefined reference to `clang::StmtIteratorBase::GetDeclExpr() const'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o:ClangTU.cpp:(.text.unlikely+0x4e81): more undefined references to `clang::StmtIteratorBase::GetDeclExpr() const' follow
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `clang::StmtRange::operator++()':
ClangTU.cpp:(.text._ZN5clang9StmtRangeppEv[_ZN5clang9StmtRangeppEv]+0x2b): undefined reference to `clang::StmtIteratorBase::NextVA()'
ClangTU.cpp:(.text._ZN5clang9StmtRangeppEv[_ZN5clang9StmtRangeppEv]+0x5e): undefined reference to `clang::StmtIteratorBase::NextDecl(bool)'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o: In function `Wide::ClangUtil::ClangTU::Impl::Impl(llvm::LLVMContext&, std::string, Wide::Semantic::ClangCommonState&)':
ClangTU.cpp:(.text._ZN4Wide9ClangUtil7ClangTU4ImplC2ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE[_ZN4Wide9ClangUtil7ClangTU4ImplC5ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE]+0x1fb): undefined reference to `clang::SourceManager::SourceManager(clang::DiagnosticsEngine&, clang::FileManager&, bool)'
ClangTU.cpp:(.text._ZN4Wide9ClangUtil7ClangTU4ImplC2ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE[_ZN4Wide9ClangUtil7ClangTU4ImplC5ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE]+0x28e): undefined reference to `clang::Preprocessor::Preprocessor(llvm::IntrusiveRefCntPtr<clang::PreprocessorOptions>, clang::DiagnosticsEngine&, clang::LangOptions&, clang::TargetInfo const*, clang::SourceManager&, clang::HeaderSearch&, clang::ModuleLoader&, clang::IdentifierInfoLookup*, bool, bool, bool)'
ClangTU.cpp:(.text._ZN4Wide9ClangUtil7ClangTU4ImplC2ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE[_ZN4Wide9ClangUtil7ClangTU4ImplC5ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE]+0x5b0): undefined reference to `clang::ASTContext::ASTContext(clang::LangOptions&, clang::SourceManager&, clang::TargetInfo const*, clang::IdentifierTable&, clang::SelectorTable&, clang::Builtin::Context&, unsigned int, bool)'
ClangTU.cpp:(.text._ZN4Wide9ClangUtil7ClangTU4ImplC2ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE[_ZN4Wide9ClangUtil7ClangTU4ImplC5ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE]+0x5fb): undefined reference to `clang::Sema::Sema(clang::Preprocessor&, clang::ASTContext&, clang::ASTConsumer&, clang::TranslationUnitKind, clang::CodeCompleteConsumer*)'
ClangTU.cpp:(.text._ZN4Wide9ClangUtil7ClangTU4ImplC2ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE[_ZN4Wide9ClangUtil7ClangTU4ImplC5ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE]+0x6bf): undefined reference to `llvm::Module::Module(llvm::StringRef, llvm::LLVMContext&)'
ClangTU.cpp:(.text._ZN4Wide9ClangUtil7ClangTU4ImplC2ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE[_ZN4Wide9ClangUtil7ClangTU4ImplC5ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE]+0x6f6): undefined reference to `clang::CodeGen::CodeGenModule::CodeGenModule(clang::ASTContext&, clang::CodeGenOptions const&, llvm::Module&, llvm::DataLayout const&, clang::DiagnosticsEngine&)'
ClangTU.cpp:(.text._ZN4Wide9ClangUtil7ClangTU4ImplC2ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE[_ZN4Wide9ClangUtil7ClangTU4ImplC5ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE]+0x86c): undefined reference to `clang::InitializePreprocessor(clang::Preprocessor&, clang::PreprocessorOptions const&, clang::HeaderSearchOptions const&, clang::FrontendOptions const&)'
ClangTU.cpp:(.text._ZN4Wide9ClangUtil7ClangTU4ImplC2ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE[_ZN4Wide9ClangUtil7ClangTU4ImplC5ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE]+0x884): undefined reference to `clang::Builtin::Context::InitializeBuiltins(clang::IdentifierTable&, clang::LangOptions const&)'
ClangTU.cpp:(.text._ZN4Wide9ClangUtil7ClangTU4ImplC2ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE[_ZN4Wide9ClangUtil7ClangTU4ImplC5ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE]+0x8e4): undefined reference to `clang::HeaderSearch::LookupFile(llvm::StringRef, bool, clang::DirectoryLookup const*, clang::DirectoryLookup const*&, clang::FileEntry const*, llvm::SmallVectorImpl<char>*, llvm::SmallVectorImpl<char>*, clang::Module**, bool)'
ClangTU.cpp:(.text._ZN4Wide9ClangUtil7ClangTU4ImplC2ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE[_ZN4Wide9ClangUtil7ClangTU4ImplC5ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE]+0x8fc): undefined reference to `clang::SourceManager::getOrCreateContentCache(clang::FileEntry const*, bool)'
ClangTU.cpp:(.text._ZN4Wide9ClangUtil7ClangTU4ImplC2ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE[_ZN4Wide9ClangUtil7ClangTU4ImplC5ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE]+0x91c): undefined reference to `clang::SourceManager::createFileID(clang::SrcMgr::ContentCache const*, clang::SourceLocation, clang::SrcMgr::CharacteristicKind, int, unsigned int)'
ClangTU.cpp:(.text._ZN4Wide9ClangUtil7ClangTU4ImplC2ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE[_ZN4Wide9ClangUtil7ClangTU4ImplC5ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE]+0x966): undefined reference to `clang::ParseAST(clang::Sema&, bool, bool)'
ClangTU.cpp:(.text._ZN4Wide9ClangUtil7ClangTU4ImplC2ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE[_ZN4Wide9ClangUtil7ClangTU4ImplC5ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE]+0xaa0): undefined reference to `clang::FileManager::getFile(llvm::StringRef, bool, bool)'
ClangTU.cpp:(.text._ZN4Wide9ClangUtil7ClangTU4ImplC2ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE[_ZN4Wide9ClangUtil7ClangTU4ImplC5ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE]+0xd26): undefined reference to `clang::CodeGen::CodeGenModule::~CodeGenModule()'
ClangTU.cpp:(.text._ZN4Wide9ClangUtil7ClangTU4ImplC2ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE[_ZN4Wide9ClangUtil7ClangTU4ImplC5ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE]+0xd31): undefined reference to `llvm::Module::~Module()'
ClangTU.cpp:(.text._ZN4Wide9ClangUtil7ClangTU4ImplC2ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE[_ZN4Wide9ClangUtil7ClangTU4ImplC5ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE]+0xd6c): undefined reference to `clang::Sema::~Sema()'
ClangTU.cpp:(.text._ZN4Wide9ClangUtil7ClangTU4ImplC2ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE[_ZN4Wide9ClangUtil7ClangTU4ImplC5ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE]+0xd7b): undefined reference to `vtable for clang::ASTConsumer'
ClangTU.cpp:(.text._ZN4Wide9ClangUtil7ClangTU4ImplC2ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE[_ZN4Wide9ClangUtil7ClangTU4ImplC5ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE]+0xd83): undefined reference to `clang::ASTContext::~ASTContext()'
ClangTU.cpp:(.text._ZN4Wide9ClangUtil7ClangTU4ImplC2ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE[_ZN4Wide9ClangUtil7ClangTU4ImplC5ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE]+0xd8d): undefined reference to `clang::Preprocessor::~Preprocessor()'
ClangTU.cpp:(.text._ZN4Wide9ClangUtil7ClangTU4ImplC2ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE[_ZN4Wide9ClangUtil7ClangTU4ImplC5ERN4llvm11LLVMContextESsRNS_8Semantic16ClangCommonStateE]+0xd97): undefined reference to `clang::SourceManager::~SourceManager()'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o:(.rodata._ZTIN4Wide9ClangUtil15CodeGenConsumerE[_ZTIN4Wide9ClangUtil15CodeGenConsumerE]+0x10): undefined reference to `typeinfo for clang::ASTConsumer'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o:(.rodata._ZTVN4Wide9ClangUtil15CodeGenConsumerE[_ZTVN4Wide9ClangUtil15CodeGenConsumerE]+0x30): undefined reference to `clang::ASTConsumer::HandleInterestingDecl(clang::DeclGroupRef)'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o:(.rodata._ZTVN4Wide9ClangUtil15CodeGenConsumerE[_ZTVN4Wide9ClangUtil15CodeGenConsumerE]+0x50): undefined reference to `clang::ASTConsumer::HandleTopLevelDeclInObjCContainer(clang::DeclGroupRef)'
./ClangExperiments/Stages/Semantic/ClangTU.cpp.o:(.rodata._ZTVN4Wide9ClangUtil15CodeGenConsumerE[_ZTVN4Wide9ClangUtil15CodeGenConsumerE]+0x58): undefined reference to `clang::ASTConsumer::HandleImplicitImportDecl(clang::ImportDecl*)'
./ClangExperiments/Stages/Semantic/UserDefinedType.cpp.o: In function `std::_Function_handler<llvm::Type* (llvm::Module*), Wide::Semantic::UserDefinedType::UserDefinedType(Wide::AST::Type*, Wide::Semantic::Analyzer&)::{lambda(llvm::Module*)#1}>::_M_invoke(std::_Any_data const&, llvm::Module*)':
UserDefinedType.cpp:(.text+0x5b3): undefined reference to `llvm::Module::getTypeByName(llvm::StringRef) const'
UserDefinedType.cpp:(.text+0x5dd): undefined reference to `llvm::Module::getTypeByName(llvm::StringRef) const'
UserDefinedType.cpp:(.text+0x6b5): undefined reference to `llvm::StructType::create(llvm::ArrayRef<llvm::Type*>, llvm::StringRef, bool)'
UserDefinedType.cpp:(.text+0x6f7): undefined reference to `llvm::Module::getTypeByName(llvm::StringRef) const'
UserDefinedType.cpp:(.text+0x71c): undefined reference to `llvm::Type::getInt8Ty(llvm::LLVMContext&)'
./ClangExperiments/Stages/Semantic/UserDefinedType.cpp.o: In function `std::_Function_handler<llvm::Type* (llvm::Module*), Wide::Semantic::UserDefinedType::GetClangType(Wide::ClangUtil::ClangTU&, Wide::Semantic::Analyzer&)::{lambda(llvm::Module*)#1}>::_M_invoke(std::_Any_data const&, llvm::Module*)':
UserDefinedType.cpp:(.text+0x7f7): undefined reference to `llvm::Type::getSequentialElementType() const'
UserDefinedType.cpp:(.text+0x920): undefined reference to `llvm::Type::getPointerTo(unsigned int)'
UserDefinedType.cpp:(.text+0x998): undefined reference to `llvm::FunctionType::get(llvm::Type*, llvm::ArrayRef<llvm::Type*>, bool)'
UserDefinedType.cpp:(.text+0x9a2): undefined reference to `llvm::Type::getPointerTo(unsigned int)'
UserDefinedType.cpp:(.text+0xa07): undefined reference to `clang::ASTContext::getTypeDeclTypeSlow(clang::TypeDecl const*) const'
./ClangExperiments/Stages/Semantic/UserDefinedType.cpp.o: In function `Wide::Semantic::UserDefinedType::GetClangType(Wide::ClangUtil::ClangTU&, Wide::Semantic::Analyzer&)':
UserDefinedType.cpp:(.text+0x2a47): undefined reference to `clang::CXXRecordDecl::Create(clang::ASTContext const&, clang::TagTypeKind, clang::DeclContext*, clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::CXXRecordDecl*, bool)'
UserDefinedType.cpp:(.text+0x2a6f): undefined reference to `clang::TagDecl::startDefinition()'
UserDefinedType.cpp:(.text+0x2b20): undefined reference to `clang::FieldDecl::Create(clang::ASTContext const&, clang::DeclContext*, clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::QualType, clang::TypeSourceInfo*, clang::Expr*, bool, clang::InClassInitStyle)'
UserDefinedType.cpp:(.text+0x2b4a): undefined reference to `clang::Decl::CheckAccessDeclContext() const'
UserDefinedType.cpp:(.text+0x2b57): undefined reference to `clang::DeclContext::addDecl(clang::Decl*)'
UserDefinedType.cpp:(.text+0x2cb9): undefined reference to `clang::DeclContext::addDecl(clang::Decl*)'
UserDefinedType.cpp:(.text+0x2fee): undefined reference to `clang::DeclarationNameTable::getCXXOperatorName(clang::OverloadedOperatorKind)'
UserDefinedType.cpp:(.text+0x300e): undefined reference to `clang::DeclarationNameLoc::DeclarationNameLoc(clang::DeclarationName)'
UserDefinedType.cpp:(.text+0x3052): undefined reference to `clang::CXXMethodDecl::Create(clang::ASTContext&, clang::CXXRecordDecl*, clang::SourceLocation, clang::DeclarationNameInfo const&, clang::QualType, clang::TypeSourceInfo*, clang::StorageClass, bool, bool, clang::SourceLocation)'
UserDefinedType.cpp:(.text+0x305f): undefined reference to `clang::CXXMethodDecl::isStatic() const'
UserDefinedType.cpp:(.text+0x3078): undefined reference to `clang::Decl::CheckAccessDeclContext() const'
UserDefinedType.cpp:(.text+0x30e4): undefined reference to `clang::Decl::getASTContext() const'
UserDefinedType.cpp:(.text+0x30f5): undefined reference to `clang::FunctionDecl::setParams(clang::ASTContext&, llvm::ArrayRef<clang::ParmVarDecl*>)'
UserDefinedType.cpp:(.text+0x3108): undefined reference to `clang::DeclContext::addDecl(clang::Decl*)'
UserDefinedType.cpp:(.text+0x3270): undefined reference to `clang::ParmVarDecl::Create(clang::ASTContext&, clang::DeclContext*, clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::QualType, clang::TypeSourceInfo*, clang::StorageClass, clang::Expr*)'
UserDefinedType.cpp:(.text+0x3753): undefined reference to `clang::ASTContext::getTypeDeclTypeSlow(clang::TypeDecl const*) const'
UserDefinedType.cpp:(.text+0x3765): undefined reference to `clang::ASTContext::getTypeDeclTypeSlow(clang::TypeDecl const*) const'
./ClangExperiments/Stages/Semantic/OverloadSet.cpp.o: In function `std::_Function_handler<llvm::Type* (llvm::Module*), Wide::Semantic::OverloadSet::GetLLVMType(Wide::Semantic::Analyzer&)::{lambda(llvm::Module*)#1}>::_M_invoke(std::_Any_data const&, llvm::Module*)':
OverloadSet.cpp:(.text+0x37): undefined reference to `llvm::Module::getTypeByName(llvm::StringRef) const'
OverloadSet.cpp:(.text+0x4b): undefined reference to `llvm::Module::getTypeByName(llvm::StringRef) const'
OverloadSet.cpp:(.text+0x75): undefined reference to `llvm::Type::getInt8Ty(llvm::LLVMContext&)'
OverloadSet.cpp:(.text+0x88): undefined reference to `llvm::StructType::create(llvm::StringRef, llvm::Type*, ...)'
./ClangExperiments/Stages/Semantic/OverloadSet.cpp.o: In function `std::_Function_handler<llvm::Type* (llvm::Module*), Wide::Semantic::OverloadSet::GetLLVMType(Wide::Semantic::Analyzer&)::{lambda(llvm::Module*)#2}>::_M_invoke(std::_Any_data const&, llvm::Module*)':
OverloadSet.cpp:(.text+0x7a7): undefined reference to `llvm::Module::getTypeByName(llvm::StringRef) const'
OverloadSet.cpp:(.text+0x7bb): undefined reference to `llvm::Module::getTypeByName(llvm::StringRef) const'
OverloadSet.cpp:(.text+0x7e2): undefined reference to `llvm::Type::getPointerTo(unsigned int)'
OverloadSet.cpp:(.text+0x7f5): undefined reference to `llvm::StructType::create(llvm::StringRef, llvm::Type*, ...)'
./ClangExperiments/Stages/Semantic/OverloadSet.cpp.o: In function `std::_Function_handler<llvm::Type* (llvm::Module*), Wide::Semantic::OverloadSet::GetClangType(Wide::ClangUtil::ClangTU&, Wide::Semantic::Analyzer&)::{lambda(llvm::Module*)#1}>::_M_invoke(std::_Any_data const&, llvm::Module*)':
OverloadSet.cpp:(.text+0x1397): undefined reference to `llvm::Type::getSequentialElementType() const'
OverloadSet.cpp:(.text+0x14c0): undefined reference to `llvm::Type::getPointerTo(unsigned int)'
OverloadSet.cpp:(.text+0x1538): undefined reference to `llvm::FunctionType::get(llvm::Type*, llvm::ArrayRef<llvm::Type*>, bool)'
OverloadSet.cpp:(.text+0x1542): undefined reference to `llvm::Type::getPointerTo(unsigned int)'
OverloadSet.cpp:(.text+0x15a7): undefined reference to `clang::ASTContext::getTypeDeclTypeSlow(clang::TypeDecl const*) const'
./ClangExperiments/Stages/Semantic/OverloadSet.cpp.o: In function `Wide::Semantic::OverloadSet::GetClangType(Wide::ClangUtil::ClangTU&, Wide::Semantic::Analyzer&)':
OverloadSet.cpp:(.text+0x19de): undefined reference to `clang::CXXRecordDecl::Create(clang::ASTContext const&, clang::TagTypeKind, clang::DeclContext*, clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::CXXRecordDecl*, bool)'
OverloadSet.cpp:(.text+0x1a06): undefined reference to `clang::TagDecl::startDefinition()'
OverloadSet.cpp:(.text+0x1a3a): undefined reference to `clang::ASTContext::getPointerType(clang::QualType) const'
OverloadSet.cpp:(.text+0x1aba): undefined reference to `clang::FieldDecl::Create(clang::ASTContext const&, clang::DeclContext*, clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::QualType, clang::TypeSourceInfo*, clang::Expr*, bool, clang::InClassInitStyle)'
OverloadSet.cpp:(.text+0x1ae2): undefined reference to `clang::Decl::CheckAccessDeclContext() const'
OverloadSet.cpp:(.text+0x1af3): undefined reference to `clang::DeclContext::addDecl(clang::Decl*)'
OverloadSet.cpp:(.text+0x1d2c): undefined reference to `clang::DeclarationNameTable::getCXXOperatorName(clang::OverloadedOperatorKind)'
OverloadSet.cpp:(.text+0x1d50): undefined reference to `clang::DeclarationNameLoc::DeclarationNameLoc(clang::DeclarationName)'
OverloadSet.cpp:(.text+0x1d8f): undefined reference to `clang::CXXMethodDecl::Create(clang::ASTContext&, clang::CXXRecordDecl*, clang::SourceLocation, clang::DeclarationNameInfo const&, clang::QualType, clang::TypeSourceInfo*, clang::StorageClass, bool, bool, clang::SourceLocation)'
OverloadSet.cpp:(.text+0x1d9c): undefined reference to `clang::CXXMethodDecl::isStatic() const'
OverloadSet.cpp:(.text+0x1db5): undefined reference to `clang::Decl::CheckAccessDeclContext() const'
OverloadSet.cpp:(.text+0x1e19): undefined reference to `clang::Decl::getASTContext() const'
OverloadSet.cpp:(.text+0x1e2c): undefined reference to `clang::FunctionDecl::setParams(clang::ASTContext&, llvm::ArrayRef<clang::ParmVarDecl*>)'
OverloadSet.cpp:(.text+0x1e3f): undefined reference to `clang::DeclContext::addDecl(clang::Decl*)'
OverloadSet.cpp:(.text+0x1ea1): undefined reference to `clang::DeclContext::addDecl(clang::Decl*)'
OverloadSet.cpp:(.text+0x2156): undefined reference to `clang::ParmVarDecl::Create(clang::ASTContext&, clang::DeclContext*, clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::QualType, clang::TypeSourceInfo*, clang::StorageClass, clang::Expr*)'
OverloadSet.cpp:(.text+0x2731): undefined reference to `clang::ASTContext::getTypeDeclTypeSlow(clang::TypeDecl const*) const'
OverloadSet.cpp:(.text+0x2743): undefined reference to `clang::ASTContext::getTypeDeclTypeSlow(clang::TypeDecl const*) const'
./ClangExperiments/Stages/Semantic/ClangType.cpp.o: In function `std::_Function_handler<void (clang::CXXMethodDecl*), Wide::Semantic::ClangType::ClangType(Wide::ClangUtil::ClangTU*, clang::QualType)::{lambda(clang::CXXMethodDecl*)#4}>::_M_invoke(std::_Any_data const&, clang::CXXMethodDecl*)':
ClangType.cpp:(.text+0x16c): undefined reference to `clang::Sema::DefineImplicitCopyAssignment(clang::SourceLocation, clang::CXXMethodDecl*)'
./ClangExperiments/Stages/Semantic/ClangType.cpp.o: In function `std::_Function_handler<void (clang::CXXMethodDecl*), Wide::Semantic::ClangType::ClangType(Wide::ClangUtil::ClangTU*, clang::QualType)::{lambda(clang::CXXMethodDecl*)#8}>::_M_invoke(std::_Any_data const&, clang::CXXMethodDecl*)':
ClangType.cpp:(.text+0x1fc): undefined reference to `clang::Sema::DefineImplicitCopyConstructor(clang::SourceLocation, clang::CXXConstructorDecl*)'
./ClangExperiments/Stages/Semantic/ClangType.cpp.o: In function `std::_Function_handler<void (clang::CXXMethodDecl*), Wide::Semantic::ClangType::ClangType(Wide::ClangUtil::ClangTU*, clang::QualType)::{lambda(clang::CXXMethodDecl*)#12}>::_M_invoke(std::_Any_data const&, clang::CXXMethodDecl*)':
ClangType.cpp:(.text+0x28c): undefined reference to `clang::Sema::DefineImplicitMoveConstructor(clang::SourceLocation, clang::CXXConstructorDecl*)'
./ClangExperiments/Stages/Semantic/ClangType.cpp.o: In function `std::_Function_handler<void (clang::CXXMethodDecl*), Wide::Semantic::ClangType::ClangType(Wide::ClangUtil::ClangTU*, clang::QualType)::{lambda(clang::CXXMethodDecl*)#16}>::_M_invoke(std::_Any_data const&, clang::CXXMethodDecl*)':
ClangType.cpp:(.text+0x31c): undefined reference to `clang::Sema::DefineImplicitDestructor(clang::SourceLocation, clang::CXXDestructorDecl*)'
./ClangExperiments/Stages/Semantic/ClangType.cpp.o: In function `std::_Function_handler<void (clang::CXXMethodDecl*), Wide::Semantic::ClangType::ClangType(Wide::ClangUtil::ClangTU*, clang::QualType)::{lambda(clang::CXXMethodDecl*)#20}>::_M_invoke(std::_Any_data const&, clang::CXXMethodDecl*)':
ClangType.cpp:(.text+0x3ac): undefined reference to `clang::Sema::DefineImplicitMoveAssignment(clang::SourceLocation, clang::CXXMethodDecl*)'
./ClangExperiments/Stages/Semantic/ClangType.cpp.o: In function `std::_Function_handler<void (clang::CXXMethodDecl*), Wide::Semantic::ClangType::ClangType(Wide::ClangUtil::ClangTU*, clang::QualType)::{lambda(clang::CXXMethodDecl*)#24}>::_M_invoke(std::_Any_data const&, clang::CXXMethodDecl*)':
ClangType.cpp:(.text+0x43c): undefined reference to `clang::Sema::DefineImplicitDefaultConstructor(clang::SourceLocation, clang::CXXConstructorDecl*)'
./ClangExperiments/Stages/Semantic/ClangType.cpp.o: In function `Wide::Semantic::ClangType::IsComplexType()':
ClangType.cpp:(.text+0x134c): undefined reference to `clang::Type::getAsCXXRecordDecl() const'
./ClangExperiments/Stages/Semantic/ClangType.cpp.o: In function `Wide::Semantic::ClangType::ClangType(Wide::ClangUtil::ClangTU*, clang::QualType)':
ClangType.cpp:(.text+0x13db): undefined reference to `clang::Type::getAsCXXRecordDecl() const'
ClangType.cpp:(.text+0x1dc7): undefined reference to `clang::Sema::EvaluateImplicitExceptionSpec(clang::SourceLocation, clang::CXXMethodDecl*)'
ClangType.cpp:(.text+0x1e02): undefined reference to `clang::Sema::EvaluateImplicitExceptionSpec(clang::SourceLocation, clang::CXXMethodDecl*)'
ClangType.cpp:(.text+0x1e42): undefined reference to `clang::Sema::EvaluateImplicitExceptionSpec(clang::SourceLocation, clang::CXXMethodDecl*)'
ClangType.cpp:(.text+0x1e82): undefined reference to `clang::Sema::EvaluateImplicitExceptionSpec(clang::SourceLocation, clang::CXXMethodDecl*)'
ClangType.cpp:(.text+0x1ec2): undefined reference to `clang::Sema::EvaluateImplicitExceptionSpec(clang::SourceLocation, clang::CXXMethodDecl*)'
./ClangExperiments/Stages/Semantic/ClangType.cpp.o:ClangType.cpp:(.text+0x1f02): more undefined references to `clang::Sema::EvaluateImplicitExceptionSpec(clang::SourceLocation, clang::CXXMethodDecl*)' follow
./ClangExperiments/Stages/Semantic/ClangType.cpp.o: In function `Wide::Semantic::ClangType::ClangType(Wide::ClangUtil::ClangTU*, clang::QualType)':
ClangType.cpp:(.text+0x219a): undefined reference to `clang::Sema::InstantiateClassTemplateSpecialization(clang::SourceLocation, clang::ClassTemplateSpecializationDecl*, clang::TemplateSpecializationKind, bool)'
ClangType.cpp:(.text+0x21ba): undefined reference to `clang::Sema::EvaluateImplicitExceptionSpec(clang::SourceLocation, clang::CXXMethodDecl*)'
ClangType.cpp:(.text+0x21da): undefined reference to `clang::Sema::EvaluateImplicitExceptionSpec(clang::SourceLocation, clang::CXXMethodDecl*)'
ClangType.cpp:(.text+0x21fa): undefined reference to `clang::Sema::EvaluateImplicitExceptionSpec(clang::SourceLocation, clang::CXXMethodDecl*)'
ClangType.cpp:(.text+0x221a): undefined reference to `clang::Sema::EvaluateImplicitExceptionSpec(clang::SourceLocation, clang::CXXMethodDecl*)'
ClangType.cpp:(.text+0x223a): undefined reference to `clang::Sema::EvaluateImplicitExceptionSpec(clang::SourceLocation, clang::CXXMethodDecl*)'
./ClangExperiments/Stages/Semantic/ClangType.cpp.o:ClangType.cpp:(.text+0x225a): more undefined references to `clang::Sema::EvaluateImplicitExceptionSpec(clang::SourceLocation, clang::CXXMethodDecl*)' follow
./ClangExperiments/Stages/Semantic/ClangType.cpp.o: In function `Wide::Semantic::ClangType::BuildBooleanConversion(Wide::Semantic::Expression, Wide::Semantic::Analyzer&)':
ClangType.cpp:(.text+0x2a28): undefined reference to `clang::QualType::getNonLValueExprType(clang::ASTContext&) const'
ClangType.cpp:(.text+0x2a57): undefined reference to `clang::Stmt::StatisticsEnabled'
ClangType.cpp:(.text+0x2a68): undefined reference to `clang::Stmt::addStmtClass(clang::Stmt::StmtClass)'
ClangType.cpp:(.text+0x2b11): undefined reference to `clang::Sema::PerformContextuallyConvertToBool(clang::Expr*)'
ClangType.cpp:(.text+0x2b37): undefined reference to `clang::CallExpr::getDirectCallee()'
ClangType.cpp:(.text+0x2def): undefined reference to `vtable for llvm::raw_os_ostream'
ClangType.cpp:(.text+0x300b): undefined reference to `clang::Stmt::printPretty(llvm::raw_ostream&, clang::PrinterHelper*, clang::PrintingPolicy const&, unsigned int) const'
ClangType.cpp:(.text+0x30af): undefined reference to `llvm::raw_os_ostream::~raw_os_ostream()'
ClangType.cpp:(.text+0x32f6): undefined reference to `llvm::raw_os_ostream::~raw_os_ostream()'
./ClangExperiments/Stages/Semantic/ClangType.cpp.o: In function `Wide::Semantic::ClangType::BuildDereference(Wide::Semantic::Expression, Wide::Semantic::Analyzer&)':
ClangType.cpp:(.text+0x354d): undefined reference to `clang::QualType::getNonLValueExprType(clang::ASTContext&) const'
ClangType.cpp:(.text+0x355d): undefined reference to `clang::Stmt::StatisticsEnabled'
ClangType.cpp:(.text+0x356d): undefined reference to `clang::Stmt::addStmtClass(clang::Stmt::StmtClass)'
ClangType.cpp:(.text+0x35b3): undefined reference to `clang::DeclarationNameTable::getCXXOperatorName(clang::OverloadedOperatorKind)'
ClangType.cpp:(.text+0x35cd): undefined reference to `clang::DeclarationNameLoc::DeclarationNameLoc(clang::DeclarationName)'
ClangType.cpp:(.text+0x36a7): undefined reference to `clang::LookupResult::configure()'
ClangType.cpp:(.text+0x36bd): undefined reference to `clang::Type::getAsCXXRecordDecl() const'
ClangType.cpp:(.text+0x36e5): undefined reference to `clang::Sema::LookupQualifiedName(clang::LookupResult&, clang::DeclContext*, bool)'
ClangType.cpp:(.text+0x375b): undefined reference to `llvm::SmallVectorBase::grow_pod(void*, unsigned long, unsigned long)'
ClangType.cpp:(.text+0x38ca): undefined reference to `clang::LookupResult::deletePaths(clang::CXXBasePaths*)'
ClangType.cpp:(.text+0x39b6): undefined reference to `clang::LookupResult::sanityImpl() const'
ClangType.cpp:(.text+0x39f0): undefined reference to `clang::Sema::CheckLookupAccess(clang::LookupResult const&)'
ClangType.cpp:(.text+0x3b59): undefined reference to `clang::Sema::DiagnoseAmbiguousLookup(clang::LookupResult&)'
./ClangExperiments/Stages/Semantic/ClangType.cpp.o: In function `Wide::Semantic::ClangType::AccessMember(Wide::Semantic::Expression, std::string, Wide::Semantic::Analyzer&)':
ClangType.cpp:(.text+0x3f5e): undefined reference to `clang::DeclarationNameLoc::DeclarationNameLoc(clang::DeclarationName)'
ClangType.cpp:(.text+0x404c): undefined reference to `clang::LookupResult::configure()'
ClangType.cpp:(.text+0x408e): undefined reference to `clang::TagType::getDecl() const'
ClangType.cpp:(.text+0x40b9): undefined reference to `clang::Sema::LookupQualifiedName(clang::LookupResult&, clang::DeclContext*, bool)'
ClangType.cpp:(.text+0x40ce): undefined reference to `clang::LookupResult::sanityImpl() const'
ClangType.cpp:(.text+0x40e9): undefined reference to `clang::LookupResult::sanityImpl() const'
ClangType.cpp:(.text+0x416d): undefined reference to `llvm::SmallVectorBase::grow_pod(void*, unsigned long, unsigned long)'
ClangType.cpp:(.text+0x424a): undefined reference to `clang::LookupResult::deletePaths(clang::CXXBasePaths*)'
ClangType.cpp:(.text+0x42ad): undefined reference to `clang::LookupResult::sanityImpl() const'
ClangType.cpp:(.text+0x4385): undefined reference to `clang::LookupResult::sanityImpl() const'
ClangType.cpp:(.text+0x43c5): undefined reference to `clang::Sema::CheckLookupAccess(clang::LookupResult const&)'
ClangType.cpp:(.text+0x43e4): undefined reference to `clang::NamedDecl::getUnderlyingDeclImpl()'
ClangType.cpp:(.text+0x442b): undefined reference to `clang::LookupResult::sanityImpl() const'
ClangType.cpp:(.text+0x44d4): undefined reference to `clang::FunctionDecl::getNumParams() const'
ClangType.cpp:(.text+0x459a): undefined reference to `clang::LookupResult::sanityImpl() const'
ClangType.cpp:(.text+0x4631): undefined reference to `clang::ASTContext::getTypeDeclTypeSlow(clang::TypeDecl const*) const'
ClangType.cpp:(.text+0x463e): undefined reference to `clang::NamedDecl::getUnderlyingDeclImpl()'
ClangType.cpp:(.text+0x4668): undefined reference to `clang::Sema::DiagnoseAmbiguousLookup(clang::LookupResult&)'
ClangType.cpp:(.text+0x467a): undefined reference to `clang::LookupResult::sanityImpl() const'
ClangType.cpp:(.text+0x4745): undefined reference to `clang::NamedDecl::getUnderlyingDeclImpl()'
ClangType.cpp:(.text+0x476b): undefined reference to `clang::NamedDecl::getUnderlyingDeclImpl()'
ClangType.cpp:(.text+0x478d): undefined reference to `clang::LookupResult::sanityImpl() const'
ClangType.cpp:(.text+0x47e6): undefined reference to `clang::NamedDecl::getUnderlyingDeclImpl()'
./ClangExperiments/Stages/Semantic/ClangType.cpp.o: In function `Wide::Semantic::ClangType::BuildOverloadedOperator(Wide::Semantic::Expression, Wide::Semantic::Expression, Wide::Semantic::Analyzer&, clang::OverloadedOperatorKind, clang::BinaryOperatorKind)':
ClangType.cpp:(.text+0x4c36): undefined reference to `clang::DeclarationNameTable::getCXXOperatorName(clang::OverloadedOperatorKind)'
ClangType.cpp:(.text+0x4c76): undefined reference to `clang::QualType::getNonLValueExprType(clang::ASTContext&) const'
ClangType.cpp:(.text+0x4cb4): undefined reference to `clang::QualType::getNonLValueExprType(clang::ASTContext&) const'
ClangType.cpp:(.text+0x4cfb): undefined reference to `clang::Stmt::StatisticsEnabled'
ClangType.cpp:(.text+0x4dfa): undefined reference to `clang::Stmt::StatisticsEnabled'
ClangType.cpp:(.text+0x4f02): undefined reference to `clang::Sema::ArgumentDependentLookup(clang::DeclarationName, bool, clang::SourceLocation, llvm::ArrayRef<clang::Expr*>, clang::ADLResult&)'
ClangType.cpp:(.text+0x5011): undefined reference to `clang::Sema::CreateOverloadedBinOp(clang::SourceLocation, unsigned int, clang::UnresolvedSetImpl const&, clang::Expr*, clang::Expr*)'
ClangType.cpp:(.text+0x5037): undefined reference to `clang::CallExpr::getDirectCallee()'
ClangType.cpp:(.text+0x5099): undefined reference to `clang::FunctionDecl::getNumParams() const'
ClangType.cpp:(.text+0x50de): undefined reference to `clang::FunctionDecl::getNumParams() const'
ClangType.cpp:(.text+0x50ef): undefined reference to `clang::FunctionDecl::getNumParams() const'
ClangType.cpp:(.text+0x53a3): undefined reference to `llvm::SmallVectorBase::grow_pod(void*, unsigned long, unsigned long)'
ClangType.cpp:(.text+0x53db): undefined reference to `clang::Stmt::addStmtClass(clang::Stmt::StmtClass)'
ClangType.cpp:(.text+0x5408): undefined reference to `clang::Stmt::addStmtClass(clang::Stmt::StmtClass)'
ClangType.cpp:(.text+0x5487): undefined reference to `vtable for llvm::raw_os_ostream'
ClangType.cpp:(.text+0x56ae): undefined reference to `clang::Stmt::printPretty(llvm::raw_ostream&, clang::PrinterHelper*, clang::PrintingPolicy const&, unsigned int) const'
ClangType.cpp:(.text+0x574a): undefined reference to `llvm::raw_os_ostream::~raw_os_ostream()'
ClangType.cpp:(.text+0x57cc): undefined reference to `llvm::raw_os_ostream::~raw_os_ostream()'
./ClangExperiments/Stages/Semantic/ClangType.cpp.o: In function `Wide::Semantic::ClangType::RankConversionFrom(Wide::Semantic::Type*, Wide::Semantic::Analyzer&)':
ClangType.cpp:(.text+0x5f69): undefined reference to `clang::Type::getAsCXXRecordDecl() const'
ClangType.cpp:(.text+0x5f72): undefined reference to `clang::DeclContext::decls_begin() const'
ClangType.cpp:(.text+0x6038): undefined reference to `clang::QualType::getNonLValueExprType(clang::ASTContext&) const'
ClangType.cpp:(.text+0x606b): undefined reference to `clang::Stmt::StatisticsEnabled'
ClangType.cpp:(.text+0x613e): undefined reference to `llvm::BumpPtrAllocator::DefaultSlabAllocator'
ClangType.cpp:(.text+0x622d): undefined reference to `llvm::BumpPtrAllocator::BumpPtrAllocator(unsigned long, unsigned long, llvm::SlabAllocator&)'
ClangType.cpp:(.text+0x6274): undefined reference to `clang::Decl::CheckAccessDeclContext() const'
ClangType.cpp:(.text+0x62de): undefined reference to `clang::Sema::AddOverloadCandidate(clang::FunctionDecl*, clang::DeclAccessPair, llvm::ArrayRef<clang::Expr*>, clang::OverloadCandidateSet&, bool, bool, bool)'
ClangType.cpp:(.text+0x6310): undefined reference to `clang::OverloadCandidateSet::BestViableFunction(clang::Sema&, clang::SourceLocation, clang::OverloadCandidate*&, bool)'
ClangType.cpp:(.text+0x632d): undefined reference to `clang::OverloadCandidateSet::destroyCandidates()'
ClangType.cpp:(.text+0x633a): undefined reference to `llvm::BumpPtrAllocator::~BumpPtrAllocator()'
ClangType.cpp:(.text+0x6347): undefined reference to `llvm::SmallPtrSetImpl::~SmallPtrSetImpl()'
ClangType.cpp:(.text+0x646b): undefined reference to `llvm::SmallVectorBase::grow_pod(void*, unsigned long, unsigned long)'
ClangType.cpp:(.text+0x64b1): undefined reference to `clang::Stmt::addStmtClass(clang::Stmt::StmtClass)'
ClangType.cpp:(.text+0x65d8): undefined reference to `llvm::SmallPtrSetImpl::~SmallPtrSetImpl()'
./ClangExperiments/Stages/Semantic/ClangType.cpp.o: In function `Wide::Semantic::ClangType::BuildInplaceConstruction(Wide::Codegen::Expression*, std::vector<Wide::Semantic::Expression, std::allocator<Wide::Semantic::Expression> >, Wide::Semantic::Analyzer&)':
ClangType.cpp:(.text+0x6697): undefined reference to `clang::Type::getAsCXXRecordDecl() const'
ClangType.cpp:(.text+0x66a0): undefined reference to `clang::DeclContext::decls_begin() const'
ClangType.cpp:(.text+0x68ae): undefined reference to `clang::QualType::getNonLValueExprType(clang::ASTContext&) const'
ClangType.cpp:(.text+0x68e7): undefined reference to `clang::Stmt::StatisticsEnabled'
ClangType.cpp:(.text+0x68f8): undefined reference to `clang::Stmt::addStmtClass(clang::Stmt::StmtClass)'
ClangType.cpp:(.text+0x691b): undefined reference to `llvm::SmallVectorBase::grow_pod(void*, unsigned long, unsigned long)'
ClangType.cpp:(.text+0x69eb): undefined reference to `llvm::BumpPtrAllocator::DefaultSlabAllocator'
ClangType.cpp:(.text+0x6ada): undefined reference to `llvm::BumpPtrAllocator::BumpPtrAllocator(unsigned long, unsigned long, llvm::SlabAllocator&)'
ClangType.cpp:(.text+0x6b24): undefined reference to `clang::Decl::CheckAccessDeclContext() const'
ClangType.cpp:(.text+0x6b9a): undefined reference to `clang::Sema::AddOverloadCandidate(clang::FunctionDecl*, clang::DeclAccessPair, llvm::ArrayRef<clang::Expr*>, clang::OverloadCandidateSet&, bool, bool, bool)'
ClangType.cpp:(.text+0x6bcf): undefined reference to `clang::OverloadCandidateSet::BestViableFunction(clang::Sema&, clang::SourceLocation, clang::OverloadCandidate*&, bool)'
ClangType.cpp:(.text+0x6ca4): undefined reference to `clang::FunctionDecl::getNumParams() const'
ClangType.cpp:(.text+0x6cb4): undefined reference to `clang::FunctionDecl::getNumParams() const'
ClangType.cpp:(.text+0x7130): undefined reference to `clang::OverloadCandidateSet::destroyCandidates()'
ClangType.cpp:(.text+0x713d): undefined reference to `llvm::BumpPtrAllocator::~BumpPtrAllocator()'
ClangType.cpp:(.text+0x714a): undefined reference to `llvm::SmallPtrSetImpl::~SmallPtrSetImpl()'
ClangType.cpp:(.text+0x7831): undefined reference to `llvm::SmallPtrSetImpl::~SmallPtrSetImpl()'
./ClangExperiments/Stages/Semantic/ClangType.cpp.o: In function `std::_Function_handler<clang::CXXMethodDecl* (), Wide::Semantic::ClangType::ClangType(Wide::ClangUtil::ClangTU*, clang::QualType)::{lambda()#5}>::_M_invoke(std::_Any_data const&)':
ClangType.cpp:(.text+0x146): undefined reference to `clang::Sema::LookupCopyingAssignment(clang::CXXRecordDecl*, unsigned int, bool, unsigned int)'
./ClangExperiments/Stages/Semantic/ClangType.cpp.o: In function `std::_Function_handler<clang::CXXMethodDecl* (), Wide::Semantic::ClangType::ClangType(Wide::ClangUtil::ClangTU*, clang::QualType)::{lambda()#3}>::_M_invoke(std::_Any_data const&)':
ClangType.cpp:(.text+0x19f): undefined reference to `clang::Sema::DeclareImplicitCopyAssignment(clang::CXXRecordDecl*)'
./ClangExperiments/Stages/Semantic/ClangType.cpp.o: In function `std::_Function_handler<clang::CXXMethodDecl* (), Wide::Semantic::ClangType::ClangType(Wide::ClangUtil::ClangTU*, clang::QualType)::{lambda()#9}>::_M_invoke(std::_Any_data const&)':
ClangType.cpp:(.text+0x1d1): undefined reference to `clang::Sema::LookupCopyingConstructor(clang::CXXRecordDecl*, unsigned int)'
./ClangExperiments/Stages/Semantic/ClangType.cpp.o: In function `std::_Function_handler<clang::CXXMethodDecl* (), Wide::Semantic::ClangType::ClangType(Wide::ClangUtil::ClangTU*, clang::QualType)::{lambda()#7}>::_M_invoke(std::_Any_data const&)':
ClangType.cpp:(.text+0x22f): undefined reference to `clang::Sema::DeclareImplicitCopyConstructor(clang::CXXRecordDecl*)'
./ClangExperiments/Stages/Semantic/ClangType.cpp.o: In function `std::_Function_handler<clang::CXXMethodDecl* (), Wide::Semantic::ClangType::ClangType(Wide::ClangUtil::ClangTU*, clang::QualType)::{lambda()#13}>::_M_invoke(std::_Any_data const&)':
ClangType.cpp:(.text+0x261): undefined reference to `clang::Sema::LookupMovingConstructor(clang::CXXRecordDecl*, unsigned int)'
./ClangExperiments/Stages/Semantic/ClangType.cpp.o: In function `std::_Function_handler<clang::CXXMethodDecl* (), Wide::Semantic::ClangType::ClangType(Wide::ClangUtil::ClangTU*, clang::QualType)::{lambda()#11}>::_M_invoke(std::_Any_data const&)':
ClangType.cpp:(.text+0x2bf): undefined reference to `clang::Sema::DeclareImplicitMoveConstructor(clang::CXXRecordDecl*)'
./ClangExperiments/Stages/Semantic/ClangType.cpp.o: In function `std::_Function_handler<clang::CXXMethodDecl* (), Wide::Semantic::ClangType::ClangType(Wide::ClangUtil::ClangTU*, clang::QualType)::{lambda()#17}>::_M_invoke(std::_Any_data const&)':
ClangType.cpp:(.text+0x2ef): undefined reference to `clang::Sema::LookupDestructor(clang::CXXRecordDecl*)'
./ClangExperiments/Stages/Semantic/ClangType.cpp.o: In function `std::_Function_handler<clang::CXXMethodDecl* (), Wide::Semantic::ClangType::ClangType(Wide::ClangUtil::ClangTU*, clang::QualType)::{lambda()#15}>::_M_invoke(std::_Any_data const&)':
ClangType.cpp:(.text+0x34f): undefined reference to `clang::Sema::DeclareImplicitDestructor(clang::CXXRecordDecl*)'
./ClangExperiments/Stages/Semantic/ClangType.cpp.o: In function `std::_Function_handler<clang::CXXMethodDecl* (), Wide::Semantic::ClangType::ClangType(Wide::ClangUtil::ClangTU*, clang::QualType)::{lambda()#21}>::_M_invoke(std::_Any_data const&)':
ClangType.cpp:(.text+0x386): undefined reference to `clang::Sema::LookupMovingAssignment(clang::CXXRecordDecl*, unsigned int, bool, unsigned int)'
./ClangExperiments/Stages/Semantic/ClangType.cpp.o: In function `std::_Function_handler<clang::CXXMethodDecl* (), Wide::Semantic::ClangType::ClangType(Wide::ClangUtil::ClangTU*, clang::QualType)::{lambda()#19}>::_M_invoke(std::_Any_data const&)':
ClangType.cpp:(.text+0x3df): undefined reference to `clang::Sema::DeclareImplicitMoveAssignment(clang::CXXRecordDecl*)'
./ClangExperiments/Stages/Semantic/ClangType.cpp.o: In function `std::_Function_handler<clang::CXXMethodDecl* (), Wide::Semantic::ClangType::ClangType(Wide::ClangUtil::ClangTU*, clang::QualType)::{lambda()#25}>::_M_invoke(std::_Any_data const&)':
ClangType.cpp:(.text+0x40f): undefined reference to `clang::Sema::LookupDefaultConstructor(clang::CXXRecordDecl*)'
./ClangExperiments/Stages/Semantic/ClangType.cpp.o: In function `std::_Function_handler<clang::CXXMethodDecl* (), Wide::Semantic::ClangType::ClangType(Wide::ClangUtil::ClangTU*, clang::QualType)::{lambda()#23}>::_M_invoke(std::_Any_data const&)':
ClangType.cpp:(.text+0x46f): undefined reference to `clang::Sema::DeclareImplicitDefaultConstructor(clang::CXXRecordDecl*)'
./ClangExperiments/Stages/Semantic/ClangType.cpp.o: In function `clang::OverloadCandidateSet::~OverloadCandidateSet()':
ClangType.cpp:(.text._ZN5clang20OverloadCandidateSetD2Ev[_ZN5clang20OverloadCandidateSetD5Ev]+0x17): undefined reference to `clang::OverloadCandidateSet::destroyCandidates()'
ClangType.cpp:(.text._ZN5clang20OverloadCandidateSetD2Ev[_ZN5clang20OverloadCandidateSetD5Ev]+0x23): undefined reference to `llvm::BumpPtrAllocator::~BumpPtrAllocator()'
ClangType.cpp:(.text._ZN5clang20OverloadCandidateSetD2Ev[_ZN5clang20OverloadCandidateSetD5Ev]+0x2f): undefined reference to `llvm::SmallPtrSetImpl::~SmallPtrSetImpl()'
./ClangExperiments/Stages/Semantic/ClangType.cpp.o: In function `clang::LookupResult::~LookupResult()':
ClangType.cpp:(.text._ZN5clang12LookupResultD2Ev[_ZN5clang12LookupResultD5Ev]+0x17): undefined reference to `clang::LookupResult::deletePaths(clang::CXXBasePaths*)'
ClangType.cpp:(.text._ZN5clang12LookupResultD2Ev[_ZN5clang12LookupResultD5Ev]+0x31): undefined reference to `clang::LookupResult::sanityImpl() const'
ClangType.cpp:(.text._ZN5clang12LookupResultD2Ev[_ZN5clang12LookupResultD5Ev]+0x53): undefined reference to `clang::Sema::CheckLookupAccess(clang::LookupResult const&)'
ClangType.cpp:(.text._ZN5clang12LookupResultD2Ev[_ZN5clang12LookupResultD5Ev]+0x70): undefined reference to `clang::Sema::DiagnoseAmbiguousLookup(clang::LookupResult&)'
./ClangExperiments/Stages/Semantic/ClangType.cpp.o: In function `clang::FunctionProtoType const* clang::Type::getAs<clang::FunctionProtoType>() const':
ClangType.cpp:(.text._ZNK5clang4Type5getAsINS_17FunctionProtoTypeEEEPKT_v[_ZNK5clang4Type5getAsINS_17FunctionProtoTypeEEEPKT_v]+0x39): undefined reference to `clang::Type::getUnqualifiedDesugaredType() const'
./ClangExperiments/Stages/Semantic/ClangType.cpp.o: In function `clang::FunctionType const* clang::Type::getAs<clang::FunctionType>() const':
ClangType.cpp:(.text._ZNK5clang4Type5getAsINS_12FunctionTypeEEEPKT_v[_ZNK5clang4Type5getAsINS_12FunctionTypeEEEPKT_v]+0x51): undefined reference to `clang::Type::getUnqualifiedDesugaredType() const'
./ClangExperiments/Stages/Semantic/ClangType.cpp.o: In function `clang::TagType const* clang::Type::getAs<clang::TagType>() const':
ClangType.cpp:(.text._ZNK5clang4Type5getAsINS_7TagTypeEEEPKT_v[_ZNK5clang4Type5getAsINS_7TagTypeEEEPKT_v]+0x3e): undefined reference to `clang::Type::getUnqualifiedDesugaredType() const'
./ClangExperiments/Stages/Semantic/ClangOverloadSet.cpp.o: In function `Wide::Semantic::ClangOverloadSet::BuildMetaCall(Wide::Semantic::Expression, std::vector<Wide::Semantic::Expression, std::allocator<Wide::Semantic::Expression> >, Wide::Semantic::Analyzer&)':
ClangOverloadSet.cpp:(.text+0x4dc): undefined reference to `clang::ASTContext::getTrivialTypeSourceInfo(clang::QualType, clang::SourceLocation) const'
./ClangExperiments/Stages/Semantic/ClangOverloadSet.cpp.o: In function `Wide::Semantic::ClangOverloadSet::BuildCallWithTemplateArguments(clang::TemplateArgumentListInfo*, Wide::Semantic::Expression, std::vector<Wide::Semantic::Expression, std::allocator<Wide::Semantic::Expression> >, Wide::Semantic::Analyzer&)':
ClangOverloadSet.cpp:(.text+0xe72): undefined reference to `clang::QualType::getNonLValueExprType(clang::ASTContext&) const'
ClangOverloadSet.cpp:(.text+0xea9): undefined reference to `clang::Stmt::StatisticsEnabled'
ClangOverloadSet.cpp:(.text+0xeba): undefined reference to `clang::Stmt::addStmtClass(clang::Stmt::StmtClass)'
ClangOverloadSet.cpp:(.text+0xf29): undefined reference to `llvm::BumpPtrAllocator::DefaultSlabAllocator'
ClangOverloadSet.cpp:(.text+0x1018): undefined reference to `llvm::BumpPtrAllocator::BumpPtrAllocator(unsigned long, unsigned long, llvm::SlabAllocator&)'
ClangOverloadSet.cpp:(.text+0x1129): undefined reference to `clang::Sema::AddFunctionCandidates(clang::UnresolvedSetImpl const&, llvm::ArrayRef<clang::Expr*>, clang::OverloadCandidateSet&, bool, clang::TemplateArgumentListInfo*)'
ClangOverloadSet.cpp:(.text+0x114f): undefined reference to `clang::OverloadCandidateSet::BestViableFunction(clang::Sema&, clang::SourceLocation, clang::OverloadCandidate*&, bool)'
ClangOverloadSet.cpp:(.text+0x11de): undefined reference to `clang::FunctionDecl::getNumParams() const'
ClangOverloadSet.cpp:(.text+0x11ea): undefined reference to `clang::FunctionDecl::getNumParams() const'
ClangOverloadSet.cpp:(.text+0x142c): undefined reference to `clang::OverloadCandidateSet::destroyCandidates()'
ClangOverloadSet.cpp:(.text+0x1439): undefined reference to `llvm::BumpPtrAllocator::~BumpPtrAllocator()'
ClangOverloadSet.cpp:(.text+0x1446): undefined reference to `llvm::SmallPtrSetImpl::~SmallPtrSetImpl()'
ClangOverloadSet.cpp:(.text+0x17a3): undefined reference to `llvm::SmallPtrSetImpl::~SmallPtrSetImpl()'
./ClangExperiments/Stages/Semantic/ClangNamespace.cpp.o: In function `Wide::Semantic::ClangNamespace::AccessMember(Wide::Semantic::Expression, std::string, Wide::Semantic::Analyzer&)':
ClangNamespace.cpp:(.text+0xe9): undefined reference to `clang::DeclarationNameLoc::DeclarationNameLoc(clang::DeclarationName)'
ClangNamespace.cpp:(.text+0x1c3): undefined reference to `clang::LookupResult::configure()'
ClangNamespace.cpp:(.text+0x1f8): undefined reference to `clang::Sema::LookupQualifiedName(clang::LookupResult&, clang::DeclContext*, bool)'
ClangNamespace.cpp:(.text+0x20a): undefined reference to `clang::LookupResult::sanityImpl() const'
ClangNamespace.cpp:(.text+0x21f): undefined reference to `clang::LookupResult::sanityImpl() const'
ClangNamespace.cpp:(.text+0x2b7): undefined reference to `llvm::SmallVectorBase::grow_pod(void*, unsigned long, unsigned long)'
ClangNamespace.cpp:(.text+0x378): undefined reference to `clang::LookupResult::deletePaths(clang::CXXBasePaths*)'
ClangNamespace.cpp:(.text+0x3c6): undefined reference to `clang::LookupResult::sanityImpl() const'
ClangNamespace.cpp:(.text+0x3fc): undefined reference to `clang::Sema::CheckLookupAccess(clang::LookupResult const&)'
ClangNamespace.cpp:(.text+0x40e): undefined reference to `clang::LookupResult::sanityImpl() const'
ClangNamespace.cpp:(.text+0x4a5): undefined reference to `clang::FunctionDecl::getNumParams() const'
ClangNamespace.cpp:(.text+0x680): undefined reference to `clang::NamedDecl::getUnderlyingDeclImpl()'
ClangNamespace.cpp:(.text+0x75b): undefined reference to `clang::Sema::DiagnoseAmbiguousLookup(clang::LookupResult&)'
ClangNamespace.cpp:(.text+0xa9d): undefined reference to `clang::ASTContext::getTypeDeclTypeSlow(clang::TypeDecl const*) const'
./ClangExperiments/Stages/Wide.cpp.o: In function `Wide::Options::CreateDeadCodeElimination()':
Wide.cpp:(.text+0x445): undefined reference to `llvm::createDeadCodeEliminationPass()'
./ClangExperiments/Stages/Wide.cpp.o: In function `Wide::Compile(Wide::Options::Clang const&, Wide::Options::LLVM const&, std::vector<std::string, std::allocator<std::string> >)':
Wide.cpp:(.text+0xce7): undefined reference to `llvm::Module::~Module()'
Wide.cpp:(.text+0xcf4): undefined reference to `llvm::LLVMContext::~LLVMContext()'
./ClangExperiments/Stages/Wide.cpp.o: In function `Wide::Codegen::Generator::~Generator()':
Wide.cpp:(.text._ZN4Wide7Codegen9GeneratorD2Ev[_ZN4Wide7Codegen9GeneratorD5Ev]+0x15): undefined reference to `llvm::Module::~Module()'
Wide.cpp:(.text._ZN4Wide7Codegen9GeneratorD2Ev[_ZN4Wide7Codegen9GeneratorD5Ev]+0x21): undefined reference to `llvm::LLVMContext::~LLVMContext()'
./ClangExperiments/Stages/Codegen/Statement.cpp.o: In function `Wide::Codegen::ReturnStatement::Build(llvm::IRBuilder<true, llvm::ConstantFolder, llvm::IRBuilderDefaultInserter<true> >&, Wide::Codegen::Generator&)':
Statement.cpp:(.text+0x2e): undefined reference to `llvm::Type::getVoidTy(llvm::LLVMContext&)'
Statement.cpp:(.text+0x6a): undefined reference to `llvm::User::operator new(unsigned long, unsigned int)'
Statement.cpp:(.text+0x7d): undefined reference to `llvm::ReturnInst::ReturnInst(llvm::LLVMContext&, llvm::Value*, llvm::Instruction*)'
Statement.cpp:(.text+0xb0): undefined reference to `llvm::SymbolTableListTraits<llvm::Instruction, llvm::BasicBlock>::addNodeToList(llvm::Instruction*)'
Statement.cpp:(.text+0xbb): undefined reference to `llvm::Value::setName(llvm::Twine const&)'
Statement.cpp:(.text+0xf6): undefined reference to `llvm::User::operator new(unsigned long, unsigned int)'
Statement.cpp:(.text+0x108): undefined reference to `llvm::ReturnInst::ReturnInst(llvm::LLVMContext&, llvm::Value*, llvm::Instruction*)'
Statement.cpp:(.text+0x134): undefined reference to `llvm::User::operator new(unsigned long, unsigned int)'
Statement.cpp:(.text+0x146): undefined reference to `llvm::ReturnInst::ReturnInst(llvm::LLVMContext&, llvm::Value*, llvm::Instruction*)'
./ClangExperiments/Stages/Codegen/Statement.cpp.o: In function `ProcessBool(llvm::Value*, llvm::IRBuilder<true, llvm::ConstantFolder, llvm::IRBuilderDefaultInserter<true> >&)':
Statement.cpp:(.text+0x177): undefined reference to `llvm::Type::getInt1Ty(llvm::LLVMContext&)'
Statement.cpp:(.text+0x18d): undefined reference to `llvm::Type::getInt8Ty(llvm::LLVMContext&)'
Statement.cpp:(.text+0x1a9): undefined reference to `llvm::Type::getInt1Ty(llvm::LLVMContext&)'
Statement.cpp:(.text+0x1ce): undefined reference to `llvm::ConstantExpr::getCast(unsigned int, llvm::Constant*, llvm::Type*)'
Statement.cpp:(.text+0x1fb): undefined reference to `llvm::CastInst::Create(llvm::Instruction::CastOps, llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*)'
Statement.cpp:(.text+0x231): undefined reference to `llvm::SymbolTableListTraits<llvm::Instruction, llvm::BasicBlock>::addNodeToList(llvm::Instruction*)'
Statement.cpp:(.text+0x23e): undefined reference to `llvm::Value::setName(llvm::Twine const&)'
./ClangExperiments/Stages/Codegen/Statement.cpp.o: In function `Wide::Codegen::IfStatement::Build(llvm::IRBuilder<true, llvm::ConstantFolder, llvm::IRBuilderDefaultInserter<true> >&, Wide::Codegen::Generator&)':
Statement.cpp:(.text+0x346): undefined reference to `llvm::BasicBlock::BasicBlock(llvm::LLVMContext&, llvm::Twine const&, llvm::Function*, llvm::BasicBlock*)'
Statement.cpp:(.text+0x388): undefined reference to `llvm::BasicBlock::BasicBlock(llvm::LLVMContext&, llvm::Twine const&, llvm::Function*, llvm::BasicBlock*)'
Statement.cpp:(.text+0x3db): undefined reference to `llvm::BasicBlock::BasicBlock(llvm::LLVMContext&, llvm::Twine const&, llvm::Function*, llvm::BasicBlock*)'
Statement.cpp:(.text+0x414): undefined reference to `llvm::User::operator new(unsigned long, unsigned int)'
Statement.cpp:(.text+0x42d): undefined reference to `llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::BasicBlock*, llvm::Value*, llvm::Instruction*)'
Statement.cpp:(.text+0x464): undefined reference to `llvm::SymbolTableListTraits<llvm::Instruction, llvm::BasicBlock>::addNodeToList(llvm::Instruction*)'
Statement.cpp:(.text+0x471): undefined reference to `llvm::Value::setName(llvm::Twine const&)'
Statement.cpp:(.text+0x4b3): undefined reference to `llvm::User::operator new(unsigned long, unsigned int)'
Statement.cpp:(.text+0x4c3): undefined reference to `llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::Instruction*)'
Statement.cpp:(.text+0x4fa): undefined reference to `llvm::SymbolTableListTraits<llvm::Instruction, llvm::BasicBlock>::addNodeToList(llvm::Instruction*)'
Statement.cpp:(.text+0x507): undefined reference to `llvm::Value::setName(llvm::Twine const&)'
Statement.cpp:(.text+0x550): undefined reference to `llvm::User::operator new(unsigned long, unsigned int)'
Statement.cpp:(.text+0x560): undefined reference to `llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::Instruction*)'
Statement.cpp:(.text+0x593): undefined reference to `llvm::SymbolTableListTraits<llvm::Instruction, llvm::BasicBlock>::addNodeToList(llvm::Instruction*)'
Statement.cpp:(.text+0x5a0): undefined reference to `llvm::Value::setName(llvm::Twine const&)'
./ClangExperiments/Stages/Codegen/Statement.cpp.o: In function `Wide::Codegen::WhileStatement::Build(llvm::IRBuilder<true, llvm::ConstantFolder, llvm::IRBuilderDefaultInserter<true> >&, Wide::Codegen::Generator&)':
Statement.cpp:(.text+0x6a6): undefined reference to `llvm::BasicBlock::BasicBlock(llvm::LLVMContext&, llvm::Twine const&, llvm::Function*, llvm::BasicBlock*)'
Statement.cpp:(.text+0x6e8): undefined reference to `llvm::BasicBlock::BasicBlock(llvm::LLVMContext&, llvm::Twine const&, llvm::Function*, llvm::BasicBlock*)'
Statement.cpp:(.text+0x731): undefined reference to `llvm::BasicBlock::BasicBlock(llvm::LLVMContext&, llvm::Twine const&, llvm::Function*, llvm::BasicBlock*)'
Statement.cpp:(.text+0x74a): undefined reference to `llvm::User::operator new(unsigned long, unsigned int)'
Statement.cpp:(.text+0x75a): undefined reference to `llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::Instruction*)'
Statement.cpp:(.text+0x791): undefined reference to `llvm::SymbolTableListTraits<llvm::Instruction, llvm::BasicBlock>::addNodeToList(llvm::Instruction*)'
Statement.cpp:(.text+0x79e): undefined reference to `llvm::Value::setName(llvm::Twine const&)'
Statement.cpp:(.text+0x7ef): undefined reference to `llvm::User::operator new(unsigned long, unsigned int)'
Statement.cpp:(.text+0x808): undefined reference to `llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::BasicBlock*, llvm::Value*, llvm::Instruction*)'
Statement.cpp:(.text+0x83f): undefined reference to `llvm::SymbolTableListTraits<llvm::Instruction, llvm::BasicBlock>::addNodeToList(llvm::Instruction*)'
Statement.cpp:(.text+0x84c): undefined reference to `llvm::Value::setName(llvm::Twine const&)'
Statement.cpp:(.text+0x88e): undefined reference to `llvm::User::operator new(unsigned long, unsigned int)'
Statement.cpp:(.text+0x89e): undefined reference to `llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::Instruction*)'
Statement.cpp:(.text+0x8d1): undefined reference to `llvm::SymbolTableListTraits<llvm::Instruction, llvm::BasicBlock>::addNodeToList(llvm::Instruction*)'
Statement.cpp:(.text+0x8de): undefined reference to `llvm::Value::setName(llvm::Twine const&)'
./ClangExperiments/Stages/Codegen/Statement.cpp.o: In function `_ZN4llvm4UserdlEPvj.isra.4':
Statement.cpp:(.text.unlikely+0x11): undefined reference to `llvm::llvm_unreachable_internal(char const*, char const*, unsigned int)'
./ClangExperiments/Stages/Codegen/FunctionCodeGen.cpp.o: In function `Wide::Codegen::Function::EmitCode(llvm::Module*, llvm::LLVMContext&, Wide::Codegen::Generator&)':
FunctionCodeGen.cpp:(.text+0x340): undefined reference to `llvm::Module::getFunction(llvm::StringRef) const'
FunctionCodeGen.cpp:(.text+0x46d): undefined reference to `llvm::Type::getInt1Ty(llvm::LLVMContext&)'
FunctionCodeGen.cpp:(.text+0x483): undefined reference to `llvm::Type::getInt8Ty(llvm::LLVMContext&)'
FunctionCodeGen.cpp:(.text+0x56f): undefined reference to `llvm::Module::getFunction(llvm::StringRef) const'
FunctionCodeGen.cpp:(.text+0x5c7): undefined reference to `llvm::BasicBlock::BasicBlock(llvm::LLVMContext&, llvm::Twine const&, llvm::Function*, llvm::BasicBlock*)'
FunctionCodeGen.cpp:(.text+0x5cf): undefined reference to `llvm::BasicBlock::getContext() const'
FunctionCodeGen.cpp:(.text+0x70c): undefined reference to `llvm::Type::getInt8Ty(llvm::LLVMContext&)'
FunctionCodeGen.cpp:(.text+0x777): undefined reference to `llvm::User::operator new(unsigned long, unsigned int)'
FunctionCodeGen.cpp:(.text+0x78f): undefined reference to `llvm::AllocaInst::AllocaInst(llvm::Type*, llvm::Value*, llvm::Twine const&, llvm::Instruction*)'
FunctionCodeGen.cpp:(.text+0x7ce): undefined reference to `llvm::SymbolTableListTraits<llvm::Instruction, llvm::BasicBlock>::addNodeToList(llvm::Instruction*)'
FunctionCodeGen.cpp:(.text+0x7db): undefined reference to `llvm::Value::setName(llvm::Twine const&)'
FunctionCodeGen.cpp:(.text+0x863): undefined reference to `llvm::verifyFunction(llvm::Function const&, llvm::VerifierFailureAction)'
FunctionCodeGen.cpp:(.text+0x8ca): undefined reference to `llvm::Type::getInt1Ty(llvm::LLVMContext&)'
FunctionCodeGen.cpp:(.text+0x900): undefined reference to `llvm::Type::getInt1Ty(llvm::LLVMContext&)'
FunctionCodeGen.cpp:(.text+0x925): undefined reference to `llvm::ConstantExpr::getCast(unsigned int, llvm::Constant*, llvm::Type*)'
FunctionCodeGen.cpp:(.text+0x954): undefined reference to `llvm::Function::BuildLazyArguments() const'
FunctionCodeGen.cpp:(.text+0x97b): undefined reference to `llvm::CastInst::Create(llvm::Instruction::CastOps, llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*)'
FunctionCodeGen.cpp:(.text+0x9b9): undefined reference to `llvm::SymbolTableListTraits<llvm::Instruction, llvm::BasicBlock>::addNodeToList(llvm::Instruction*)'
FunctionCodeGen.cpp:(.text+0x9c6): undefined reference to `llvm::Value::setName(llvm::Twine const&)'
FunctionCodeGen.cpp:(.text+0xa56): undefined reference to `llvm::User::operator new(unsigned long, unsigned int)'
FunctionCodeGen.cpp:(.text+0xa7b): undefined reference to `llvm::Function::Function(llvm::FunctionType*, llvm::GlobalValue::LinkageTypes, llvm::Twine const&, llvm::Module*)'
FunctionCodeGen.cpp:(.text+0xaad): undefined reference to `llvm::llvm_unreachable_internal(char const*, char const*, unsigned int)'
FunctionCodeGen.cpp:(.text+0xb06): undefined reference to `llvm::User::operator delete(void*)'
./ClangExperiments/Stages/Codegen/FunctionCodeGen.cpp.o: In function `std::_Function_handler<llvm::Type* (llvm::Module*), Wide::Codegen::Function::EmitCode(llvm::Module*, llvm::LLVMContext&, Wide::Codegen::Generator&)::{lambda(llvm::Module*)#1}>::_M_invoke(std::_Any_data const&, llvm::Module*)':
FunctionCodeGen.cpp:(.text+0x7): undefined reference to `llvm::Type::getInt1Ty(llvm::LLVMContext&)'
./ClangExperiments/Stages/Codegen/Expression.cpp.o: In function `Wide::Codegen::FunctionValue::ComputeValue(llvm::IRBuilder<true, llvm::ConstantFolder, llvm::IRBuilderDefaultInserter<true> >&, Wide::Codegen::Generator&)':
Expression.cpp:(.text+0x6c): undefined reference to `llvm::Module::getFunction(llvm::StringRef) const'
./ClangExperiments/Stages/Codegen/Expression.cpp.o: In function `Wide::Codegen::Int8Expression::ComputeValue(llvm::IRBuilder<true, llvm::ConstantFolder, llvm::IRBuilderDefaultInserter<true> >&, Wide::Codegen::Generator&)':
Expression.cpp:(.text+0x8a): undefined reference to `llvm::Type::getInt8Ty(llvm::LLVMContext&)'
./ClangExperiments/Stages/Codegen/Expression.cpp.o: In function `Wide::Codegen::NamedGlobalVariable::ComputeValue(llvm::IRBuilder<true, llvm::ConstantFolder, llvm::IRBuilderDefaultInserter<true> >&, Wide::Codegen::Generator&)':
Expression.cpp:(.text+0xbe): undefined reference to `llvm::Module::getGlobalVariable(llvm::StringRef, bool) const'
./ClangExperiments/Stages/Codegen/Expression.cpp.o: In function `Wide::Codegen::LoadExpression::ComputeValue(llvm::IRBuilder<true, llvm::ConstantFolder, llvm::IRBuilderDefaultInserter<true> >&, Wide::Codegen::Generator&)':
Expression.cpp:(.text+0x171): undefined reference to `llvm::User::operator new(unsigned long, unsigned int)'
Expression.cpp:(.text+0x186): undefined reference to `llvm::LoadInst::LoadInst(llvm::Value*, char const*, bool, llvm::Instruction*)'
Expression.cpp:(.text+0x1b9): undefined reference to `llvm::SymbolTableListTraits<llvm::Instruction, llvm::BasicBlock>::addNodeToList(llvm::Instruction*)'
Expression.cpp:(.text+0x1c4): undefined reference to `llvm::Value::setName(llvm::Twine const&)'
Expression.cpp:(.text+0x20c): undefined reference to `llvm::User::operator delete(void*)'
./ClangExperiments/Stages/Codegen/Expression.cpp.o: In function `Wide::Codegen::StoreExpression::ComputeValue(llvm::IRBuilder<true, llvm::ConstantFolder, llvm::IRBuilderDefaultInserter<true> >&, Wide::Codegen::Generator&)':
Expression.cpp:(.text+0x26f): undefined reference to `llvm::User::operator new(unsigned long, unsigned int)'
Expression.cpp:(.text+0x285): undefined reference to `llvm::StoreInst::StoreInst(llvm::Value*, llvm::Value*, bool, llvm::Instruction*)'
Expression.cpp:(.text+0x2b8): undefined reference to `llvm::SymbolTableListTraits<llvm::Instruction, llvm::BasicBlock>::addNodeToList(llvm::Instruction*)'
Expression.cpp:(.text+0x2c3): undefined reference to `llvm::Value::setName(llvm::Twine const&)'
Expression.cpp:(.text+0x362): undefined reference to `llvm::User::operator delete(void*)'
./ClangExperiments/Stages/Codegen/Expression.cpp.o: In function `Wide::Codegen::IntegralLeftShiftExpression::ComputeValue(llvm::IRBuilder<true, llvm::ConstantFolder, llvm::IRBuilderDefaultInserter<true> >&, Wide::Codegen::Generator&)':
Expression.cpp:(.text+0x3d8): undefined reference to `llvm::ConstantExpr::getShl(llvm::Constant*, llvm::Constant*, bool, bool)'
Expression.cpp:(.text+0x40e): undefined reference to `llvm::BinaryOperator::Create(llvm::Instruction::BinaryOps, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*)'
Expression.cpp:(.text+0x44a): undefined reference to `llvm::SymbolTableListTraits<llvm::Instruction, llvm::BasicBlock>::addNodeToList(llvm::Instruction*)'
Expression.cpp:(.text+0x455): undefined reference to `llvm::Value::setName(llvm::Twine const&)'
./ClangExperiments/Stages/Codegen/Expression.cpp.o: In function `Wide::Codegen::StringExpression::ComputeValue(llvm::IRBuilder<true, llvm::ConstantFolder, llvm::IRBuilderDefaultInserter<true> >&, Wide::Codegen::Generator&)':
Expression.cpp:(.text+0x51a): undefined reference to `llvm::IRBuilderBase::CreateGlobalString(llvm::StringRef, llvm::Twine const&)'
Expression.cpp:(.text+0x527): undefined reference to `llvm::Type::getInt32Ty(llvm::LLVMContext&)'
Expression.cpp:(.text+0x533): undefined reference to `llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool)'
Expression.cpp:(.text+0x57a): undefined reference to `llvm::ConstantExpr::getGetElementPtr(llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool)'
Expression.cpp:(.text+0x5a5): undefined reference to `llvm::User::operator new(unsigned long, unsigned int)'
Expression.cpp:(.text+0x5b5): undefined reference to `llvm::Type::getPointerAddressSpace() const'
Expression.cpp:(.text+0x5c9): undefined reference to `llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::ArrayRef<llvm::Value*>)'
Expression.cpp:(.text+0x5dd): undefined reference to `llvm::PointerType::get(llvm::Type*, unsigned int)'
Expression.cpp:(.text+0x607): undefined reference to `llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*)'
Expression.cpp:(.text+0x613): undefined reference to `vtable for llvm::GetElementPtrInst'
Expression.cpp:(.text+0x626): undefined reference to `llvm::GetElementPtrInst::init(llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::Twine const&)'
Expression.cpp:(.text+0x633): undefined reference to `llvm::GetElementPtrInst::setIsInBounds(bool)'
Expression.cpp:(.text+0x668): undefined reference to `llvm::SymbolTableListTraits<llvm::Instruction, llvm::BasicBlock>::addNodeToList(llvm::Instruction*)'
Expression.cpp:(.text+0x675): undefined reference to `llvm::Value::setName(llvm::Twine const&)'
Expression.cpp:(.text+0x6a7): undefined reference to `llvm::VectorType::get(llvm::Type*, unsigned int)'
Expression.cpp:(.text+0x6e5): undefined reference to `llvm::Instruction::~Instruction()'
./ClangExperiments/Stages/Codegen/Expression.cpp.o: In function `Wide::Codegen::IntegralLessThan::ComputeValue(llvm::IRBuilder<true, llvm::ConstantFolder, llvm::IRBuilderDefaultInserter<true> >&, Wide::Codegen::Generator&)':
Expression.cpp:(.text+0x716): undefined reference to `llvm::Type::getInt8Ty(llvm::LLVMContext&)'
Expression.cpp:(.text+0x780): undefined reference to `llvm::ConstantExpr::getCompare(unsigned short, llvm::Constant*, llvm::Constant*)'
Expression.cpp:(.text+0x7a2): undefined reference to `llvm::ConstantExpr::getCast(unsigned int, llvm::Constant*, llvm::Type*)'
Expression.cpp:(.text+0x7d6): undefined reference to `llvm::CastInst::Create(llvm::Instruction::CastOps, llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*)'
Expression.cpp:(.text+0x810): undefined reference to `llvm::SymbolTableListTraits<llvm::Instruction, llvm::BasicBlock>::addNodeToList(llvm::Instruction*)'
Expression.cpp:(.text+0x81d): undefined reference to `llvm::Value::setName(llvm::Twine const&)'
Expression.cpp:(.text+0x85d): undefined reference to `llvm::User::operator new(unsigned long, unsigned int)'
Expression.cpp:(.text+0x884): undefined reference to `llvm::Type::getInt1Ty(llvm::LLVMContext&)'
Expression.cpp:(.text+0x88f): undefined reference to `llvm::VectorType::get(llvm::Type*, unsigned int)'
Expression.cpp:(.text+0x8bc): undefined reference to `llvm::CmpInst::CmpInst(llvm::Type*, llvm::Instruction::OtherOps, unsigned short, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*)'
Expression.cpp:(.text+0x8c7): undefined reference to `vtable for llvm::ICmpInst'
Expression.cpp:(.text+0x8de): undefined reference to `llvm::Type::getScalarType() const'
Expression.cpp:(.text+0x8f1): undefined reference to `llvm::Type::getScalarType()'
Expression.cpp:(.text+0x92e): undefined reference to `llvm::SymbolTableListTraits<llvm::Instruction, llvm::BasicBlock>::addNodeToList(llvm::Instruction*)'
Expression.cpp:(.text+0x93b): undefined reference to `llvm::Value::setName(llvm::Twine const&)'
Expression.cpp:(.text+0x9d4): undefined reference to `llvm::Type::getInt1Ty(llvm::LLVMContext&)'
Expression.cpp:(.text+0xa3b): undefined reference to `llvm::User::operator delete(void*)'
Expression.cpp:(.text+0xa4a): undefined reference to `vtable for llvm::CmpInst'
Expression.cpp:(.text+0xa55): undefined reference to `llvm::Instruction::~Instruction()'
./ClangExperiments/Stages/Codegen/Expression.cpp.o: In function `Wide::Codegen::IntegralRightShiftExpression::ComputeValue(llvm::IRBuilder<true, llvm::ConstantFolder, llvm::IRBuilderDefaultInserter<true> >&, Wide::Codegen::Generator&)':
Expression.cpp:(.text+0xac8): undefined reference to `llvm::ConstantExpr::getLShr(llvm::Constant*, llvm::Constant*, bool)'
Expression.cpp:(.text+0xafe): undefined reference to `llvm::BinaryOperator::Create(llvm::Instruction::BinaryOps, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*)'
Expression.cpp:(.text+0xb38): undefined reference to `llvm::SymbolTableListTraits<llvm::Instruction, llvm::BasicBlock>::addNodeToList(llvm::Instruction*)'
Expression.cpp:(.text+0xb43): undefined reference to `llvm::Value::setName(llvm::Twine const&)'
./ClangExperiments/Stages/Codegen/Expression.cpp.o: In function `Wide::Codegen::TruncateExpression::ComputeValue(llvm::IRBuilder<true, llvm::ConstantFolder, llvm::IRBuilderDefaultInserter<true> >&, Wide::Codegen::Generator&)':
Expression.cpp:(.text+0xd66): undefined reference to `llvm::ConstantExpr::getCast(unsigned int, llvm::Constant*, llvm::Type*)'
Expression.cpp:(.text+0xd96): undefined reference to `llvm::CastInst::Create(llvm::Instruction::CastOps, llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*)'
Expression.cpp:(.text+0xdcc): undefined reference to `llvm::SymbolTableListTraits<llvm::Instruction, llvm::BasicBlock>::addNodeToList(llvm::Instruction*)'
Expression.cpp:(.text+0xdd7): undefined reference to `llvm::Value::setName(llvm::Twine const&)'
./ClangExperiments/Stages/Codegen/Expression.cpp.o: In function `Wide::Codegen::ZExt::ComputeValue(llvm::IRBuilder<true, llvm::ConstantFolder, llvm::IRBuilderDefaultInserter<true> >&, Wide::Codegen::Generator&)':
Expression.cpp:(.text+0xe96): undefined reference to `llvm::ConstantExpr::getCast(unsigned int, llvm::Constant*, llvm::Type*)'
Expression.cpp:(.text+0xec6): undefined reference to `llvm::CastInst::Create(llvm::Instruction::CastOps, llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*)'
Expression.cpp:(.text+0xefc): undefined reference to `llvm::SymbolTableListTraits<llvm::Instruction, llvm::BasicBlock>::addNodeToList(llvm::Instruction*)'
Expression.cpp:(.text+0xf07): undefined reference to `llvm::Value::setName(llvm::Twine const&)'
./ClangExperiments/Stages/Codegen/Expression.cpp.o: In function `Wide::Codegen::Variable::ComputeValue(llvm::IRBuilder<true, llvm::ConstantFolder, llvm::IRBuilderDefaultInserter<true> >&, Wide::Codegen::Generator&)':
Expression.cpp:(.text+0xfa2): undefined reference to `llvm::User::operator new(unsigned long, unsigned int)'
Expression.cpp:(.text+0xfba): undefined reference to `llvm::AllocaInst::AllocaInst(llvm::Type*, llvm::Value*, llvm::Twine const&, llvm::Instruction*)'
Expression.cpp:(.text+0xfed): undefined reference to `llvm::SymbolTableListTraits<llvm::Instruction, llvm::BasicBlock>::addNodeToList(llvm::Instruction*)'
Expression.cpp:(.text+0xff8): undefined reference to `llvm::Value::setName(llvm::Twine const&)'
Expression.cpp:(.text+0x102d): undefined reference to `llvm::User::operator delete(void*)'
./ClangExperiments/Stages/Codegen/Expression.cpp.o: In function `Wide::Codegen::FieldExpression::ComputeValue(llvm::IRBuilder<true, llvm::ConstantFolder, llvm::IRBuilderDefaultInserter<true> >&, Wide::Codegen::Generator&)':
Expression.cpp:(.text+0x10dd): undefined reference to `llvm::ConstantExpr::getExtractValue(llvm::Constant*, llvm::ArrayRef<unsigned int>)'
Expression.cpp:(.text+0x112b): undefined reference to `llvm::User::operator new(unsigned long, unsigned int)'
Expression.cpp:(.text+0x113d): undefined reference to `llvm::ExtractValueInst::getIndexedType(llvm::Type*, llvm::ArrayRef<unsigned int>)'
Expression.cpp:(.text+0x1166): undefined reference to `llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*)'
Expression.cpp:(.text+0x1173): undefined reference to `vtable for llvm::UnaryInstruction'
Expression.cpp:(.text+0x120b): undefined reference to `vtable for llvm::ExtractValueInst'
Expression.cpp:(.text+0x121c): undefined reference to `llvm::ExtractValueInst::init(llvm::ArrayRef<unsigned int>, llvm::Twine const&)'
Expression.cpp:(.text+0x1253): undefined reference to `llvm::SymbolTableListTraits<llvm::Instruction, llvm::BasicBlock>::addNodeToList(llvm::Instruction*)'
Expression.cpp:(.text+0x1260): undefined reference to `llvm::Value::setName(llvm::Twine const&)'
Expression.cpp:(.text+0x12a4): undefined reference to `llvm::Type::getInt32Ty(llvm::LLVMContext&)'
Expression.cpp:(.text+0x12b0): undefined reference to `llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool)'
Expression.cpp:(.text+0x12be): undefined reference to `llvm::Type::getInt32Ty(llvm::LLVMContext&)'
Expression.cpp:(.text+0x12cb): undefined reference to `llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool)'
Expression.cpp:(.text+0x12f2): undefined reference to `llvm::ConstantExpr::getGetElementPtr(llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool)'
Expression.cpp:(.text+0x131b): undefined reference to `llvm::User::operator new(unsigned long, unsigned int)'
Expression.cpp:(.text+0x132b): undefined reference to `llvm::Type::getPointerAddressSpace() const'
Expression.cpp:(.text+0x1341): undefined reference to `llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::ArrayRef<llvm::Value*>)'
Expression.cpp:(.text+0x1355): undefined reference to `llvm::PointerType::get(llvm::Type*, unsigned int)'
Expression.cpp:(.text+0x137f): undefined reference to `llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*)'
Expression.cpp:(.text+0x1394): undefined reference to `vtable for llvm::GetElementPtrInst'
Expression.cpp:(.text+0x13a4): undefined reference to `llvm::GetElementPtrInst::init(llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::Twine const&)'
Expression.cpp:(.text+0x13b1): undefined reference to `llvm::GetElementPtrInst::setIsInBounds(bool)'
Expression.cpp:(.text+0x13e8): undefined reference to `llvm::SymbolTableListTraits<llvm::Instruction, llvm::BasicBlock>::addNodeToList(llvm::Instruction*)'
Expression.cpp:(.text+0x13f5): undefined reference to `llvm::Value::setName(llvm::Twine const&)'
Expression.cpp:(.text+0x142e): undefined reference to `llvm::VectorType::get(llvm::Type*, unsigned int)'
Expression.cpp:(.text+0x145c): undefined reference to `llvm::Type::getInt32Ty(llvm::LLVMContext&)'
Expression.cpp:(.text+0x1468): undefined reference to `llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool)'
Expression.cpp:(.text+0x1476): undefined reference to `llvm::Type::getInt32Ty(llvm::LLVMContext&)'
Expression.cpp:(.text+0x1483): undefined reference to `llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool)'
Expression.cpp:(.text+0x14c6): undefined reference to `llvm::Instruction::~Instruction()'
Expression.cpp:(.text+0x14d6): undefined reference to `llvm::User::operator delete(void*)'
Expression.cpp:(.text+0x1509): undefined reference to `llvm::UnaryInstruction::~UnaryInstruction()'
./ClangExperiments/Stages/Codegen/Expression.cpp.o: In function `Wide::Codegen::FunctionCall::ComputeValue(llvm::IRBuilder<true, llvm::ConstantFolder, llvm::IRBuilderDefaultInserter<true> >&, Wide::Codegen::Generator&)':
Expression.cpp:(.text+0x159a): undefined reference to `llvm::Function::getFunctionType() const'
Expression.cpp:(.text+0x1775): undefined reference to `llvm::Argument::getArgNo() const'
Expression.cpp:(.text+0x178d): undefined reference to `llvm::Argument::getArgNo() const'
Expression.cpp:(.text+0x17c5): undefined reference to `llvm::Argument::hasByValAttr() const'
Expression.cpp:(.text+0x17fc): undefined reference to `llvm::User::operator new(unsigned long, unsigned int)'
Expression.cpp:(.text+0x1814): undefined reference to `llvm::AllocaInst::AllocaInst(llvm::Type*, llvm::Value*, llvm::Twine const&, llvm::Instruction*)'
Expression.cpp:(.text+0x184d): undefined reference to `llvm::SymbolTableListTraits<llvm::Instruction, llvm::BasicBlock>::addNodeToList(llvm::Instruction*)'
Expression.cpp:(.text+0x185d): undefined reference to `llvm::Value::setName(llvm::Twine const&)'
Expression.cpp:(.text+0x1877): undefined reference to `llvm::Argument::getParamAlignment() const'
Expression.cpp:(.text+0x1881): undefined reference to `llvm::AllocaInst::setAlignment(unsigned int)'
Expression.cpp:(.text+0x18b5): undefined reference to `llvm::User::operator new(unsigned long, unsigned int)'
Expression.cpp:(.text+0x18cd): undefined reference to `llvm::StoreInst::StoreInst(llvm::Value*, llvm::Value*, bool, llvm::Instruction*)'
Expression.cpp:(.text+0x1906): undefined reference to `llvm::SymbolTableListTraits<llvm::Instruction, llvm::BasicBlock>::addNodeToList(llvm::Instruction*)'
Expression.cpp:(.text+0x1916): undefined reference to `llvm::Value::setName(llvm::Twine const&)'
Expression.cpp:(.text+0x1973): undefined reference to `llvm::Function::BuildLazyArguments() const'
Expression.cpp:(.text+0x19cc): undefined reference to `llvm::User::operator new(unsigned long, unsigned int)'
Expression.cpp:(.text+0x1a32): undefined reference to `llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*)'
Expression.cpp:(.text+0x1a46): undefined reference to `vtable for llvm::CallInst'
Expression.cpp:(.text+0x1a5c): undefined reference to `llvm::CallInst::init(llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::Twine const&)'
Expression.cpp:(.text+0x1a95): undefined reference to `llvm::SymbolTableListTraits<llvm::Instruction, llvm::BasicBlock>::addNodeToList(llvm::Instruction*)'
Expression.cpp:(.text+0x1aa5): undefined reference to `llvm::Value::setName(llvm::Twine const&)'
Expression.cpp:(.text+0x1b5a): undefined reference to `llvm::DataLayout::ID'
Expression.cpp:(.text+0x1b81): undefined reference to `vtable for llvm::DataLayout'
Expression.cpp:(.text+0x1bd3): undefined reference to `llvm::DataLayout::init(llvm::StringRef)'
Expression.cpp:(.text+0x1be4): undefined reference to `llvm::Type::getInt1Ty(llvm::LLVMContext&)'
Expression.cpp:(.text+0x1ca9): undefined reference to `llvm::Type::getInt1Ty(llvm::LLVMContext&)'
Expression.cpp:(.text+0x1d1f): undefined reference to `llvm::CallInst::addAttribute(unsigned int, llvm::Attribute::AttrKind)'
Expression.cpp:(.text+0x1d8f): undefined reference to `llvm::Function::BuildLazyArguments() const'
Expression.cpp:(.text+0x1de6): undefined reference to `llvm::Type::getInt8Ty(llvm::LLVMContext&)'
Expression.cpp:(.text+0x1e1c): undefined reference to `llvm::Type::getInt1Ty(llvm::LLVMContext&)'
Expression.cpp:(.text+0x1e4f): undefined reference to `llvm::ConstantExpr::getCast(unsigned int, llvm::Constant*, llvm::Type*)'
Expression.cpp:(.text+0x1f12): undefined reference to `llvm::Type::isSizedDerivedType() const'
Expression.cpp:(.text+0x1f9a): undefined reference to `llvm::User::operator new(unsigned long, unsigned int)'
Expression.cpp:(.text+0x1fb5): undefined reference to `llvm::AllocaInst::AllocaInst(llvm::Type*, llvm::Value*, llvm::Twine const&, llvm::Instruction*)'
Expression.cpp:(.text+0x1fee): undefined reference to `llvm::SymbolTableListTraits<llvm::Instruction, llvm::BasicBlock>::addNodeToList(llvm::Instruction*)'
Expression.cpp:(.text+0x1ffe): undefined reference to `llvm::Value::setName(llvm::Twine const&)'
Expression.cpp:(.text+0x202b): undefined reference to `llvm::Type::getPointerTo(unsigned int)'
Expression.cpp:(.text+0x2054): undefined reference to `llvm::ConstantExpr::getCast(unsigned int, llvm::Constant*, llvm::Type*)'
Expression.cpp:(.text+0x2076): undefined reference to `llvm::User::operator new(unsigned long, unsigned int)'
Expression.cpp:(.text+0x208c): undefined reference to `llvm::StoreInst::StoreInst(llvm::Value*, llvm::Value*, bool, llvm::Instruction*)'
Expression.cpp:(.text+0x20c5): undefined reference to `llvm::SymbolTableListTraits<llvm::Instruction, llvm::BasicBlock>::addNodeToList(llvm::Instruction*)'
Expression.cpp:(.text+0x20d5): undefined reference to `llvm::Value::setName(llvm::Twine const&)'
Expression.cpp:(.text+0x2105): undefined reference to `llvm::User::operator new(unsigned long, unsigned int)'
Expression.cpp:(.text+0x211a): undefined reference to `llvm::LoadInst::LoadInst(llvm::Value*, char const*, bool, llvm::Instruction*)'
Expression.cpp:(.text+0x2153): undefined reference to `llvm::SymbolTableListTraits<llvm::Instruction, llvm::BasicBlock>::addNodeToList(llvm::Instruction*)'
Expression.cpp:(.text+0x2163): undefined reference to `llvm::Value::setName(llvm::Twine const&)'
Expression.cpp:(.text+0x2181): undefined reference to `llvm::DataLayout::~DataLayout()'
Expression.cpp:(.text+0x21ab): undefined reference to `llvm::CastInst::Create(llvm::Instruction::CastOps, llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*)'
Expression.cpp:(.text+0x21e7): undefined reference to `llvm::SymbolTableListTraits<llvm::Instruction, llvm::BasicBlock>::addNodeToList(llvm::Instruction*)'
Expression.cpp:(.text+0x21f7): undefined reference to `llvm::Value::setName(llvm::Twine const&)'
Expression.cpp:(.text+0x2239): undefined reference to `llvm::CastInst::Create(llvm::Instruction::CastOps, llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*)'
Expression.cpp:(.text+0x2275): undefined reference to `llvm::SymbolTableListTraits<llvm::Instruction, llvm::BasicBlock>::addNodeToList(llvm::Instruction*)'
Expression.cpp:(.text+0x2285): undefined reference to `llvm::Value::setName(llvm::Twine const&)'
Expression.cpp:(.text+0x22a6): undefined reference to `llvm::Type::isSizedDerivedType() const'
Expression.cpp:(.text+0x231e): undefined reference to `llvm::Type::getInt8Ty(llvm::LLVMContext&)'
Expression.cpp:(.text+0x2344): undefined reference to `llvm::Type::getInt8Ty(llvm::LLVMContext&)'
Expression.cpp:(.text+0x236a): undefined reference to `llvm::ConstantExpr::getCast(unsigned int, llvm::Constant*, llvm::Type*)'
Expression.cpp:(.text+0x239a): undefined reference to `llvm::CastInst::Create(llvm::Instruction::CastOps, llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*)'
Expression.cpp:(.text+0x23da): undefined reference to `llvm::SymbolTableListTraits<llvm::Instruction, llvm::BasicBlock>::addNodeToList(llvm::Instruction*)'
Expression.cpp:(.text+0x24bf): undefined reference to `llvm::DataLayout::getABITypeAlignment(llvm::Type*) const'
Expression.cpp:(.text+0x251d): undefined reference to `llvm::DataLayout::getStructLayout(llvm::StructType*) const'
Expression.cpp:(.text+0x25bf): undefined reference to `llvm::llvm_unreachable_internal(char const*, char const*, unsigned int)'
Expression.cpp:(.text+0x25cf): undefined reference to `llvm::DataLayout::~DataLayout()'
Expression.cpp:(.text+0x2659): undefined reference to `llvm::DataLayout::getABITypeAlignment(llvm::Type*) const'
Expression.cpp:(.text+0x26b9): undefined reference to `llvm::DataLayout::getStructLayout(llvm::StructType*) const'
Expression.cpp:(.text+0x2756): undefined reference to `llvm::llvm_unreachable_internal(char const*, char const*, unsigned int)'
Expression.cpp:(.text+0x29fe): undefined reference to `llvm::Instruction::~Instruction()'
Expression.cpp:(.text+0x2a13): undefined reference to `llvm::User::operator delete(void*)'
Expression.cpp:(.text+0x2ab8): undefined reference to `llvm::User::operator delete(void*)'
Expression.cpp:(.text+0x2b0c): undefined reference to `llvm::User::operator delete(void*)'
Expression.cpp:(.text+0x2b21): undefined reference to `llvm::User::operator delete(void*)'
Expression.cpp:(.text+0x2b5a): undefined reference to `llvm::User::operator delete(void*)'
Expression.cpp:(.text+0x2bda): undefined reference to `llvm::ImmutablePass::~ImmutablePass()'
./ClangExperiments/Stages/Codegen/Expression.cpp.o: In function `Wide::Codegen::Int8Expression::ComputeValue(llvm::IRBuilder<true, llvm::ConstantFolder, llvm::IRBuilderDefaultInserter<true> >&, Wide::Codegen::Generator&)':
Expression.cpp:(.text+0x98): undefined reference to `llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool)'
./ClangExperiments/Stages/Codegen/Expression.cpp.o: In function `Wide::Codegen::NullExpression::ComputeValue(llvm::IRBuilder<true, llvm::ConstantFolder, llvm::IRBuilderDefaultInserter<true> >&, Wide::Codegen::Generator&)':
Expression.cpp:(.text+0xcf1): undefined reference to `llvm::Constant::getNullValue(llvm::Type*)'
./ClangExperiments/Stages/Codegen/Expression.cpp.o: In function `_ZN4llvm4UserdlEPvj.isra.8':
Expression.cpp:(.text.unlikely+0x11): undefined reference to `llvm::llvm_unreachable_internal(char const*, char const*, unsigned int)'
./ClangExperiments/Stages/Codegen/Expression.cpp.o: In function `llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const':
Expression.cpp:(.text._ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE[_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE]+0xb4): undefined reference to `llvm::Type::isSizedDerivedType() const'
Expression.cpp:(.text._ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE[_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE]+0x1e0): undefined reference to `llvm::llvm_unreachable_internal(char const*, char const*, unsigned int)'
Expression.cpp:(.text._ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE[_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE]+0x1ff): undefined reference to `llvm::DataLayout::getABITypeAlignment(llvm::Type*) const'
Expression.cpp:(.text._ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE[_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE]+0x250): undefined reference to `llvm::DataLayout::getStructLayout(llvm::StructType*) const'
./ClangExperiments/Stages/Semantic/Util.cpp.o: In function `Wide::ClangUtil::CreateTargetInfoFromTriple(clang::DiagnosticsEngine&, std::string)':
Util.cpp:(.text+0x9f): undefined reference to `clang::TargetInfo::CreateTargetInfo(clang::DiagnosticsEngine&, clang::TargetOptions*)'
./ClangExperiments/Stages/Semantic/StringType.cpp.o: In function `Wide::Semantic::StringType::GetClangType(Wide::ClangUtil::ClangTU&, Wide::Semantic::Analyzer&)':
StringType.cpp:(.text+0xe5): undefined reference to `clang::Decl::castFromDeclContext(clang::DeclContext const*)'
StringType.cpp:(.text+0xed): undefined reference to `clang::Decl::getASTContext() const'
StringType.cpp:(.text+0xfc): undefined reference to `clang::ASTContext::getPointerType(clang::QualType) const'
./ClangExperiments/Stages/Semantic/StringType.cpp.o: In function `std::_Function_handler<llvm::Type* (llvm::Module*), Wide::Semantic::StringType::GetLLVMType(Wide::Semantic::Analyzer&)::{lambda(llvm::Module*)#1}>::_M_invoke(std::_Any_data const&, llvm::Module*)':
StringType.cpp:(.text+0x69): undefined reference to `llvm::Type::getInt8PtrTy(llvm::LLVMContext&, unsigned int)'
./ClangExperiments/Stages/Semantic/RvalueType.cpp.o: In function `Wide::Semantic::RvalueType::GetClangType(Wide::ClangUtil::ClangTU&, Wide::Semantic::Analyzer&)':
RvalueType.cpp:(.text+0x365): undefined reference to `clang::ASTContext::getRValueReferenceType(clang::QualType) const'
./ClangExperiments/Stages/Semantic/RvalueType.cpp.o: In function `std::_Function_handler<llvm::Type* (llvm::Module*), Wide::Semantic::RvalueType::GetLLVMType(Wide::Semantic::Analyzer&)::{lambda(llvm::Module*)#1}>::_M_invoke(std::_Any_data const&, llvm::Module*)':
RvalueType.cpp:(.text+0x32e): undefined reference to `llvm::Type::getPointerTo(unsigned int)'
./ClangExperiments/Stages/Semantic/Bool.cpp.o: In function `std::_Function_handler<llvm::Type* (llvm::Module*), Wide::Semantic::Bool::GetLLVMType(Wide::Semantic::Analyzer&)::{lambda(llvm::Module*)#1}>::_M_invoke(std::_Any_data const&, llvm::Module*)':
Bool.cpp:(.text+0xd4): undefined reference to `llvm::Type::getInt8Ty(llvm::LLVMContext&)'
./ClangExperiments/Stages/Semantic/LvalueType.cpp.o: In function `Wide::Semantic::LvalueType::GetClangType(Wide::ClangUtil::ClangTU&, Wide::Semantic::Analyzer&)':
LvalueType.cpp:(.text+0x40a): undefined reference to `clang::ASTContext::getLValueReferenceType(clang::QualType, bool) const'
./ClangExperiments/Stages/Semantic/LvalueType.cpp.o: In function `std::_Function_handler<llvm::Type* (llvm::Module*), Wide::Semantic::LvalueType::GetLLVMType(Wide::Semantic::Analyzer&)::{lambda(llvm::Module*)#1}>::_M_invoke(std::_Any_data const&, llvm::Module*)':
LvalueType.cpp:(.text+0x3ce): undefined reference to `llvm::Type::getPointerTo(unsigned int)'
./ClangExperiments/Stages/Semantic/FunctionType.cpp.o: In function `std::_Function_handler<llvm::Type* (llvm::Module*), Wide::Semantic::FunctionType::GetLLVMType(Wide::Semantic::Analyzer&)::{lambda(llvm::Module*)#1}>::_M_invoke(std::_Any_data const&, llvm::Module*)':
FunctionType.cpp:(.text+0xae9): undefined reference to `llvm::FunctionType::get(llvm::Type*, llvm::ArrayRef<llvm::Type*>, bool)'
FunctionType.cpp:(.text+0xaf3): undefined reference to `llvm::Type::getPointerTo(unsigned int)'
./ClangExperiments/Stages/Semantic/FunctionType.cpp.o: In function `Wide::Semantic::FunctionType::GetClangType(Wide::ClangUtil::ClangTU&, Wide::Semantic::Analyzer&)':
FunctionType.cpp:(.text+0xcb0): undefined reference to `clang::ASTContext::getFunctionType(clang::QualType, llvm::ArrayRef<clang::QualType>, clang::FunctionProtoType::ExtProtoInfo const&) const'
./ClangExperiments/Stages/Semantic/IntegralType.cpp.o: In function `std::_Function_handler<llvm::Type* (llvm::Module*), Wide::Semantic::IntegralType::GetLLVMType(Wide::Semantic::Analyzer&)::{lambda(llvm::Module*)#1}>::_M_invoke(std::_Any_data const&, llvm::Module*)':
IntegralType.cpp:(.text+0x8c): undefined reference to `llvm::IntegerType::get(llvm::LLVMContext&, unsigned int)'
./ClangExperiments/Stages/Semantic/Void.cpp.o: In function `std::_Function_handler<llvm::Type* (llvm::Module*), Wide::Semantic::VoidType::GetLLVMType(Wide::Semantic::Analyzer&)::{lambda(llvm::Module*)#1}>::_M_invoke(std::_Any_data const&, llvm::Module*)':
Void.cpp:(.text+0x64): undefined reference to `llvm::Type::getVoidTy(llvm::LLVMContext&)'
./ClangExperiments/Stages/Semantic/ClangTemplateClass.cpp.o: In function `Wide::Semantic::ClangTemplateClass::BuildMetaCall(Wide::Semantic::Expression, std::vector<Wide::Semantic::Expression, std::allocator<Wide::Semantic::Expression> >, Wide::Semantic::Analyzer&)':
ClangTemplateClass.cpp:(.text+0x156): undefined reference to `clang::ASTContext::getTrivialTypeSourceInfo(clang::QualType, clang::SourceLocation) const'
ClangTemplateClass.cpp:(.text+0x25e): undefined reference to `clang::Sema::CheckTemplateArgumentList(clang::TemplateDecl*, clang::SourceLocation, clang::TemplateArgumentListInfo&, bool, llvm::SmallVectorImpl<clang::TemplateArgument>&, bool*)'
ClangTemplateClass.cpp:(.text+0x294): undefined reference to `clang::ClassTemplateDecl::findSpecialization(clang::TemplateArgument const*, unsigned int, void*&)'
ClangTemplateClass.cpp:(.text+0x2b4): undefined reference to `clang::ASTContext::getRecordType(clang::RecordDecl const*) const'
ClangTemplateClass.cpp:(.text+0x3af): undefined reference to `clang::ClassTemplateSpecializationDecl::Create(clang::ASTContext&, clang::TagTypeKind, clang::DeclContext*, clang::SourceLocation, clang::SourceLocation, clang::ClassTemplateDecl*, clang::TemplateArgument const*, unsigned int, clang::ClassTemplateSpecializationDecl*)'
ClangTemplateClass.cpp:(.text+0x3c3): undefined reference to `clang::ClassTemplateDecl::AddSpecialization(clang::ClassTemplateSpecializationDecl*, void*)'
ClangTemplateClass.cpp:(.text+0x3d7): undefined reference to `clang::Decl::setLexicalDeclContext(clang::DeclContext*)'
ClangTemplateClass.cpp:(.text+0x3eb): undefined reference to `clang::DeclContext::addDecl(clang::Decl*)'
ClangTemplateClass.cpp:(.text+0x44e): undefined reference to `clang::Sema::InstantiateClassTemplateSpecialization(clang::SourceLocation, clang::ClassTemplateSpecializationDecl*, clang::TemplateSpecializationKind, bool)'
./ClangExperiments/Stages/Codegen/Generator.cpp.o: In function `Wide::Codegen::Generator::Generator(Wide::Options::LLVM const&, Wide::Options::Clang const&)':
Generator.cpp:(.text+0x484): undefined reference to `llvm::LLVMContext::LLVMContext()'
Generator.cpp:(.text+0x49d): undefined reference to `llvm::Module::Module(llvm::StringRef, llvm::LLVMContext&)'
Generator.cpp:(.text+0x5ac): undefined reference to `llvm::Module::~Module()'
Generator.cpp:(.text+0x5b7): undefined reference to `llvm::LLVMContext::~LLVMContext()'
./ClangExperiments/Stages/Codegen/Generator.cpp.o: In function `Wide::Codegen::Generator::EmitCode()':
Generator.cpp:(.text+0x71f): undefined reference to `llvm::verifyModule(llvm::Module const&, llvm::VerifierFailureAction, std::string*)'
Generator.cpp:(.text+0x76b): undefined reference to `vtable for llvm::raw_string_ostream'
Generator.cpp:(.text+0x775): undefined reference to `llvm::Module::print(llvm::raw_ostream&, llvm::AssemblyAnnotationWriter*) const'
Generator.cpp:(.text+0x7e5): undefined reference to `llvm::Module::print(llvm::raw_ostream&, llvm::AssemblyAnnotationWriter*) const'
Generator.cpp:(.text+0x7f7): undefined reference to `llvm::verifyModule(llvm::Module const&, llvm::VerifierFailureAction, std::string*)'
Generator.cpp:(.text+0x809): undefined reference to `llvm::raw_string_ostream::~raw_string_ostream()'
Generator.cpp:(.text+0x901): undefined reference to `llvm::raw_string_ostream::~raw_string_ostream()'
./ClangExperiments/Stages/Codegen/Generator.cpp.o: In function `Wide::Codegen::Generator::operator()()':
Generator.cpp:(.text+0xa7b8): undefined reference to `LLVMInitializeSystemZTargetInfo'
Generator.cpp:(.text+0xa7bd): undefined reference to `LLVMInitializeHexagonTargetInfo'
Generator.cpp:(.text+0xa7c2): undefined reference to `LLVMInitializeNVPTXTargetInfo'
Generator.cpp:(.text+0xa7c7): undefined reference to `LLVMInitializeMBlazeTargetInfo'
Generator.cpp:(.text+0xa7d1): undefined reference to `LLVMInitializeCppBackendTargetInfo'
Generator.cpp:(.text+0xa7d6): undefined reference to `LLVMInitializeMSP430TargetInfo'
Generator.cpp:(.text+0xa7db): undefined reference to `LLVMInitializeXCoreTargetInfo'
Generator.cpp:(.text+0xa7e1): undefined reference to `LLVMInitializeMipsTargetInfo'
Generator.cpp:(.text+0xa7e6): undefined reference to `LLVMInitializeARMTargetInfo'
Generator.cpp:(.text+0xa7eb): undefined reference to `LLVMInitializeAArch64TargetInfo'
Generator.cpp:(.text+0xa7f1): undefined reference to `LLVMInitializePowerPCTargetInfo'
Generator.cpp:(.text+0xa7f6): undefined reference to `LLVMInitializeSparcTargetInfo'
Generator.cpp:(.text+0xa7fb): undefined reference to `LLVMInitializeX86TargetInfo'
Generator.cpp:(.text+0xa801): undefined reference to `LLVMInitializeSystemZTarget'
Generator.cpp:(.text+0xa806): undefined reference to `LLVMInitializeHexagonTarget'
Generator.cpp:(.text+0xa80b): undefined reference to `LLVMInitializeNVPTXTarget'
Generator.cpp:(.text+0xa811): undefined reference to `LLVMInitializeMBlazeTarget'
Generator.cpp:(.text+0xa816): undefined reference to `LLVMInitializeCppBackendTarget'
Generator.cpp:(.text+0xa81b): undefined reference to `LLVMInitializeMSP430Target'
Generator.cpp:(.text+0xa821): undefined reference to `LLVMInitializeXCoreTarget'
Generator.cpp:(.text+0xa826): undefined reference to `LLVMInitializeMipsTarget'
Generator.cpp:(.text+0xa82b): undefined reference to `LLVMInitializeARMTarget'
Generator.cpp:(.text+0xa831): undefined reference to `LLVMInitializeAArch64Target'
Generator.cpp:(.text+0xa836): undefined reference to `LLVMInitializePowerPCTarget'
Generator.cpp:(.text+0xa83b): undefined reference to `LLVMInitializeSparcTarget'
Generator.cpp:(.text+0xa841): undefined reference to `LLVMInitializeX86Target'
Generator.cpp:(.text+0xa846): undefined reference to `LLVMInitializeSystemZTargetMC'
Generator.cpp:(.text+0xa84b): undefined reference to `LLVMInitializeHexagonTargetMC'
Generator.cpp:(.text+0xa851): undefined reference to `LLVMInitializeNVPTXTargetMC'
Generator.cpp:(.text+0xa856): undefined reference to `LLVMInitializeMBlazeTargetMC'
Generator.cpp:(.text+0xa85b): undefined reference to `LLVMInitializeCppBackendTargetMC'
Generator.cpp:(.text+0xa861): undefined reference to `LLVMInitializeMSP430TargetMC'
Generator.cpp:(.text+0xa866): undefined reference to `LLVMInitializeXCoreTargetMC'
Generator.cpp:(.text+0xa86b): undefined reference to `LLVMInitializeMipsTargetMC'
Generator.cpp:(.text+0xa871): undefined reference to `LLVMInitializeARMTargetMC'
Generator.cpp:(.text+0xa876): undefined reference to `LLVMInitializeAArch64TargetMC'
Generator.cpp:(.text+0xa87b): undefined reference to `LLVMInitializePowerPCTargetMC'
Generator.cpp:(.text+0xa881): undefined reference to `LLVMInitializeSparcTargetMC'
Generator.cpp:(.text+0xa886): undefined reference to `LLVMInitializeX86TargetMC'
Generator.cpp:(.text+0xa88b): undefined reference to `LLVMInitializeSystemZAsmPrinter'
Generator.cpp:(.text+0xa891): undefined reference to `LLVMInitializeHexagonAsmPrinter'
Generator.cpp:(.text+0xa896): undefined reference to `LLVMInitializeNVPTXAsmPrinter'
Generator.cpp:(.text+0xa89b): undefined reference to `LLVMInitializeMBlazeAsmPrinter'
Generator.cpp:(.text+0xa8a1): undefined reference to `LLVMInitializeMSP430AsmPrinter'
Generator.cpp:(.text+0xa8a6): undefined reference to `LLVMInitializeXCoreAsmPrinter'
Generator.cpp:(.text+0xa8ab): undefined reference to `LLVMInitializeMipsAsmPrinter'
Generator.cpp:(.text+0xa8b1): undefined reference to `LLVMInitializeARMAsmPrinter'
Generator.cpp:(.text+0xa8b6): undefined reference to `LLVMInitializeAArch64AsmPrinter'
Generator.cpp:(.text+0xa8bb): undefined reference to `LLVMInitializePowerPCAsmPrinter'
Generator.cpp:(.text+0xa8c1): undefined reference to `LLVMInitializeSparcAsmPrinter'
Generator.cpp:(.text+0xa8c6): undefined reference to `LLVMInitializeX86AsmPrinter'
Generator.cpp:(.text+0xa8cb): undefined reference to `LLVMInitializeSystemZAsmParser'
Generator.cpp:(.text+0xa8d1): undefined reference to `LLVMInitializeMBlazeAsmParser'
Generator.cpp:(.text+0xa8d6): undefined reference to `LLVMInitializeMipsAsmParser'
Generator.cpp:(.text+0xa8db): undefined reference to `LLVMInitializeARMAsmParser'
Generator.cpp:(.text+0xa8e1): undefined reference to `LLVMInitializeAArch64AsmParser'
Generator.cpp:(.text+0xa8e6): undefined reference to `LLVMInitializePowerPCAsmParser'
Generator.cpp:(.text+0xa8eb): undefined reference to `LLVMInitializeX86AsmParser'
Generator.cpp:(.text+0xa90a): undefined reference to `llvm::TargetRegistry::lookupTarget(std::string const&, std::string&)'
Generator.cpp:(.text+0xa9ac): undefined reference to `llvm::Triple::Triple(llvm::Twine const&)'
Generator.cpp:(.text+0xa9b9): undefined reference to `llvm::Triple::getArchName() const'
Generator.cpp:(.text+0xaa49): undefined reference to `llvm::DataLayout::getStringRepresentation() const'
Generator.cpp:(.text+0xaaca): undefined reference to `llvm::PassManager::PassManager()'
Generator.cpp:(.text+0xac0d): undefined reference to `vtable for llvm::raw_os_ostream'
Generator.cpp:(.text+0xac50): undefined reference to `vtable for llvm::formatted_raw_ostream'
Generator.cpp:(.text+0xac7b): undefined reference to `llvm::raw_ostream::preferred_buffer_size() const'
Generator.cpp:(.text+0xaca9): undefined reference to `llvm::raw_ostream::flush_nonempty()'
Generator.cpp:(.text+0xacbc): undefined reference to `llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind)'
Generator.cpp:(.text+0xacd6): undefined reference to `llvm::raw_ostream::flush_nonempty()'
Generator.cpp:(.text+0xace4): undefined reference to `llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind)'
Generator.cpp:(.text+0xad23): undefined reference to `llvm::DataLayout::ID'
Generator.cpp:(.text+0xad31): undefined reference to `vtable for llvm::DataLayout'
Generator.cpp:(.text+0xada1): undefined reference to `llvm::DataLayout::init(llvm::StringRef)'
Generator.cpp:(.text+0xadb1): undefined reference to `llvm::PassManager::add(llvm::Pass*)'
Generator.cpp:(.text+0xadd8): undefined reference to `llvm::Pass::createPass(void const*)'
Generator.cpp:(.text+0xade8): undefined reference to `llvm::PassManager::add(llvm::Pass*)'
Generator.cpp:(.text+0xae33): undefined reference to `llvm::PassManager::run(llvm::Module&)'
Generator.cpp:(.text+0xae4f): undefined reference to `vtable for llvm::formatted_raw_ostream'
Generator.cpp:(.text+0xae5e): undefined reference to `llvm::raw_ostream::flush_nonempty()'
Generator.cpp:(.text+0xae8f): undefined reference to `llvm::raw_ostream::~raw_ostream()'
Generator.cpp:(.text+0xae97): undefined reference to `llvm::raw_os_ostream::~raw_os_ostream()'
Generator.cpp:(.text+0xaf22): undefined reference to `llvm::PassManager::~PassManager()'
Generator.cpp:(.text+0xaf9e): undefined reference to `llvm::raw_ostream::flush_nonempty()'
Generator.cpp:(.text+0xafbe): undefined reference to `llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind)'
Generator.cpp:(.text+0xaff8): undefined reference to `llvm::raw_ostream::flush_nonempty()'
Generator.cpp:(.text+0xb006): undefined reference to `llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind)'
Generator.cpp:(.text+0xb01d): undefined reference to `llvm::raw_ostream::preferred_buffer_size() const'
Generator.cpp:(.text+0xb03a): undefined reference to `llvm::raw_ostream::flush_nonempty()'
Generator.cpp:(.text+0xb055): undefined reference to `llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind)'
Generator.cpp:(.text+0xb1fe): undefined reference to `llvm::raw_os_ostream::~raw_os_ostream()'
Generator.cpp:(.text+0xb213): undefined reference to `llvm::PassManager::~PassManager()'
Generator.cpp:(.text+0xb2f5): undefined reference to `llvm::raw_ostream::~raw_ostream()'
Generator.cpp:(.text+0xb354): undefined reference to `llvm::ImmutablePass::~ImmutablePass()'
./ClangExperiments/Stages/Codegen/Generator.cpp.o: In function `llvm::formatted_raw_ostream::~formatted_raw_ostream()':
Generator.cpp:(.text._ZN4llvm21formatted_raw_ostreamD2Ev[_ZN4llvm21formatted_raw_ostreamD5Ev]+0x12): undefined reference to `vtable for llvm::formatted_raw_ostream'
Generator.cpp:(.text._ZN4llvm21formatted_raw_ostreamD2Ev[_ZN4llvm21formatted_raw_ostreamD5Ev]+0x19): undefined reference to `llvm::raw_ostream::flush_nonempty()'
Generator.cpp:(.text._ZN4llvm21formatted_raw_ostreamD2Ev[_ZN4llvm21formatted_raw_ostreamD5Ev]+0x6d): undefined reference to `llvm::raw_ostream::flush_nonempty()'
Generator.cpp:(.text._ZN4llvm21formatted_raw_ostreamD2Ev[_ZN4llvm21formatted_raw_ostreamD5Ev]+0x7b): undefined reference to `llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind)'
Generator.cpp:(.text._ZN4llvm21formatted_raw_ostreamD2Ev[_ZN4llvm21formatted_raw_ostreamD5Ev]+0x99): undefined reference to `llvm::raw_ostream::preferred_buffer_size() const'
Generator.cpp:(.text._ZN4llvm21formatted_raw_ostreamD2Ev[_ZN4llvm21formatted_raw_ostreamD5Ev]+0xba): undefined reference to `llvm::raw_ostream::flush_nonempty()'
Generator.cpp:(.text._ZN4llvm21formatted_raw_ostreamD2Ev[_ZN4llvm21formatted_raw_ostreamD5Ev]+0xd5): undefined reference to `llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind)'
Generator.cpp:(.text._ZN4llvm21formatted_raw_ostreamD2Ev[_ZN4llvm21formatted_raw_ostreamD5Ev]+0x3e): undefined reference to `llvm::raw_ostream::~raw_ostream()'
Generator.cpp:(.text._ZN4llvm21formatted_raw_ostreamD2Ev[_ZN4llvm21formatted_raw_ostreamD5Ev]+0x87): undefined reference to `llvm::raw_ostream::~raw_ostream()'
Generator.cpp:(.text._ZN4llvm21formatted_raw_ostreamD2Ev[_ZN4llvm21formatted_raw_ostreamD5Ev]+0xe1): undefined reference to `llvm::raw_ostream::~raw_ostream()'
./ClangExperiments/Stages/Codegen/Generator.cpp.o: In function `llvm::formatted_raw_ostream::~formatted_raw_ostream()':
Generator.cpp:(.text._ZN4llvm21formatted_raw_ostreamD0Ev[_ZN4llvm21formatted_raw_ostreamD0Ev]+0x12): undefined reference to `vtable for llvm::formatted_raw_ostream'
Generator.cpp:(.text._ZN4llvm21formatted_raw_ostreamD0Ev[_ZN4llvm21formatted_raw_ostreamD0Ev]+0x19): undefined reference to `llvm::raw_ostream::flush_nonempty()'
Generator.cpp:(.text._ZN4llvm21formatted_raw_ostreamD0Ev[_ZN4llvm21formatted_raw_ostreamD0Ev]+0x3a): undefined reference to `llvm::raw_ostream::~raw_ostream()'
Generator.cpp:(.text._ZN4llvm21formatted_raw_ostreamD0Ev[_ZN4llvm21formatted_raw_ostreamD0Ev]+0x75): undefined reference to `llvm::raw_ostream::flush_nonempty()'
Generator.cpp:(.text._ZN4llvm21formatted_raw_ostreamD0Ev[_ZN4llvm21formatted_raw_ostreamD0Ev]+0x83): undefined reference to `llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind)'
Generator.cpp:(.text._ZN4llvm21formatted_raw_ostreamD0Ev[_ZN4llvm21formatted_raw_ostreamD0Ev]+0x99): undefined reference to `llvm::raw_ostream::preferred_buffer_size() const'
Generator.cpp:(.text._ZN4llvm21formatted_raw_ostreamD0Ev[_ZN4llvm21formatted_raw_ostreamD0Ev]+0xba): undefined reference to `llvm::raw_ostream::flush_nonempty()'
Generator.cpp:(.text._ZN4llvm21formatted_raw_ostreamD0Ev[_ZN4llvm21formatted_raw_ostreamD0Ev]+0xd5): undefined reference to `llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind)'
./ClangExperiments/WideLibrary/main_trampoline.cpp.o: In function `main':
main_trampoline.cpp:(.text.startup+0x5): undefined reference to `Wide::Main()'
collect2: error: ld returned 1 exit status
