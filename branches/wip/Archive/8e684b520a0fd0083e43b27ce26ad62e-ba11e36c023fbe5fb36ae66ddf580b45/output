+ g++-4.8 -std=c++11 -O2 -Wall -pedantic -pthread main.cpp
In file included from main.cpp:1:0:
/usr/include/c++/4.8/functional: In instantiation of 'struct std::_Bind_simple<std::_Bind<std::_Mem_fn<void (Shared<Item>::*)(int&&)>(Shared<Item>*, int)>()>':
/usr/include/c++/4.8/thread:137:47:   required from 'std::thread::thread(_Callable&&, _Args&& ...) [with _Callable = std::_Bind<std::_Mem_fn<void (Shared<Item>::*)(int&&)>(Shared<Item>*, int)>; _Args = {}]'
main.cpp:12:89:   required from 'Shared<T>::Shared(Args&& ...) [with Args = {int}; T = Item]'
main.cpp:42:24:   required from here
/usr/include/c++/4.8/functional:1697:61: error: no type named 'type' in 'class std::result_of<std::_Bind<std::_Mem_fn<void (Shared<Item>::*)(int&&)>(Shared<Item>*, int)>()>'
       typedef typename result_of<_Callable(_Args...)>::type result_type;
                                                             ^
/usr/include/c++/4.8/functional:1727:9: error: no type named 'type' in 'class std::result_of<std::_Bind<std::_Mem_fn<void (Shared<Item>::*)(int&&)>(Shared<Item>*, int)>()>'
         _M_invoke(_Index_tuple<_Indices...>)
         ^
