main.cpp:17:9: error: use of undeclared identifier 'str'
        str     = qi::lexeme [
        ^
main.cpp:33:17: error: use of undeclared identifier 'str'
            >> -str % tolleaf
                ^
main.cpp:47:26: error: use of undeclared identifier 'str'
                 (leaf | str)
                         ^
main.cpp:49:26: error: use of undeclared identifier 'str'
              >> (leaf | str | taglist | objlist | object) 
                         ^
main.cpp:55:49: error: use of undeclared identifier 'str'
        BOOST_SPIRIT_DEBUG_NODES((root)(braces)(str)(tolleaf)(leaf)(taglist)(objlist)(object)(assign));
                                                ^
/usr/local/include/boost/spirit/home/qi/nonterminal/debug_handler.hpp:142:57: note: expanded from macro 'BOOST_SPIRIT_DEBUG_NODES'
    BOOST_PP_SEQ_FOR_EACH(BOOST_SPIRIT_DEBUG_NODE_A, _, seq)                    \
                                                        ^
/usr/local/include/boost/preprocessor/seq/for_each.hpp:26:80: note: expanded from macro 'BOOST_PP_SEQ_FOR_EACH'
#    define BOOST_PP_SEQ_FOR_EACH(macro, data, seq) BOOST_PP_FOR((macro, data, seq (nil)), BOOST_PP_SEQ_FOR_EACH_P, BOOST_PP_SEQ_FOR_EACH_O, BOOST_PP_SEQ_FOR_EACH_M)
                                                                               ^
/usr/local/include/boost/preprocessor/repetition/detail/for.hpp:22:78: note: expanded from macro 'BOOST_PP_FOR_1'
# define BOOST_PP_FOR_1(s, p, o, m) BOOST_PP_FOR_1_C(BOOST_PP_BOOL(p(2, s)), s, p, o, m)
                                                                             ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/spirit/home/qi/nonterminal/debug_handler.hpp:138:29: note: expanded from macro 'BOOST_SPIRIT_DEBUG_NODE_A'
    BOOST_SPIRIT_DEBUG_NODE(name);                                              \
                            ^
/usr/local/include/boost/spirit/home/qi/nonterminal/debug_handler.hpp:131:41: note: expanded from macro 'BOOST_SPIRIT_DEBUG_NODE'
    #define BOOST_SPIRIT_DEBUG_NODE(r)  r.name(#r); debug(r)
                                        ^
main.cpp:55:49: error: use of undeclared identifier 'str'
/usr/local/include/boost/spirit/home/qi/nonterminal/debug_handler.hpp:142:57: note: expanded from macro 'BOOST_SPIRIT_DEBUG_NODES'
    BOOST_PP_SEQ_FOR_EACH(BOOST_SPIRIT_DEBUG_NODE_A, _, seq)                    \
                                                        ^
/usr/local/include/boost/preprocessor/seq/for_each.hpp:26:80: note: expanded from macro 'BOOST_PP_SEQ_FOR_EACH'
#    define BOOST_PP_SEQ_FOR_EACH(macro, data, seq) BOOST_PP_FOR((macro, data, seq (nil)), BOOST_PP_SEQ_FOR_EACH_P, BOOST_PP_SEQ_FOR_EACH_O, BOOST_PP_SEQ_FOR_EACH_M)
                                                                               ^
/usr/local/include/boost/preprocessor/repetition/detail/for.hpp:22:78: note: expanded from macro 'BOOST_PP_FOR_1'
# define BOOST_PP_FOR_1(s, p, o, m) BOOST_PP_FOR_1_C(BOOST_PP_BOOL(p(2, s)), s, p, o, m)
                                                                             ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/spirit/home/qi/nonterminal/debug_handler.hpp:138:29: note: expanded from macro 'BOOST_SPIRIT_DEBUG_NODE_A'
    BOOST_SPIRIT_DEBUG_NODE(name);                                              \
                            ^
/usr/local/include/boost/spirit/home/qi/nonterminal/debug_handler.hpp:131:59: note: expanded from macro 'BOOST_SPIRIT_DEBUG_NODE'
    #define BOOST_SPIRIT_DEBUG_NODE(r)  r.name(#r); debug(r)
                                                          ^
6 errors generated.
