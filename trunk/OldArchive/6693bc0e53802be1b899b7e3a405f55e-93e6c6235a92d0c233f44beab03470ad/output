In file included from main.cpp:2:
In file included from /usr/local/include/boost/spirit/include/qi.hpp:16:
In file included from /usr/local/include/boost/spirit/home/qi.hpp:14:
In file included from /usr/local/include/boost/spirit/home/qi/action.hpp:14:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:14:
In file included from /usr/local/include/boost/spirit/home/qi/meta_compiler.hpp:14:
In file included from /usr/local/include/boost/spirit/home/support/meta_compiler.hpp:19:
In file included from /usr/local/include/boost/proto/proto.hpp:15:
In file included from /usr/local/include/boost/proto/transform.hpp:14:
/usr/local/include/boost/proto/transform/default.hpp:154:41: error: assigning to 'ast::expression *' from incompatible type 'boost::spirit::unused_type'
        BOOST_PROTO_BINARY_DEFAULT_EVAL(=, assign, make_mutable, make)
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/include/boost/proto/transform/default.hpp:103:48: note: expanded from macro 'BOOST_PROTO_BINARY_DEFAULT_EVAL'
                    proto::detail::LMAKE<r0>() OP proto::detail::RMAKE<r1>()                        \
                                               ^
/usr/local/include/boost/proto/detail/decltype.hpp:47:62: note: expanded from macro 'BOOST_PROTO_DECLTYPE_'
# define BOOST_PROTO_DECLTYPE_(EXPR, TYPE) typedef decltype((EXPR)) TYPE;
                                                             ^
/usr/local/include/boost/proto/matches.hpp:835:13: note: in instantiation of template class 'boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> &, boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, boost::fusion::vector1<boost::spirit::unused_type &> &, boost::spirit::context<boost::fusion::cons<ast::expression *&, boost::fusion::nil>, boost::fusion::vector0<void> > &, bool &> &, const boost::phoenix::default_actions &>' requested here
          : Cases::template case_<typename Expr::proto_tag>::template impl<Expr &, State, Data>
            ^
/usr/local/include/boost/proto/transform/when.hpp:187:13: note: in instantiation of template class 'boost::proto::switch_<boost::proto::detail::default_cases<boost::phoenix::meta_grammar>, boost::proto::tag_of<boost::proto::_> ()>::impl<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> &, boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, boost::fusion::vector1<boost::spirit::unused_type &> &, boost::spirit::context<boost::fusion::cons<ast::expression *&, boost::fusion::nil>, boost::fusion::vector0<void> > &, bool &> &, const boost::phoenix::default_actions &>' requested here
          : remove_reference<
            ^
/usr/local/include/boost/proto/matches.hpp:835:13: note: in instantiation of template class 'boost::proto::when<boost::phoenix::rule::assign, boost::proto::external_transform>::impl<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> &, boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, boost::fusion::vector1<boost::spirit::unused_type &> &, boost::spirit::context<boost::fusion::cons<ast::expression *&, boost::fusion::nil>, boost::fusion::vector0<void> > &, bool &> &, const boost::phoenix::default_actions &>' requested here
          : Cases::template case_<typename Expr::proto_tag>::template impl<Expr &, State, Data>
            ^
/usr/local/include/boost/phoenix/core/meta_grammar.hpp:66:30: note: in instantiation of template class 'boost::proto::switch_<boost::phoenix::meta_grammar, boost::proto::tag_of<boost::proto::_> ()>::impl<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> &, boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, boost::fusion::vector1<boost::spirit::unused_type &> &, boost::spirit::context<boost::fusion::cons<ast::expression *&, boost::fusion::nil>, boost::fusion::vector0<void> > &, bool &> &, const boost::phoenix::default_actions &>' requested here
            typedef typename what::result_type result_type;
                             ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_result_of_10.hpp:96:21: note: in instantiation of template class 'boost::phoenix::evaluator::impl<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> &, const boost::phoenix::vector2<boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, boost::fusion::vector1<boost::spirit::unused_type &> &, boost::spirit::context<boost::fusion::cons<ast::expression *&, boost::fusion::nil>, boost::fusion::vector0<void> > &, bool &> &, boost::phoenix::default_actions> &, boost::proto::envns_::empty_env>' requested here
                    impl<
                    ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:48:29: note: (skipping 22 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)
        typename result_of::actor<proto_base_expr, A0 & , A1 & , A2 &>::type
                            ^
/usr/local/include/boost/function/function_template.hpp:1124:5: note: in instantiation of function template specialization 'boost::function<bool (boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > > &, const boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > > &, boost::spirit::context<boost::fusion::cons<ast::expression *&, boost::fusion::nil>, boost::fusion::vector0<void> > &, const boost::spirit::unused_type &)>::function<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::lex::reference<const boost::spirit::lex::token_def<std::basic_string<char>, char, unsigned long>, unsigned long>, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<detail::build_integer_constant_expression__impl_1>, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > >, 2> > >, boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::lex::reference<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long>, unsigned long>, boost::fusion::cons<boost::spirit::qi::reference<const boost::spirit::qi::rule<boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > >, ast::expression *(), boost::spirit::unused_type, boost::spirit::unused_type, boost::spirit::unused_type> >, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::lex::reference<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long>, unsigned long>, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > >, boost::fusion::nil> > > >, boost::fusion::nil> > >, mpl_::bool_<false> > >' requested here
    self_type(f).swap(*this);
    ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:182:19: note: in instantiation of function template specialization 'boost::function<bool (boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > > &, const boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > > &, boost::spirit::context<boost::fusion::cons<ast::expression *&, boost::fusion::nil>, boost::fusion::vector0<void> > &, const boost::spirit::unused_type &)>::operator=<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::lex::reference<const boost::spirit::lex::token_def<std::basic_string<char>, char, unsigned long>, unsigned long>, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<detail::build_integer_constant_expression__impl_1>, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > >, 2> > >, boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::lex::reference<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long>, unsigned long>, boost::fusion::cons<boost::spirit::qi::reference<const boost::spirit::qi::rule<boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > >, ast::expression *(), boost::spirit::unused_type, boost::spirit::unused_type, boost::spirit::unused_type> >, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::lex::reference<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long>, unsigned long>, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > >, boost::fusion::nil> > > >, boost::fusion::nil> > >, mpl_::bool_<false> > >' requested here
            lhs.f = detail::bind_parser<Auto>(
                  ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:220:13: note: in instantiation of function template specialization 'boost::spirit::qi::rule<boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > >, ast::expression *(), boost::spirit::unused_type, boost::spirit::unused_type, boost::spirit::unused_type>::define<mpl_::bool_<false>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::lex::token_def<std::basic_string<char>, char, unsigned long> &, const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<detail::build_integer_constant_expression__impl_1>, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > >, 2> > &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long> &, boost::spirit::qi::rule<boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > >, ast::expression *(), boost::spirit::unused_type, boost::spirit::unused_type, boost::spirit::unused_type> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long> &, const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > &>, 2> &>, 2> &>, 2> >' requested here
            define<mpl::false_>(*this, expr, traits::matches<qi::domain, Expr>());
            ^
main.cpp:170:21: note: in instantiation of function template specialization 'boost::spirit::qi::rule<boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > >, ast::expression *(), boost::spirit::unused_type, boost::spirit::unused_type, boost::spirit::unused_type>::operator=<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::lex::token_def<std::basic_string<char>, char, unsigned long> &, const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<detail::build_integer_constant_expression__impl_1>, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > >, 2> > &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long> &, boost::spirit::qi::rule<boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > >, ast::expression *(), boost::spirit::unused_type, boost::spirit::unused_type, boost::spirit::unused_type> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long> &, const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > &>, 2> &>, 2> &>, 2> >' requested here
        plus_factor = tok.number                        [ qi::_val = build_integer_constant_expression_(qi::_1) ]
                    ^
main.cpp:198:43: note: in instantiation of function template specialization 'strip_comments_grammar<boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > > >::strip_comments_grammar<strip_comments_tokens<boost::spirit::lex::lexertl::lexer<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > > > >' requested here
    strip_comments_grammar<iterator_type> g (strip_comments);   // Our parser 
                                          ^
In file included from main.cpp:2:
In file included from /usr/local/include/boost/spirit/include/qi.hpp:16:
In file included from /usr/local/include/boost/spirit/home/qi.hpp:14:
In file included from /usr/local/include/boost/spirit/home/qi/action.hpp:14:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:14:
In file included from /usr/local/include/boost/spirit/home/qi/meta_compiler.hpp:14:
In file included from /usr/local/include/boost/spirit/home/support/meta_compiler.hpp:19:
In file included from /usr/local/include/boost/proto/proto.hpp:15:
In file included from /usr/local/include/boost/proto/transform.hpp:14:
/usr/local/include/boost/proto/transform/default.hpp:154:41: error: assigning to 'ast::expression *' from incompatible type 'boost::spirit::unused_type'
        BOOST_PROTO_BINARY_DEFAULT_EVAL(=, assign, make_mutable, make)
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/include/boost/proto/transform/default.hpp:103:48: note: expanded from macro 'BOOST_PROTO_BINARY_DEFAULT_EVAL'
                    proto::detail::LMAKE<r0>() OP proto::detail::RMAKE<r1>()                        \
                                               ^
/usr/local/include/boost/proto/detail/decltype.hpp:47:62: note: expanded from macro 'BOOST_PROTO_DECLTYPE_'
# define BOOST_PROTO_DECLTYPE_(EXPR, TYPE) typedef decltype((EXPR)) TYPE;
                                                             ^
/usr/local/include/boost/proto/matches.hpp:835:13: note: in instantiation of template class 'boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> &, boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, const boost::fusion::vector1<boost::spirit::unused_type &> &, const boost::spirit::context<boost::fusion::cons<ast::expression *&, boost::fusion::nil>, boost::fusion::vector0<void> > &, const bool &> &, const boost::phoenix::default_actions &>' requested here
          : Cases::template case_<typename Expr::proto_tag>::template impl<Expr &, State, Data>
            ^
/usr/local/include/boost/proto/transform/when.hpp:187:13: note: in instantiation of template class 'boost::proto::switch_<boost::proto::detail::default_cases<boost::phoenix::meta_grammar>, boost::proto::tag_of<boost::proto::_> ()>::impl<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> &, boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, const boost::fusion::vector1<boost::spirit::unused_type &> &, const boost::spirit::context<boost::fusion::cons<ast::expression *&, boost::fusion::nil>, boost::fusion::vector0<void> > &, const bool &> &, const boost::phoenix::default_actions &>' requested here
          : remove_reference<
            ^
/usr/local/include/boost/proto/matches.hpp:835:13: note: in instantiation of template class 'boost::proto::when<boost::phoenix::rule::assign, boost::proto::external_transform>::impl<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> &, boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, const boost::fusion::vector1<boost::spirit::unused_type &> &, const boost::spirit::context<boost::fusion::cons<ast::expression *&, boost::fusion::nil>, boost::fusion::vector0<void> > &, const bool &> &, const boost::phoenix::default_actions &>' requested here
          : Cases::template case_<typename Expr::proto_tag>::template impl<Expr &, State, Data>
            ^
/usr/local/include/boost/phoenix/core/meta_grammar.hpp:66:30: note: in instantiation of template class 'boost::proto::switch_<boost::phoenix::meta_grammar, boost::proto::tag_of<boost::proto::_> ()>::impl<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> &, boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, const boost::fusion::vector1<boost::spirit::unused_type &> &, const boost::spirit::context<boost::fusion::cons<ast::expression *&, boost::fusion::nil>, boost::fusion::vector0<void> > &, const bool &> &, const boost::phoenix::default_actions &>' requested here
            typedef typename what::result_type result_type;
                             ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_result_of_10.hpp:96:21: note: in instantiation of template class 'boost::phoenix::evaluator::impl<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> &, const boost::phoenix::vector2<boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, const boost::fusion::vector1<boost::spirit::unused_type &> &, const boost::spirit::context<boost::fusion::cons<ast::expression *&, boost::fusion::nil>, boost::fusion::vector0<void> > &, const bool &> &, boost::phoenix::default_actions> &, boost::proto::envns_::empty_env>' requested here
                    impl<
                    ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:74:29: note: (skipping 22 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)
        typename result_of::actor<proto_base_expr, A0 const& , A1 const& , A2 const&>::type
                            ^
/usr/local/include/boost/function/function_template.hpp:1124:5: note: in instantiation of function template specialization 'boost::function<bool (boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > > &, const boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > > &, boost::spirit::context<boost::fusion::cons<ast::expression *&, boost::fusion::nil>, boost::fusion::vector0<void> > &, const boost::spirit::unused_type &)>::function<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::lex::reference<const boost::spirit::lex::token_def<std::basic_string<char>, char, unsigned long>, unsigned long>, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<detail::build_integer_constant_expression__impl_1>, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > >, 2> > >, boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::lex::reference<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long>, unsigned long>, boost::fusion::cons<boost::spirit::qi::reference<const boost::spirit::qi::rule<boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > >, ast::expression *(), boost::spirit::unused_type, boost::spirit::unused_type, boost::spirit::unused_type> >, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::lex::reference<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long>, unsigned long>, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > >, boost::fusion::nil> > > >, boost::fusion::nil> > >, mpl_::bool_<false> > >' requested here
    self_type(f).swap(*this);
    ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:182:19: note: in instantiation of function template specialization 'boost::function<bool (boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > > &, const boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > > &, boost::spirit::context<boost::fusion::cons<ast::expression *&, boost::fusion::nil>, boost::fusion::vector0<void> > &, const boost::spirit::unused_type &)>::operator=<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::lex::reference<const boost::spirit::lex::token_def<std::basic_string<char>, char, unsigned long>, unsigned long>, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<detail::build_integer_constant_expression__impl_1>, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > >, 2> > >, boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::lex::reference<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long>, unsigned long>, boost::fusion::cons<boost::spirit::qi::reference<const boost::spirit::qi::rule<boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > >, ast::expression *(), boost::spirit::unused_type, boost::spirit::unused_type, boost::spirit::unused_type> >, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::lex::reference<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long>, unsigned long>, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > >, boost::fusion::nil> > > >, boost::fusion::nil> > >, mpl_::bool_<false> > >' requested here
            lhs.f = detail::bind_parser<Auto>(
                  ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:220:13: note: in instantiation of function template specialization 'boost::spirit::qi::rule<boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > >, ast::expression *(), boost::spirit::unused_type, boost::spirit::unused_type, boost::spirit::unused_type>::define<mpl_::bool_<false>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::lex::token_def<std::basic_string<char>, char, unsigned long> &, const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<detail::build_integer_constant_expression__impl_1>, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > >, 2> > &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long> &, boost::spirit::qi::rule<boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > >, ast::expression *(), boost::spirit::unused_type, boost::spirit::unused_type, boost::spirit::unused_type> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long> &, const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > &>, 2> &>, 2> &>, 2> >' requested here
            define<mpl::false_>(*this, expr, traits::matches<qi::domain, Expr>());
            ^
main.cpp:170:21: note: in instantiation of function template specialization 'boost::spirit::qi::rule<boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > >, ast::expression *(), boost::spirit::unused_type, boost::spirit::unused_type, boost::spirit::unused_type>::operator=<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::lex::token_def<std::basic_string<char>, char, unsigned long> &, const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<detail::build_integer_constant_expression__impl_1>, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > >, 2> > &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long> &, boost::spirit::qi::rule<boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > >, ast::expression *(), boost::spirit::unused_type, boost::spirit::unused_type, boost::spirit::unused_type> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long> &, const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > &>, 2> &>, 2> &>, 2> >' requested here
        plus_factor = tok.number                        [ qi::_val = build_integer_constant_expression_(qi::_1) ]
                    ^
main.cpp:198:43: note: in instantiation of function template specialization 'strip_comments_grammar<boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > > >::strip_comments_grammar<strip_comments_tokens<boost::spirit::lex::lexertl::lexer<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > > > >' requested here
    strip_comments_grammar<iterator_type> g (strip_comments);   // Our parser 
                                          ^
In file included from main.cpp:2:
In file included from /usr/local/include/boost/spirit/include/qi.hpp:16:
In file included from /usr/local/include/boost/spirit/home/qi.hpp:14:
In file included from /usr/local/include/boost/spirit/home/qi/action.hpp:14:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:14:
In file included from /usr/local/include/boost/spirit/home/qi/meta_compiler.hpp:14:
In file included from /usr/local/include/boost/spirit/home/support/meta_compiler.hpp:19:
In file included from /usr/local/include/boost/proto/proto.hpp:15:
In file included from /usr/local/include/boost/proto/transform.hpp:14:
/usr/local/include/boost/proto/transform/default.hpp:154:41: error: assigning to 'ast::expression *' from incompatible type 'boost::spirit::unused_type'
        BOOST_PROTO_BINARY_DEFAULT_EVAL(=, assign, make_mutable, make)
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/include/boost/proto/transform/default.hpp:103:48: note: expanded from macro 'BOOST_PROTO_BINARY_DEFAULT_EVAL'
                    proto::detail::LMAKE<r0>() OP proto::detail::RMAKE<r1>()                        \
                                               ^
/usr/local/include/boost/proto/detail/decltype.hpp:47:62: note: expanded from macro 'BOOST_PROTO_DECLTYPE_'
# define BOOST_PROTO_DECLTYPE_(EXPR, TYPE) typedef decltype((EXPR)) TYPE;
                                                             ^
/usr/local/include/boost/proto/matches.hpp:835:13: note: in instantiation of template class 'boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > &, boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, boost::fusion::vector1<boost::spirit::unused_type &> &, boost::spirit::context<boost::fusion::cons<ast::expression *&, boost::fusion::nil>, boost::fusion::vector0<void> > &, bool &> &, const boost::phoenix::default_actions &>' requested here
          : Cases::template case_<typename Expr::proto_tag>::template impl<Expr &, State, Data>
            ^
/usr/local/include/boost/proto/transform/when.hpp:187:13: note: in instantiation of template class 'boost::proto::switch_<boost::proto::detail::default_cases<boost::phoenix::meta_grammar>, boost::proto::tag_of<boost::proto::_> ()>::impl<const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > &, boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, boost::fusion::vector1<boost::spirit::unused_type &> &, boost::spirit::context<boost::fusion::cons<ast::expression *&, boost::fusion::nil>, boost::fusion::vector0<void> > &, bool &> &, const boost::phoenix::default_actions &>' requested here
          : remove_reference<
            ^
/usr/local/include/boost/proto/matches.hpp:835:13: note: in instantiation of template class 'boost::proto::when<boost::phoenix::rule::assign, boost::proto::external_transform>::impl<const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > &, boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, boost::fusion::vector1<boost::spirit::unused_type &> &, boost::spirit::context<boost::fusion::cons<ast::expression *&, boost::fusion::nil>, boost::fusion::vector0<void> > &, bool &> &, const boost::phoenix::default_actions &>' requested here
          : Cases::template case_<typename Expr::proto_tag>::template impl<Expr &, State, Data>
            ^
/usr/local/include/boost/phoenix/core/meta_grammar.hpp:131:28: note: in instantiation of template class 'boost::proto::switch_<boost::phoenix::meta_grammar, boost::proto::tag_of<boost::proto::_> ()>::impl<const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > &, boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, boost::fusion::vector1<boost::spirit::unused_type &> &, boost::spirit::context<boost::fusion::cons<ast::expression *&, boost::fusion::nil>, boost::fusion::vector0<void> > &, bool &> &, const boost::phoenix::default_actions &>' requested here
    typename meta_grammar::template impl<
                           ^
/usr/local/include/boost/phoenix/core/meta_grammar.hpp:136:5: note: while substituting deduced template arguments into function template 'eval' [with Expr = boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, Context = boost::phoenix::vector2<boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, boost::fusion::vector1<boost::spirit::unused_type &> &, boost::spirit::context<boost::fusion::cons<ast::expression *&, boost::fusion::nil>, boost::fusion::vector0<void> > &, bool &> &, const boost::phoenix::default_actions &>]
    eval(Expr const& expr, Context const & ctx)
    ^
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:13: note: (skipping 21 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)
            f(attr_wrap, context, pass);
            ^
/usr/local/include/boost/function/function_template.hpp:1124:5: note: in instantiation of function template specialization 'boost::function<bool (boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > > &, const boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > > &, boost::spirit::context<boost::fusion::cons<ast::expression *&, boost::fusion::nil>, boost::fusion::vector0<void> > &, const boost::spirit::unused_type &)>::function<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::lex::reference<const boost::spirit::lex::token_def<std::basic_string<char>, char, unsigned long>, unsigned long>, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<detail::build_integer_constant_expression__impl_1>, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > >, 2> > >, boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::lex::reference<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long>, unsigned long>, boost::fusion::cons<boost::spirit::qi::reference<const boost::spirit::qi::rule<boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > >, ast::expression *(), boost::spirit::unused_type, boost::spirit::unused_type, boost::spirit::unused_type> >, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::lex::reference<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long>, unsigned long>, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > >, boost::fusion::nil> > > >, boost::fusion::nil> > >, mpl_::bool_<false> > >' requested here
    self_type(f).swap(*this);
    ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:182:19: note: in instantiation of function template specialization 'boost::function<bool (boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > > &, const boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > > &, boost::spirit::context<boost::fusion::cons<ast::expression *&, boost::fusion::nil>, boost::fusion::vector0<void> > &, const boost::spirit::unused_type &)>::operator=<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::lex::reference<const boost::spirit::lex::token_def<std::basic_string<char>, char, unsigned long>, unsigned long>, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<detail::build_integer_constant_expression__impl_1>, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > >, 2> > >, boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::lex::reference<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long>, unsigned long>, boost::fusion::cons<boost::spirit::qi::reference<const boost::spirit::qi::rule<boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > >, ast::expression *(), boost::spirit::unused_type, boost::spirit::unused_type, boost::spirit::unused_type> >, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::lex::reference<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long>, unsigned long>, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > >, boost::fusion::nil> > > >, boost::fusion::nil> > >, mpl_::bool_<false> > >' requested here
            lhs.f = detail::bind_parser<Auto>(
                  ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:220:13: note: in instantiation of function template specialization 'boost::spirit::qi::rule<boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > >, ast::expression *(), boost::spirit::unused_type, boost::spirit::unused_type, boost::spirit::unused_type>::define<mpl_::bool_<false>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::lex::token_def<std::basic_string<char>, char, unsigned long> &, const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<detail::build_integer_constant_expression__impl_1>, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > >, 2> > &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long> &, boost::spirit::qi::rule<boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > >, ast::expression *(), boost::spirit::unused_type, boost::spirit::unused_type, boost::spirit::unused_type> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long> &, const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > &>, 2> &>, 2> &>, 2> >' requested here
            define<mpl::false_>(*this, expr, traits::matches<qi::domain, Expr>());
            ^
main.cpp:170:21: note: in instantiation of function template specialization 'boost::spirit::qi::rule<boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > >, ast::expression *(), boost::spirit::unused_type, boost::spirit::unused_type, boost::spirit::unused_type>::operator=<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::lex::token_def<std::basic_string<char>, char, unsigned long> &, const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<detail::build_integer_constant_expression__impl_1>, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > >, 2> > &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long> &, boost::spirit::qi::rule<boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > >, ast::expression *(), boost::spirit::unused_type, boost::spirit::unused_type, boost::spirit::unused_type> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long> &, const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > &>, 2> &>, 2> &>, 2> >' requested here
        plus_factor = tok.number                        [ qi::_val = build_integer_constant_expression_(qi::_1) ]
                    ^
main.cpp:198:43: note: in instantiation of function template specialization 'strip_comments_grammar<boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > > >::strip_comments_grammar<strip_comments_tokens<boost::spirit::lex::lexertl::lexer<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > > > >' requested here
    strip_comments_grammar<iterator_type> g (strip_comments);   // Our parser 
                                          ^
In file included from main.cpp:2:
In file included from /usr/local/include/boost/spirit/include/qi.hpp:16:
In file included from /usr/local/include/boost/spirit/home/qi.hpp:14:
In file included from /usr/local/include/boost/spirit/home/qi/action.hpp:14:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:14:
In file included from /usr/local/include/boost/spirit/home/qi/meta_compiler.hpp:14:
In file included from /usr/local/include/boost/spirit/home/support/meta_compiler.hpp:20:
In file included from /usr/local/include/boost/spirit/home/support/make_component.hpp:15:
In file included from /usr/local/include/boost/spirit/include/phoenix_core.hpp:16:
In file included from /usr/local/include/boost/phoenix/core.hpp:15:
In file included from /usr/local/include/boost/phoenix/core/actor.hpp:272:
In file included from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8:
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:71:20: error: no matching function for call to 'eval'
            return phoenix::eval(*this, phoenix::context(env, default_actions()));
                   ^~~~~~~~~~~~~
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:13: note: in instantiation of function template specialization 'boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >::operator()<boost::fusion::vector1<boost::spirit::unused_type &>, boost::spirit::context<boost::fusion::cons<ast::expression *&, boost::fusion::nil>, boost::fusion::vector0<void> >, bool>' requested here
            f(attr_wrap, context, pass);
            ^
/usr/local/include/boost/spirit/home/qi/action/action.hpp:69:21: note: in instantiation of function template specialization 'boost::spirit::traits::action_dispatch<boost::spirit::lex::reference<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long>, unsigned long> >::operator()<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2>, boost::spirit::unused_type, boost::spirit::context<boost::fusion::cons<ast::expression *&, boost::fusion::nil>, boost::fusion::vector0<void> > >' requested here
                if (traits::action_dispatch<Subject>()(f, attr, context)) 
                    ^
/usr/local/include/boost/spirit/home/qi/detail/fail_function.hpp:38:31: note: in instantiation of function template specialization 'boost::spirit::qi::action<boost::spirit::lex::reference<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long>, unsigned long>, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > >::parse<boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > >, boost::spirit::context<boost::fusion::cons<ast::expression *&, boost::fusion::nil>, boost::fusion::vector0<void> >, boost::spirit::unused_type, const boost::spirit::unused_type>' requested here
            return !component.parse(first, last, context, skipper, attr);
                              ^
/usr/local/include/boost/spirit/home/support/algorithm/any_if.hpp:186:20: note: in instantiation of function template specialization 'boost::spirit::qi::detail::fail_function<boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > >, boost::spirit::context<boost::fusion::cons<ast::expression *&, boost::fusion::nil>, boost::fusion::vector0<void> >, boost::spirit::unused_type>::operator()<boost::spirit::qi::action<boost::spirit::lex::reference<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long>, unsigned long>, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > >, const boost::spirit::unused_type>' requested here
            return f(*first1, attribute) ||
                   ^
/usr/local/include/boost/spirit/home/support/algorithm/any_if.hpp:187:25: note: in instantiation of function template specialization 'boost::spirit::detail::any_if<boost::spirit::traits::attribute_not_unused<boost::spirit::context<boost::fusion::cons<ast::expression *&, boost::fusion::nil>, boost::fusion::vector0<void> >, boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > > >, boost::fusion::cons_iterator<const boost::fusion::cons<boost::spirit::qi::action<boost::spirit::lex::reference<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long>, unsigned long>, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > >, boost::fusion::nil> >, boost::fusion::cons_iterator<const boost::fusion::nil>, boost::fusion::vector_iterator<boost::fusion::vector1<const boost::spirit::unused_type &>, 1>, boost::fusion::vector_iterator<boost::fusion::vector1<const boost::spirit::unused_type &>, 1>, boost::spirit::qi::detail::fail_function<boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > >, boost::spirit::context<boost::fusion::cons<ast::expression *&, boost::fusion::nil>, boost::fusion::vector0<void> >, boost::spirit::unused_type> >' requested here
                detail::any_if<Pred>(
                        ^
/usr/local/include/boost/spirit/home/support/algorithm/any_if.hpp:187:25: note: (skipping 16 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)
/usr/local/include/boost/function/function_template.hpp:1124:5: note: in instantiation of function template specialization 'boost::function<bool (boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > > &, const boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > > &, boost::spirit::context<boost::fusion::cons<ast::expression *&, boost::fusion::nil>, boost::fusion::vector0<void> > &, const boost::spirit::unused_type &)>::function<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::lex::reference<const boost::spirit::lex::token_def<std::basic_string<char>, char, unsigned long>, unsigned long>, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<detail::build_integer_constant_expression__impl_1>, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > >, 2> > >, boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::lex::reference<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long>, unsigned long>, boost::fusion::cons<boost::spirit::qi::reference<const boost::spirit::qi::rule<boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > >, ast::expression *(), boost::spirit::unused_type, boost::spirit::unused_type, boost::spirit::unused_type> >, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::lex::reference<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long>, unsigned long>, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > >, boost::fusion::nil> > > >, boost::fusion::nil> > >, mpl_::bool_<false> > >' requested here
    self_type(f).swap(*this);
    ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:182:19: note: in instantiation of function template specialization 'boost::function<bool (boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > > &, const boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > > &, boost::spirit::context<boost::fusion::cons<ast::expression *&, boost::fusion::nil>, boost::fusion::vector0<void> > &, const boost::spirit::unused_type &)>::operator=<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::lex::reference<const boost::spirit::lex::token_def<std::basic_string<char>, char, unsigned long>, unsigned long>, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<detail::build_integer_constant_expression__impl_1>, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > >, 2> > >, boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::lex::reference<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long>, unsigned long>, boost::fusion::cons<boost::spirit::qi::reference<const boost::spirit::qi::rule<boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > >, ast::expression *(), boost::spirit::unused_type, boost::spirit::unused_type, boost::spirit::unused_type> >, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::lex::reference<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long>, unsigned long>, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > >, boost::fusion::nil> > > >, boost::fusion::nil> > >, mpl_::bool_<false> > >' requested here
            lhs.f = detail::bind_parser<Auto>(
                  ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:220:13: note: in instantiation of function template specialization 'boost::spirit::qi::rule<boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > >, ast::expression *(), boost::spirit::unused_type, boost::spirit::unused_type, boost::spirit::unused_type>::define<mpl_::bool_<false>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::lex::token_def<std::basic_string<char>, char, unsigned long> &, const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<detail::build_integer_constant_expression__impl_1>, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > >, 2> > &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long> &, boost::spirit::qi::rule<boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > >, ast::expression *(), boost::spirit::unused_type, boost::spirit::unused_type, boost::spirit::unused_type> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long> &, const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > &>, 2> &>, 2> &>, 2> >' requested here
            define<mpl::false_>(*this, expr, traits::matches<qi::domain, Expr>());
            ^
main.cpp:170:21: note: in instantiation of function template specialization 'boost::spirit::qi::rule<boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > >, ast::expression *(), boost::spirit::unused_type, boost::spirit::unused_type, boost::spirit::unused_type>::operator=<boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::lex::token_def<std::basic_string<char>, char, unsigned long> &, const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<detail::build_integer_constant_expression__impl_1>, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > >, 2> > &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long> &, boost::spirit::qi::rule<boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > >, ast::expression *(), boost::spirit::unused_type, boost::spirit::unused_type, boost::spirit::unused_type> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::lex::token_def<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::omit>, 0>, char, unsigned long> &, const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > &>, 2> &>, 2> &>, 2> >' requested here
        plus_factor = tok.number                        [ qi::_val = build_integer_constant_expression_(qi::_1) ]
                    ^
main.cpp:198:43: note: in instantiation of function template specialization 'strip_comments_grammar<boost::spirit::lex::lexertl::iterator<boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > > >::strip_comments_grammar<strip_comments_tokens<boost::spirit::lex::lexertl::lexer<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::spirit::lex::lexertl::functor<boost::spirit::lex::lexertl::token<__gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, boost::mpl::vector<std::basic_string<char>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, mpl_::bool_<true>, unsigned long>, lexertl::detail::data, __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >, mpl_::bool_<false>, mpl_::bool_<true> > > > >' requested here
    strip_comments_grammar<iterator_type> g (strip_comments);   // Our parser 
                                          ^
/usr/local/include/boost/phoenix/core/meta_grammar.hpp:136:5: note: candidate template ignored: substitution failure [with Expr = boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, Context = boost::phoenix::vector2<boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, boost::fusion::vector1<boost::spirit::unused_type &> &, boost::spirit::context<boost::fusion::cons<ast::expression *&, boost::fusion::nil>, boost::fusion::vector0<void> > &, bool &> &, const boost::phoenix::default_actions &>]
    eval(Expr const& expr, Context const & ctx)
    ^
/usr/local/include/boost/phoenix/core/meta_grammar.hpp:149:5: note: candidate template ignored: substitution failure [with Expr = const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, Context = boost::phoenix::vector2<boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, boost::fusion::vector1<boost::spirit::unused_type &> &, boost::spirit::context<boost::fusion::cons<ast::expression *&, boost::fusion::nil>, boost::fusion::vector0<void> > &, bool &> &, const boost::phoenix::default_actions &>]: no type named 'result_type' in 'boost::proto::switch_<boost::phoenix::meta_grammar, boost::proto::tag_of<boost::proto::_> ()>::impl<const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > &, boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::attribute<0> >, 0>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, boost::fusion::vector1<boost::spirit::unused_type &> &, boost::spirit::context<boost::fusion::cons<ast::expression *&, boost::fusion::nil>, boost::fusion::vector0<void> > &, bool &> &, const boost::phoenix::default_actions &>'
    eval(Expr & expr, Context const & ctx)
    ^
4 errors generated.
