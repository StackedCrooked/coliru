main.cpp: In function ‘int main()’:
main.cpp:11:22: error: no matching function for call to ‘std::tuple<Y>::tuple(std::tuple<X>&)’
main.cpp:11:22: note: candidates are:
In file included from main.cpp:1:0:
/usr/include/c++/4.7/tuple:449:2: note: template<class _Alloc, class ... _UElements, class> std::tuple::tuple(std::allocator_arg_t, const _Alloc&, std::tuple<_UElements ...>&&)
/usr/include/c++/4.7/tuple:449:2: note:   template argument deduction/substitution failed:
main.cpp:11:22: note:   cannot convert ‘t1’ (type ‘std::tuple<X>’) to type ‘std::allocator_arg_t’
In file included from main.cpp:1:0:
/usr/include/c++/4.7/tuple:440:2: note: template<class _Alloc, class ... _UElements, class> std::tuple::tuple(std::allocator_arg_t, const _Alloc&, const std::tuple<_UElements ...>&)
/usr/include/c++/4.7/tuple:440:2: note:   template argument deduction/substitution failed:
main.cpp:11:22: note:   cannot convert ‘t1’ (type ‘std::tuple<X>’) to type ‘std::allocator_arg_t’
In file included from main.cpp:1:0:
/usr/include/c++/4.7/tuple:434:2: note: template<class _Alloc> std::tuple::tuple(std::allocator_arg_t, const _Alloc&, std::tuple&&)
/usr/include/c++/4.7/tuple:434:2: note:   template argument deduction/substitution failed:
main.cpp:11:22: note:   cannot convert ‘t1’ (type ‘std::tuple<X>’) to type ‘std::allocator_arg_t’
In file included from main.cpp:1:0:
/usr/include/c++/4.7/tuple:430:2: note: template<class _Alloc> std::tuple::tuple(std::allocator_arg_t, const _Alloc&, const std::tuple&)
/usr/include/c++/4.7/tuple:430:2: note:   template argument deduction/substitution failed:
main.cpp:11:22: note:   cannot convert ‘t1’ (type ‘std::tuple<X>’) to type ‘std::allocator_arg_t’
In file included from main.cpp:1:0:
/usr/include/c++/4.7/tuple:424:2: note: template<class _Alloc, class ... _UElements, class> std::tuple::tuple(std::allocator_arg_t, const _Alloc&, _UElements&& ...)
/usr/include/c++/4.7/tuple:424:2: note:   template argument deduction/substitution failed:
main.cpp:11:22: note:   cannot convert ‘t1’ (type ‘std::tuple<X>’) to type ‘std::allocator_arg_t’
In file included from main.cpp:1:0:
/usr/include/c++/4.7/tuple:417:2: note: template<class _Alloc> std::tuple::tuple(std::allocator_arg_t, const _Alloc&, const _Elements& ...)
/usr/include/c++/4.7/tuple:417:2: note:   template argument deduction/substitution failed:
main.cpp:11:22: note:   cannot convert ‘t1’ (type ‘std::tuple<X>’) to type ‘std::allocator_arg_t’
In file included from main.cpp:1:0:
/usr/include/c++/4.7/tuple:413:2: note: template<class _Alloc> std::tuple::tuple(std::allocator_arg_t, const _Alloc&)
/usr/include/c++/4.7/tuple:413:2: note:   template argument deduction/substitution failed:
main.cpp:11:22: note:   cannot convert ‘t1’ (type ‘std::tuple<X>’) to type ‘std::allocator_arg_t’
In file included from main.cpp:1:0:
/usr/include/c++/4.7/tuple:407:19: note: template<class ... _UElements, class> constexpr std::tuple::tuple(std::tuple<_Args1 ...>&&)
/usr/include/c++/4.7/tuple:407:19: note:   template argument deduction/substitution failed:
/usr/include/c++/4.7/tuple:404:40: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
/usr/include/c++/4.7/tuple:400:19: note: template<class ... _UElements, class> constexpr std::tuple::tuple(const std::tuple<_Args1 ...>&)
/usr/include/c++/4.7/tuple:400:19: note:   template argument deduction/substitution failed:
/usr/include/c++/4.7/tuple:397:40: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
/usr/include/c++/4.7/tuple:395:17: note: constexpr std::tuple< <template-parameter-1-1> >::tuple(std::tuple< <template-parameter-1-1> >&&) [with _Elements = {Y}; std::tuple< <template-parameter-1-1> > = std::tuple<Y>]
/usr/include/c++/4.7/tuple:395:17: note:   no known conversion for argument 1 from ‘std::tuple<X>’ to ‘std::tuple<Y>&&’
/usr/include/c++/4.7/tuple:393:17: note: constexpr std::tuple< <template-parameter-1-1> >::tuple(const std::tuple< <template-parameter-1-1> >&) [with _Elements = {Y}; std::tuple< <template-parameter-1-1> > = std::tuple<Y>]
/usr/include/c++/4.7/tuple:393:17: note:   no known conversion for argument 1 from ‘std::tuple<X>’ to ‘const std::tuple<Y>&’
/usr/include/c++/4.7/tuple:390:19: note: template<class ... _UElements, class> constexpr std::tuple::tuple(_UElements&& ...)
/usr/include/c++/4.7/tuple:390:19: note:   template argument deduction/substitution failed:
/usr/include/c++/4.7/tuple:386:40: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
/usr/include/c++/4.7/tuple:383:17: note: constexpr std::tuple< <template-parameter-1-1> >::tuple(const _Elements& ...) [with _Elements = {Y}]
/usr/include/c++/4.7/tuple:383:17: note:   no known conversion for argument 1 from ‘std::tuple<X>’ to ‘const Y&’
/usr/include/c++/4.7/tuple:379:17: note: constexpr std::tuple< <template-parameter-1-1> >::tuple() [with _Elements = {Y}]
/usr/include/c++/4.7/tuple:379:17: note:   candidate expects 0 arguments, 1 provided
