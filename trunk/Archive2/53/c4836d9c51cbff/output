main.cpp:3:22: error: no matching function for call to 'func(int)'
 decltype(func (int {}));
                      ^
main.cpp:3:22: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:6: note: 'template<class T> decltype (func(T{})) func(T)' declared here, later in the translation unit
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:37: error: no matching function for call to 'func(int)'
 auto func (T) -> decltype(func (T {}));
                                     ^
main.cpp:2:37: note: candidate is:
main.cpp:2:6: note: template<class T> decltype (func(T{})) func(T)
 auto func (T) -> decltype(func (T {}));
      ^
main.cpp:2:6: note:   template argument deduction/substitution failed:
main.cpp: In substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]':
main.cpp:2:37:   recursively required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:2:37:   required by substitution of 'template<class T> decltype (func(T{})) func(T) [with T = int]'
main.cpp:3:22:   required from here
main.cpp:2:37: error: 'func' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
 auto func (T) -> decltype(func (T {}));
               