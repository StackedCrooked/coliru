main.cpp:2:43: error: use of undeclared identifier 'std'
template<class T, class Enable = typename std::enable_if<std::numeric_limits<T>::is_integer,
                                          ^
main.cpp:2:48: error: expected a qualified name after 'typename'
template<class T, class Enable = typename std::enable_if<std::numeric_limits<T>::is_integer,
                                               ^
main.cpp:2:48: error: type-id cannot have a name
template<class T, class Enable = typename std::enable_if<std::numeric_limits<T>::is_integer,
                                               ^~~~~~~~~
main.cpp:2:57: error: expected ',' or '>' in template-parameter-list
template<class T, class Enable = typename std::enable_if<std::numeric_limits<T>::is_integer,
                                                        ^
main.cpp:2:82: warning: extra qualification on member 'is_integer' [-Wextra-qualification]
template<class T, class Enable = typename std::enable_if<std::numeric_limits<T>::is_integer,
                                                                                 ^
main.cpp:2:82: error: C++ requires a type specifier for all declarations
template<class T, class Enable = typename std::enable_if<std::numeric_limits<T>::is_integer,
                                                                               ~~^
main.cpp:2:82: error: no member named 'is_integer' in the global namespace
template<class T, class Enable = typename std::enable_if<std::numeric_limits<T>::is_integer,
                                                                               ~~^
main.cpp:2:92: error: a template declaration can only declare a single entity
template<class T, class Enable = typename std::enable_if<std::numeric_limits<T>::is_integer,
                                                                                           ^
1 warning and 7 errors generated.
