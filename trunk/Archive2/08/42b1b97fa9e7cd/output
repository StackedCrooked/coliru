main.cpp:4:16: fatal error: recursive template instantiation exceeded maximum depth of 256
  enum { val = A<I+1>::val };
               ^
main.cpp:4:16: note: in instantiation of template class 'A<257>' requested here
  enum { val = A<I+1>::val };
               ^
main.cpp:4:16: note: in instantiation of template class 'A<256>' requested here
  enum { val = A<I+1>::val };
               ^
main.cpp:4:16: note: in instantiation of template class 'A<255>' requested here
  enum { val = A<I+1>::val };
               ^
main.cpp:4:16: note: in instantiation of template class 'A<254>' requested here
  enum { val = A<I+1>::val };
               ^
main.cpp:4:16: note: in instantiation of template class 'A<253>' requested here
  enum { val = A<I+1>::val };
               ^
main.cpp:4:16: note: (skipping 247 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)
main.cpp:4:16: note: in instantiation of template class 'A<5>' requested here
  enum { val = A<I+1>::val };
               ^
main.cpp:4:16: note: in instantiation of template class 'A<4>' requested here
  enum { val = A<I+1>::val };
               ^
main.cpp:4:16: note: in instantiation of template class 'A<3>' requested here
  enum { val = A<I+1>::val };
               ^
main.cpp:4:16: note: in instantiation of template class 'A<2>' requested here
  enum { val = A<I+1>::val };
               ^
main.cpp:7:9: note: in instantiation of template class 'A<1>' requested here
int i = A<1>::val;
        ^
main.cpp:4:16: note: use -ftemplate-depth=N to increase recursive template instantiation depth
  enum { val = A<I+1>::val };
               ^
1 error generated.
