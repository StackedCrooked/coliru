main.cpp:4:36: error: 'F0' has not been declared
             MethodMapItem( C name, F0 func, PyCFunction handler, C doc ) : PyMethodDef{ name, handler, METH_NOARGS               , doc }, f0{func} { };
                                    ^
main.cpp:4:45: error: 'PyCFunction' has not been declared
             MethodMapItem( C name, F0 func, PyCFunction handler, C doc ) : PyMethodDef{ name, handler, METH_NOARGS               , doc }, f0{func} { };
                                             ^
main.cpp:4:72: error: ISO C++ forbids declaration of 'MethodMapItem' with no type [-fpermissive]
             MethodMapItem( C name, F0 func, PyCFunction handler, C doc ) : PyMethodDef{ name, handler, METH_NOARGS               , doc }, f0{func} { };
                                                                        ^
main.cpp: In function 'int MethodMapItem(C, int, int, C)':
main.cpp:4:76: error: only constructors take member initializers
             MethodMapItem( C name, F0 func, PyCFunction handler, C doc ) : PyMethodDef{ name, handler, METH_NOARGS               , doc }, f0{func} { };
                                                                            ^
main.cpp:4:104: error: 'METH_NOARGS' was not declared in this scope
             MethodMapItem( C name, F0 func, PyCFunction handler, C doc ) : PyMethodDef{ name, handler, METH_NOARGS               , doc }, f0{func} { };
                                                                                                        ^
main.cpp:4:150: warning: no return statement in function returning non-void [-Wreturn-type]
             MethodMapItem( C name, F0 func, PyCFunction handler, C doc ) : PyMethodDef{ name, handler, METH_NOARGS               , doc }, f0{func} { };
                                                                                                                                                      ^
main.cpp: At global scope:
main.cpp:4:151: warning: extra ';' [-Wpedantic]
             MethodMapItem( C name, F0 func, PyCFunction handler, C doc ) : PyMethodDef{ name, handler, METH_NOARGS               , doc }, f0{func} { };
                                                                                                                                                       ^
main.cpp:5:36: error: 'F1' has not been declared
             MethodMapItem( C name, F1 func, PyCFunction handler, C doc ) : PyMethodDef{ name, handler, METH_VARARGS              , doc }, f1{func} { };
                                    ^
main.cpp:5:45: error: 'PyCFunction' has not been declared
             MethodMapItem( C name, F1 func, PyCFunction handler, C doc ) : PyMethodDef{ name, handler, METH_VARARGS              , doc }, f1{func} { };
                                             ^
main.cpp:5:72: error: ISO C++ forbids declaration of 'MethodMapItem' with no type [-fpermissive]
             MethodMapItem( C name, F1 func, PyCFunction handler, C doc ) : PyMethodDef{ name, handler, METH_VARARGS              , doc }, f1{func} { };
                                                                        ^
main.cpp: In function 'int MethodMapItem(C, int, int, C)':
main.cpp:5:13: error: redefinition of 'int MethodMapItem(C, int, int, C)'
             MethodMapItem( C name, F1 func, PyCFunction handler, C doc ) : PyMethodDef{ name, handler, METH_VARARGS              , doc }, f1{func} { };
             ^
main.cpp:4:13: note: 'int MethodMapItem(C, int, int, C)' previously defined here
             MethodMapItem( C name, F0 func, PyCFunction handler, C doc ) : PyMethodDef{ name, handler, METH_NOARGS               , doc }, f0{func} { };
             ^
main.cpp:5:76: error: only constructors take member initializers
             MethodMapItem( C name, F1 func, PyCFunction handler, C doc ) : PyMethodDef{ name, handler, METH_VARARGS              , doc }, f1{func} { };
                                                                            ^
main.cpp:5:104: error: 'METH_VARARGS' was not declared in this scope
             MethodMapItem( C name, F1 func, PyCFunction handler, C doc ) : PyMethodDef{ name, handler, METH_VARARGS              , doc }, f1{func} { };
                                                                                                        ^
main.cpp:5:150: warning: no return statement in function returning non-void [-Wreturn-type]
             MethodMapItem( C name, F1 func, PyCFunction handler, C doc ) : PyMethodDef{ name, handler, METH_VARARGS              , doc }, f1{func} { };
                                                                                                                                                      ^
main.cpp: At global scope:
main.cpp:5:151: warning: extra ';' [-Wpedantic]
             MethodMapItem( C name, F1 func, PyCFunction handler, C doc ) : PyMethodDef{ name, handler, METH_VARARGS              , doc }, f1{func} { };
                                                                                                                                                       ^
main.cpp:6:36: error: 'F2' has not been declared
             MethodMapItem( C name, F2 func, PyCFunction handler, C doc ) : PyMethodDef{ name, handler, METH_VARARGS|METH_KEYWORDS, doc }, f2{func} { };
                                    ^
main.cpp:6:45: error: 'PyCFunction' has not been declared
             MethodMapItem( C name, F2 func, PyCFunction handler, C doc ) : PyMethodDef{ name, handler, METH_VARARGS|METH_KEYWORDS, doc }, f2{func} { };
                                             ^
main.cpp:6:72: error: ISO C++ forbids declaration of 'MethodMapItem' with no type [-fpermissive]
             MethodMapItem( C name, F2 func, PyCFunction handler, C doc ) : PyMethodDef{ name, handler, METH_VARARGS|METH_KEYWORDS, doc }, f2{func} { };
                                                                        ^
main.cpp: In function 'int MethodMapItem(C, int, int, C)':
main.cpp:6:13: error: redefinition of 'int MethodMapItem(C, int, int, C)'
             MethodMapItem( C name, F2 func, PyCFunction handler, C doc ) : PyMethodDef{ name, handler, METH_VARARGS|METH_KEYWORDS, doc }, f2{func} { };
             ^
main.cpp:4:13: note: 'int MethodMapItem(C, int, int, C)' previously defined here
             MethodMapItem( C name, F0 func, PyCFunction handler, C doc ) : PyMethodDef{ name, handler, METH_NOARGS               , doc }, f0{func} { };
             ^
main.cpp:6:76: error: only constructors take member initializers
             MethodMapItem( C name, F2 func, PyCFunction handler, C doc ) : PyMethodDef{ name, handler, METH_VARARGS|METH_KEYWORDS, doc }, f2{func} { };
                                                                            ^
main.cpp:6:104: error: 'METH_VARARGS' was not declared in this scope
             MethodMapItem( C name, F2 func, PyCFunction handler, C doc ) : PyMethodDef{ name, handler, METH_VARARGS|METH_KEYWORDS, doc }, f2{func} { };
                                                                                                        ^
main.cpp:6:117: error: 'METH_KEYWORDS' was not declared in this scope
             MethodMapItem( C name, F2 func, PyCFunction handler, C doc ) : PyMethodDef{ name, handler, METH_VARARGS|METH_KEYWORDS, doc }, f2{func} { };
                                                                                                                     ^
main.cpp:6:150: warning: no return statement in function returning non-void [-Wreturn-type]
             MethodMapItem( C name, F2 func, PyCFunction handler, C doc ) : PyMethodDef{ name, handler, METH_VARARGS|METH_KEYWORDS, doc }, f2{func} { };
                                                                                                                                                      ^
main.cpp: At global scope:
main.cpp:6:151: warning: extra ';' [-Wpedantic]
             MethodMapItem( C name, F2 func, PyCFunction handler, C doc ) : PyMethodDef{ name, handler, METH_VARARGS|METH_KEYWORDS, doc }, f2{func} { };
                                                                                                                                                       ^
