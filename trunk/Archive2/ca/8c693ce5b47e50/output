main.cpp:40:73: error: cannot convert 'typename enable_if_c<number_category<detail::expression<add_immediates, number<cpp_dec_float<100, int, void>, 1>, int, void, void> >::value == number_kind_floating_point, detail::expression<detail::function, detail::floor_funct<typename detail::backend_type<detail::expression<add_immediates, number<cpp_dec_float<100, int, void>, 1>, int, void, void> >::type>, detail::expression<add_immediates, number<cpp_dec_float<100, int, void>, 1>, int, void, void> > >::type' (aka 'boost::multiprecision::detail::expression<boost::multiprecision::detail::function, boost::multiprecision::detail::floor_funct<boost::multiprecision::backends::cpp_dec_float<100, int, void> >, boost::multiprecision::detail::expression<boost::multiprecision::detail::add_immediates, boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<100, int, void>, 1>, int, void, void>, void, void>') to 'long' without a conversion operator
        std::cout << "Case #: " << case_number << ": " << std::fixed << long(floor(n+1)) << "\n";
                                                                        ^~~~~~~~~~~~~~~
1 error generated.
