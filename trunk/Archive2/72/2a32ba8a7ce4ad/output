In file included from /usr/local/include/boost/interprocess/detail/utilities.hpp:30:0,
                 from /usr/local/include/boost/interprocess/detail/managed_memory_impl.hpp:22,
                 from /usr/local/include/boost/interprocess/managed_shared_memory.hpp:21,
                 from main.cpp:7:
/usr/local/include/boost/interprocess/detail/mpl.hpp: In instantiation of 'const bool boost::interprocess::ipcdetail::is_convertible<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > > >*, boost::multi_index::detail::hashed_index_node_impl<boost::interprocess::allocator<char, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >*>::value':
/usr/local/include/boost/interprocess/detail/mpl.hpp:60:8:   required from 'struct boost::interprocess::ipcdetail::enable_if<boost::interprocess::ipcdetail::is_convertible<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > > >*, boost::multi_index::detail::hashed_index_node_impl<boost::interprocess::allocator<char, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >*>, void>'
/usr/local/include/boost/interprocess/offset_ptr.hpp:262:4:   required by substitution of 'template<class T> boost::interprocess::offset_ptr<T, DifferenceType, OffsetType, Alignment>::offset_ptr(T*, typename boost::interprocess::ipcdetail::enable_if<boost::interprocess::ipcdetail::is_convertible<T*, PointedType*> >::type*) [with T = boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > > >]'
/usr/local/include/boost/multi_index/hashed_index.hpp:788:17:   required from 'boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::node_type* boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::insert_(boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::value_param_type, boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::node_type*, Variant) [with Variant = boost::multi_index::detail::lvalue_tag; KeyFromValue = boost::multi_index::member<UsersKey, CrUniqueKey<long unsigned int>, &UsersKey::IMSI>; Hash = boost::hash<CrUniqueKey<long unsigned int> >; Pred = std::equal_to<CrUniqueKey<long unsigned int> >; SuperMeta = boost::multi_index::detail::nth_layer<1, UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; TagList = boost::mpl::v_item<IMSI_tag, boost::mpl::vector0<mpl_::na>, 0>; Category = boost::multi_index::detail::hashed_unique_tag; boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::node_type = boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > > >; typename SuperMeta::type::node_type = boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >; boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::value_param_type = const UsersKey&]'
/usr/local/include/boost/multi_index_container.hpp:600:48:   required from 'std::pair<typename boost::multi_index::detail::multi_index_base_type<Value, IndexSpecifierList, Allocator>::type::node_type*, bool> boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>::insert_(const Value&, Variant) [with Variant = boost::multi_index::detail::lvalue_tag; Value = UsersKey; IndexSpecifierList = UsersKey_hash_indices; Allocator = boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >; typename boost::multi_index::detail::multi_index_base_type<Value, IndexSpecifierList, Allocator>::type::node_type = boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > > >]'
/usr/local/include/boost/multi_index_container.hpp:619:42:   required from 'std::pair<typename boost::multi_index::detail::multi_index_base_type<Value, IndexSpecifierList, Allocator>::type::node_type*, bool> boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>::insert_(const Value&) [with Value = UsersKey; IndexSpecifierList = UsersKey_hash_indices; Allocator = boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >; typename boost::multi_index::detail::multi_index_base_type<Value, IndexSpecifierList, Allocator>::type::node_type = boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > > >]'
/usr/local/include/boost/multi_index/detail/index_base.hpp:200:30:   required from 'std::pair<typename boost::multi_index::detail::multi_index_node_type<Value, IndexSpecifierList, Allocator>::type*, bool> boost::multi_index::detail::index_base<Value, IndexSpecifierList, Allocator>::final_insert_(const value_type&) [with Value = UsersKey; IndexSpecifierList = UsersKey_hash_indices; Allocator = boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >; typename boost::multi_index::detail::multi_index_node_type<Value, IndexSpecifierList, Allocator>::type = boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > > >; boost::multi_index::detail::index_base<Value, IndexSpecifierList, Allocator>::value_type = UsersKey]'
/usr/local/include/boost/multi_index/hashed_index.hpp:285:61:   required from 'std::pair<boost::multi_index::detail::hashed_index_iterator<boost::multi_index::detail::hashed_index_node<typename SuperMeta::type::node_type>, boost::multi_index::detail::bucket_array<typename SuperMeta::type::final_allocator_type> >, bool> boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::insert(const value_type&) [with KeyFromValue = boost::multi_index::member<UsersKey, CrUniqueKey<long unsigned int>, &UsersKey::IMSI>; Hash = boost::hash<CrUniqueKey<long unsigned int> >; Pred = std::equal_to<CrUniqueKey<long unsigned int> >; SuperMeta = boost::multi_index::detail::nth_layer<1, UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; TagList = boost::mpl::v_item<IMSI_tag, boost::mpl::vector0<mpl_::na>, 0>; Category = boost::multi_index::detail::hashed_unique_tag; typename SuperMeta::type::final_allocator_type = boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >; typename SuperMeta::type::node_type = boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >; boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::value_type = UsersKey]'
main.cpp:284:44:   required from here
/usr/local/include/boost/interprocess/detail/mpl.hpp:74:55: error: 'boost::multi_index::detail::hashed_index_node_impl<boost::interprocess::allocator<char, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >' is an ambiguous base of 'boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > > >'
    static const bool value = sizeof(dispatch(trigger())) == sizeof(true_t);
                                                       ^
In file included from /usr/local/include/boost/functional/hash/hash.hpp:540:0,
                 from /usr/local/include/boost/functional/hash.hpp:6,
                 from /usr/local/include/boost/intrusive/detail/utilities.hpp:33,
                 from /usr/local/include/boost/intrusive/set_hook.hpp:19,
                 from /usr/local/include/boost/intrusive/rbtree.hpp:23,
                 from /usr/local/include/boost/intrusive/set.hpp:19,
                 from /usr/local/include/boost/interprocess/indexes/iset_index.hpp:21,
                 from /usr/local/include/boost/interprocess/segment_manager.hpp:31,
                 from /usr/local/include/boost/interprocess/detail/managed_memory_impl.hpp:26,
                 from /usr/local/include/boost/interprocess/managed_shared_memory.hpp:21,
                 from main.cpp:7:
/usr/local/include/boost/functional/hash/extensions.hpp: In instantiation of 'std::size_t boost::hash<T>::operator()(const T&) const [with T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; std::size_t = long unsigned int]':
/usr/local/include/boost/variant/detail/hash_variant.hpp:33:34:   required from 'std::size_t boost::detail::variant::variant_hasher::operator()(const T&) const [with T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; std::size_t = long unsigned int]'
/usr/local/include/boost/variant/variant.hpp:1048:32:   required from 'boost::detail::variant::invoke_visitor<Visitor>::result_type boost::detail::variant::invoke_visitor<Visitor>::internal_visit(T&, int) [with T = const boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; Visitor = const boost::detail::variant::variant_hasher; boost::detail::variant::invoke_visitor<Visitor>::result_type = long unsigned int]'
/usr/local/include/boost/variant/detail/visitation_impl.hpp:130:9:   required from 'typename Visitor::result_type boost::detail::variant::visitation_impl_invoke_impl(int, Visitor&, VoidPtrCV, T*, mpl_::true_) [with Visitor = boost::detail::variant::invoke_visitor<const boost::detail::variant::variant_hasher>; VoidPtrCV = const void*; T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; typename Visitor::result_type = long unsigned int; mpl_::true_ = mpl_::bool_<true>]'
/usr/local/include/boost/variant/detail/visitation_impl.hpp:173:9:   required from 'typename Visitor::result_type boost::detail::variant::visitation_impl_invoke(int, Visitor&, VoidPtrCV, T*, NoBackupFlag, int) [with Visitor = boost::detail::variant::invoke_visitor<const boost::detail::variant::variant_hasher>; VoidPtrCV = const void*; T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; NoBackupFlag = boost::variant<boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >, long unsigned int, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>::has_fallback_type_; typename Visitor::result_type = long unsigned int]'
/usr/local/include/boost/variant/detail/visitation_impl.hpp:256:5:   required from 'typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VoidPtrCV, mpl_::false_, NoBackupFlag, Which*, step0*) [with Which = mpl_::int_<0>; step0 = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_item<mpl_::long_<2l>, boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >, boost::mpl::l_item<mpl_::long_<1l>, long unsigned int, boost::mpl::l_end> > >, boost::mpl::l_iter<boost::mpl::l_end> >; Visitor = boost::detail::variant::invoke_visitor<const boost::detail::variant::variant_hasher>; VoidPtrCV = const void*; NoBackupFlag = boost::variant<boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >, long unsigned int, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>::has_fallback_type_; typename Visitor::result_type = long unsigned int; mpl_::false_ = mpl_::bool_<false>]'
/usr/local/include/boost/variant/variant.hpp:2367:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/boost/functional/hash/extensions.hpp:269:34:   required from 'std::size_t boost::hash<T>::operator()(const T&) const [with T = CrUniqueKey<long unsigned int>; std::size_t = long unsigned int]'
/usr/local/include/boost/multi_index/hashed_index.hpp:506:50:   required from 'boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::find(const CompatibleKey&, const CompatibleHash&, const CompatiblePred&) const [with CompatibleKey = long unsigned int; CompatibleHash = boost::hash<CrUniqueKey<long unsigned int> >; CompatiblePred = std::equal_to<CrUniqueKey<long unsigned int> >; KeyFromValue = boost::multi_index::member<UsersKey, CrUniqueKey<long unsigned int>, &UsersKey::IMSI>; Hash = boost::hash<CrUniqueKey<long unsigned int> >; Pred = std::equal_to<CrUniqueKey<long unsigned int> >; SuperMeta = boost::multi_index::detail::nth_layer<1, UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; TagList = boost::mpl::v_item<IMSI_tag, boost::mpl::vector0<mpl_::na>, 0>; Category = boost::multi_index::detail::hashed_unique_tag; boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator = boost::multi_index::detail::hashed_index_iterator<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > > >, boost::multi_index::detail::bucket_array<boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >; typename SuperMeta::type::final_allocator_type = boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >; typename SuperMeta::type::node_type = boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >]'
/usr/local/include/boost/multi_index/hashed_index.hpp:496:28:   required from 'boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::find(const CompatibleKey&) const [with CompatibleKey = long unsigned int; KeyFromValue = boost::multi_index::member<UsersKey, CrUniqueKey<long unsigned int>, &UsersKey::IMSI>; Hash = boost::hash<CrUniqueKey<long unsigned int> >; Pred = std::equal_to<CrUniqueKey<long unsigned int> >; SuperMeta = boost::multi_index::detail::nth_layer<1, UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; TagList = boost::mpl::v_item<IMSI_tag, boost::mpl::vector0<mpl_::na>, 0>; Category = boost::multi_index::detail::hashed_unique_tag; boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator = boost::multi_index::detail::hashed_index_iterator<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > > >, boost::multi_index::detail::bucket_array<boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >; typename SuperMeta::type::final_allocator_type = boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >; typename SuperMeta::type::node_type = boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >]'
main.cpp:292:49:   required from 'typename boost::multi_index::multi_index_container<UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >::index<Tag>::type::iterator CrMultiParameterMultiIndex::GetIteratorBy(SearchingKey&) [with TagType = IMSI_tag; SearchingKey = long unsigned int; typename boost::multi_index::multi_index_container<UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >::index<Tag>::type::iterator = boost::multi_index::detail::hashed_index_iterator<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > > >, boost::multi_index::detail::bucket_array<boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >]'
main.cpp:334:64:   required from 'uint32_t CrMultiParameterMultiIndex::RemoveBy(SearchingKey&) [with TagType = IMSI_tag; SearchingKey = long unsigned int; uint32_t = unsigned int]'
main.cpp:457:44:   required from here
/usr/local/include/boost/functional/hash/extensions.hpp:269:34: error: no matching function for call to 'hash_value(const boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >&)'
             return hash_value(val);
                                  ^
/usr/local/include/boost/functional/hash/extensions.hpp:269:34: note: candidates are:
In file included from /usr/local/include/boost/functional/hash.hpp:6:0,
                 from /usr/local/include/boost/intrusive/detail/utilities.hpp:33,
                 from /usr/local/include/boost/intrusive/set_hook.hpp:19,
                 from /usr/local/include/boost/intrusive/rbtree.hpp:23,
                 from /usr/local/include/boost/intrusive/set.hpp:19,
                 from /usr/local/include/boost/interprocess/indexes/iset_index.hpp:21,
                 from /usr/local/include/boost/interprocess/segment_manager.hpp:31,
                 from /usr/local/include/boost/interprocess/detail/managed_memory_impl.hpp:26,
                 from /usr/local/include/boost/interprocess/managed_shared_memory.hpp:21,
                 from main.cpp:7:
/usr/local/include/boost/functional/hash/hash.hpp:194:57: note: template<class T> typename boost::hash_detail::basic_numbers<T>::type boost::hash_value(T)
     typename boost::hash_detail::basic_numbers<T>::type hash_value(T v)
                                                         ^
/usr/local/include/boost/functional/hash/hash.hpp:194:57: note:   template argument deduction/substitution failed:
/usr/local/include/boost/functional/hash/hash.hpp: In substitution of 'template<class T> typename boost::hash_detail::basic_numbers<T>::type boost::hash_value(T) [with T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >]':
/usr/local/include/boost/functional/hash/extensions.hpp:269:34:   required from 'std::size_t boost::hash<T>::operator()(const T&) const [with T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; std::size_t = long unsigned int]'
/usr/local/include/boost/variant/detail/hash_variant.hpp:33:34:   required from 'std::size_t boost::detail::variant::variant_hasher::operator()(const T&) const [with T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; std::size_t = long unsigned int]'
/usr/local/include/boost/variant/variant.hpp:1048:32:   required from 'boost::detail::variant::invoke_visitor<Visitor>::result_type boost::detail::variant::invoke_visitor<Visitor>::internal_visit(T&, int) [with T = const boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; Visitor = const boost::detail::variant::variant_hasher; boost::detail::variant::invoke_visitor<Visitor>::result_type = long unsigned int]'
/usr/local/include/boost/variant/detail/visitation_impl.hpp:130:9:   required from 'typename Visitor::result_type boost::detail::variant::visitation_impl_invoke_impl(int, Visitor&, VoidPtrCV, T*, mpl_::true_) [with Visitor = boost::detail::variant::invoke_visitor<const boost::detail::variant::variant_hasher>; VoidPtrCV = const void*; T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; typename Visitor::result_type = long unsigned int; mpl_::true_ = mpl_::bool_<true>]'
/usr/local/include/boost/variant/detail/visitation_impl.hpp:173:9:   required from 'typename Visitor::result_type boost::detail::variant::visitation_impl_invoke(int, Visitor&, VoidPtrCV, T*, NoBackupFlag, int) [with Visitor = boost::detail::variant::invoke_visitor<const boost::detail::variant::variant_hasher>; VoidPtrCV = const void*; T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; NoBackupFlag = boost::variant<boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >, long unsigned int, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>::has_fallback_type_; typename Visitor::result_type = long unsigned int]'
/usr/local/include/boost/variant/detail/visitation_impl.hpp:256:5:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/boost/functional/hash/extensions.hpp:269:34:   required from 'std::size_t boost::hash<T>::operator()(const T&) const [with T = CrUniqueKey<long unsigned int>; std::size_t = long unsigned int]'
/usr/local/include/boost/multi_index/hashed_index.hpp:506:50:   required from 'boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::find(const CompatibleKey&, const CompatibleHash&, const CompatiblePred&) const [with CompatibleKey = long unsigned int; CompatibleHash = boost::hash<CrUniqueKey<long unsigned int> >; CompatiblePred = std::equal_to<CrUniqueKey<long unsigned int> >; KeyFromValue = boost::multi_index::member<UsersKey, CrUniqueKey<long unsigned int>, &UsersKey::IMSI>; Hash = boost::hash<CrUniqueKey<long unsigned int> >; Pred = std::equal_to<CrUniqueKey<long unsigned int> >; SuperMeta = boost::multi_index::detail::nth_layer<1, UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; TagList = boost::mpl::v_item<IMSI_tag, boost::mpl::vector0<mpl_::na>, 0>; Category = boost::multi_index::detail::hashed_unique_tag; boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator = boost::multi_index::detail::hashed_index_iterator<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > > >, boost::multi_index::detail::bucket_array<boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >; typename SuperMeta::type::final_allocator_type = boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >; typename SuperMeta::type::node_type = boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >]'
/usr/local/include/boost/multi_index/hashed_index.hpp:496:28:   required from 'boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::find(const CompatibleKey&) const [with CompatibleKey = long unsigned int; KeyFromValue = boost::multi_index::member<UsersKey, CrUniqueKey<long unsigned int>, &UsersKey::IMSI>; Hash = boost::hash<CrUniqueKey<long unsigned int> >; Pred = std::equal_to<CrUniqueKey<long unsigned int> >; SuperMeta = boost::multi_index::detail::nth_layer<1, UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; TagList = boost::mpl::v_item<IMSI_tag, boost::mpl::vector0<mpl_::na>, 0>; Category = boost::multi_index::detail::hashed_unique_tag; boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator = boost::multi_index::detail::hashed_index_iterator<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > > >, boost::multi_index::detail::bucket_array<boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >; typename SuperMeta::type::final_allocator_type = boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >; typename SuperMeta::type::node_type = boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >]'
main.cpp:292:49:   required from 'typename boost::multi_index::multi_index_container<UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >::index<Tag>::type::iterator CrMultiParameterMultiIndex::GetIteratorBy(SearchingKey&) [with TagType = IMSI_tag; SearchingKey = long unsigned int; typename boost::multi_index::multi_index_container<UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >::index<Tag>::type::iterator = boost::multi_index::detail::hashed_index_iterator<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > > >, boost::multi_index::detail::bucket_array<boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >]'
main.cpp:334:64:   required from 'uint32_t CrMultiParameterMultiIndex::RemoveBy(SearchingKey&) [with TagType = IMSI_tag; SearchingKey = long unsigned int; uint32_t = unsigned int]'
main.cpp:457:44:   required from here
/usr/local/include/boost/functional/hash/hash.hpp:194:57: error: no type named 'type' in 'struct boost::hash_detail::basic_numbers<boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >'
/usr/local/include/boost/functional/hash/extensions.hpp: In instantiation of 'std::size_t boost::hash<T>::operator()(const T&) const [with T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; std::size_t = long unsigned int]':
/usr/local/include/boost/variant/detail/hash_variant.hpp:33:34:   required from 'std::size_t boost::detail::variant::variant_hasher::operator()(const T&) const [with T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; std::size_t = long unsigned int]'
/usr/local/include/boost/variant/variant.hpp:1048:32:   required from 'boost::detail::variant::invoke_visitor<Visitor>::result_type boost::detail::variant::invoke_visitor<Visitor>::internal_visit(T&, int) [with T = const boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; Visitor = const boost::detail::variant::variant_hasher; boost::detail::variant::invoke_visitor<Visitor>::result_type = long unsigned int]'
/usr/local/include/boost/variant/detail/visitation_impl.hpp:130:9:   required from 'typename Visitor::result_type boost::detail::variant::visitation_impl_invoke_impl(int, Visitor&, VoidPtrCV, T*, mpl_::true_) [with Visitor = boost::detail::variant::invoke_visitor<const boost::detail::variant::variant_hasher>; VoidPtrCV = const void*; T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; typename Visitor::result_type = long unsigned int; mpl_::true_ = mpl_::bool_<true>]'
/usr/local/include/boost/variant/detail/visitation_impl.hpp:173:9:   required from 'typename Visitor::result_type boost::detail::variant::visitation_impl_invoke(int, Visitor&, VoidPtrCV, T*, NoBackupFlag, int) [with Visitor = boost::detail::variant::invoke_visitor<const boost::detail::variant::variant_hasher>; VoidPtrCV = const void*; T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; NoBackupFlag = boost::variant<boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >, long unsigned int, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>::has_fallback_type_; typename Visitor::result_type = long unsigned int]'
/usr/local/include/boost/variant/detail/visitation_impl.hpp:256:5:   required from 'typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VoidPtrCV, mpl_::false_, NoBackupFlag, Which*, step0*) [with Which = mpl_::int_<0>; step0 = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_item<mpl_::long_<2l>, boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >, boost::mpl::l_item<mpl_::long_<1l>, long unsigned int, boost::mpl::l_end> > >, boost::mpl::l_iter<boost::mpl::l_end> >; Visitor = boost::detail::variant::invoke_visitor<const boost::detail::variant::variant_hasher>; VoidPtrCV = const void*; NoBackupFlag = boost::variant<boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >, long unsigned int, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>::has_fallback_type_; typename Visitor::result_type = long unsigned int; mpl_::false_ = mpl_::bool_<false>]'
/usr/local/include/boost/variant/variant.hpp:2367:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/boost/functional/hash/extensions.hpp:269:34:   required from 'std::size_t boost::hash<T>::operator()(const T&) const [with T = CrUniqueKey<long unsigned int>; std::size_t = long unsigned int]'
/usr/local/include/boost/multi_index/hashed_index.hpp:506:50:   required from 'boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::find(const CompatibleKey&, const CompatibleHash&, const CompatiblePred&) const [with CompatibleKey = long unsigned int; CompatibleHash = boost::hash<CrUniqueKey<long unsigned int> >; CompatiblePred = std::equal_to<CrUniqueKey<long unsigned int> >; KeyFromValue = boost::multi_index::member<UsersKey, CrUniqueKey<long unsigned int>, &UsersKey::IMSI>; Hash = boost::hash<CrUniqueKey<long unsigned int> >; Pred = std::equal_to<CrUniqueKey<long unsigned int> >; SuperMeta = boost::multi_index::detail::nth_layer<1, UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; TagList = boost::mpl::v_item<IMSI_tag, boost::mpl::vector0<mpl_::na>, 0>; Category = boost::multi_index::detail::hashed_unique_tag; boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator = boost::multi_index::detail::hashed_index_iterator<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > > >, boost::multi_index::detail::bucket_array<boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >; typename SuperMeta::type::final_allocator_type = boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >; typename SuperMeta::type::node_type = boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >]'
/usr/local/include/boost/multi_index/hashed_index.hpp:496:28:   required from 'boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::find(const CompatibleKey&) const [with CompatibleKey = long unsigned int; KeyFromValue = boost::multi_index::member<UsersKey, CrUniqueKey<long unsigned int>, &UsersKey::IMSI>; Hash = boost::hash<CrUniqueKey<long unsigned int> >; Pred = std::equal_to<CrUniqueKey<long unsigned int> >; SuperMeta = boost::multi_index::detail::nth_layer<1, UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; TagList = boost::mpl::v_item<IMSI_tag, boost::mpl::vector0<mpl_::na>, 0>; Category = boost::multi_index::detail::hashed_unique_tag; boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator = boost::multi_index::detail::hashed_index_iterator<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > > >, boost::multi_index::detail::bucket_array<boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >; typename SuperMeta::type::final_allocator_type = boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >; typename SuperMeta::type::node_type = boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >]'
main.cpp:292:49:   required from 'typename boost::multi_index::multi_index_container<UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >::index<Tag>::type::iterator CrMultiParameterMultiIndex::GetIteratorBy(SearchingKey&) [with TagType = IMSI_tag; SearchingKey = long unsigned int; typename boost::multi_index::multi_index_container<UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >::index<Tag>::type::iterator = boost::multi_index::detail::hashed_index_iterator<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > > >, boost::multi_index::detail::bucket_array<boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >]'
main.cpp:334:64:   required from 'uint32_t CrMultiParameterMultiIndex::RemoveBy(SearchingKey&) [with TagType = IMSI_tag; SearchingKey = long unsigned int; uint32_t = unsigned int]'
main.cpp:457:44:   required from here
/usr/local/include/boost/functional/hash/hash.hpp:200:56: note: template<class T> typename boost::hash_detail::long_numbers<T>::type boost::hash_value(T)
     typename boost::hash_detail::long_numbers<T>::type hash_value(T v)
                                                        ^
/usr/local/include/boost/functional/hash/hash.hpp:200:56: note:   template argument deduction/substitution failed:
/usr/local/include/boost/functional/hash/hash.hpp: In substitution of 'template<class T> typename boost::hash_detail::long_numbers<T>::type boost::hash_value(T) [with T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >]':
/usr/local/include/boost/functional/hash/extensions.hpp:269:34:   required from 'std::size_t boost::hash<T>::operator()(const T&) const [with T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; std::size_t = long unsigned int]'
/usr/local/include/boost/variant/detail/hash_variant.hpp:33:34:   required from 'std::size_t boost::detail::variant::variant_hasher::operator()(const T&) const [with T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; std::size_t = long unsigned int]'
/usr/local/include/boost/variant/variant.hpp:1048:32:   required from 'boost::detail::variant::invoke_visitor<Visitor>::result_type boost::detail::variant::invoke_visitor<Visitor>::internal_visit(T&, int) [with T = const boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; Visitor = const boost::detail::variant::variant_hasher; boost::detail::variant::invoke_visitor<Visitor>::result_type = long unsigned int]'
/usr/local/include/boost/variant/detail/visitation_impl.hpp:130:9:   required from 'typename Visitor::result_type boost::detail::variant::visitation_impl_invoke_impl(int, Visitor&, VoidPtrCV, T*, mpl_::true_) [with Visitor = boost::detail::variant::invoke_visitor<const boost::detail::variant::variant_hasher>; VoidPtrCV = const void*; T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; typename Visitor::result_type = long unsigned int; mpl_::true_ = mpl_::bool_<true>]'
/usr/local/include/boost/variant/detail/visitation_impl.hpp:173:9:   required from 'typename Visitor::result_type boost::detail::variant::visitation_impl_invoke(int, Visitor&, VoidPtrCV, T*, NoBackupFlag, int) [with Visitor = boost::detail::variant::invoke_visitor<const boost::detail::variant::variant_hasher>; VoidPtrCV = const void*; T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; NoBackupFlag = boost::variant<boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >, long unsigned int, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>::has_fallback_type_; typename Visitor::result_type = long unsigned int]'
/usr/local/include/boost/variant/detail/visitation_impl.hpp:256:5:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/boost/functional/hash/extensions.hpp:269:34:   required from 'std::size_t boost::hash<T>::operator()(const T&) const [with T = CrUniqueKey<long unsigned int>; std::size_t = long unsigned int]'
/usr/local/include/boost/multi_index/hashed_index.hpp:506:50:   required from 'boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::find(const CompatibleKey&, const CompatibleHash&, const CompatiblePred&) const [with CompatibleKey = long unsigned int; CompatibleHash = boost::hash<CrUniqueKey<long unsigned int> >; CompatiblePred = std::equal_to<CrUniqueKey<long unsigned int> >; KeyFromValue = boost::multi_index::member<UsersKey, CrUniqueKey<long unsigned int>, &UsersKey::IMSI>; Hash = boost::hash<CrUniqueKey<long unsigned int> >; Pred = std::equal_to<CrUniqueKey<long unsigned int> >; SuperMeta = boost::multi_index::detail::nth_layer<1, UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; TagList = boost::mpl::v_item<IMSI_tag, boost::mpl::vector0<mpl_::na>, 0>; Category = boost::multi_index::detail::hashed_unique_tag; boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator = boost::multi_index::detail::hashed_index_iterator<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > > >, boost::multi_index::detail::bucket_array<boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >; typename SuperMeta::type::final_allocator_type = boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >; typename SuperMeta::type::node_type = boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >]'
/usr/local/include/boost/multi_index/hashed_index.hpp:496:28:   required from 'boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::find(const CompatibleKey&) const [with CompatibleKey = long unsigned int; KeyFromValue = boost::multi_index::member<UsersKey, CrUniqueKey<long unsigned int>, &UsersKey::IMSI>; Hash = boost::hash<CrUniqueKey<long unsigned int> >; Pred = std::equal_to<CrUniqueKey<long unsigned int> >; SuperMeta = boost::multi_index::detail::nth_layer<1, UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; TagList = boost::mpl::v_item<IMSI_tag, boost::mpl::vector0<mpl_::na>, 0>; Category = boost::multi_index::detail::hashed_unique_tag; boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator = boost::multi_index::detail::hashed_index_iterator<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > > >, boost::multi_index::detail::bucket_array<boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >; typename SuperMeta::type::final_allocator_type = boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >; typename SuperMeta::type::node_type = boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >]'
main.cpp:292:49:   required from 'typename boost::multi_index::multi_index_container<UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >::index<Tag>::type::iterator CrMultiParameterMultiIndex::GetIteratorBy(SearchingKey&) [with TagType = IMSI_tag; SearchingKey = long unsigned int; typename boost::multi_index::multi_index_container<UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >::index<Tag>::type::iterator = boost::multi_index::detail::hashed_index_iterator<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > > >, boost::multi_index::detail::bucket_array<boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >]'
main.cpp:334:64:   required from 'uint32_t CrMultiParameterMultiIndex::RemoveBy(SearchingKey&) [with TagType = IMSI_tag; SearchingKey = long unsigned int; uint32_t = unsigned int]'
main.cpp:457:44:   required from here
/usr/local/include/boost/functional/hash/hash.hpp:200:56: error: no type named 'type' in 'struct boost::hash_detail::long_numbers<boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >'
/usr/local/include/boost/functional/hash/extensions.hpp: In instantiation of 'std::size_t boost::hash<T>::operator()(const T&) const [with T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; std::size_t = long unsigned int]':
/usr/local/include/boost/variant/detail/hash_variant.hpp:33:34:   required from 'std::size_t boost::detail::variant::variant_hasher::operator()(const T&) const [with T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; std::size_t = long unsigned int]'
/usr/local/include/boost/variant/variant.hpp:1048:32:   required from 'boost::detail::variant::invoke_visitor<Visitor>::result_type boost::detail::variant::invoke_visitor<Visitor>::internal_visit(T&, int) [with T = const boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; Visitor = const boost::detail::variant::variant_hasher; boost::detail::variant::invoke_visitor<Visitor>::result_type = long unsigned int]'
/usr/local/include/boost/variant/detail/visitation_impl.hpp:130:9:   required from 'typename Visitor::result_type boost::detail::variant::visitation_impl_invoke_impl(int, Visitor&, VoidPtrCV, T*, mpl_::true_) [with Visitor = boost::detail::variant::invoke_visitor<const boost::detail::variant::variant_hasher>; VoidPtrCV = const void*; T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; typename Visitor::result_type = long unsigned int; mpl_::true_ = mpl_::bool_<true>]'
/usr/local/include/boost/variant/detail/visitation_impl.hpp:173:9:   required from 'typename Visitor::result_type boost::detail::variant::visitation_impl_invoke(int, Visitor&, VoidPtrCV, T*, NoBackupFlag, int) [with Visitor = boost::detail::variant::invoke_visitor<const boost::detail::variant::variant_hasher>; VoidPtrCV = const void*; T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; NoBackupFlag = boost::variant<boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >, long unsigned int, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>::has_fallback_type_; typename Visitor::result_type = long unsigned int]'
/usr/local/include/boost/variant/detail/visitation_impl.hpp:256:5:   required from 'typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VoidPtrCV, mpl_::false_, NoBackupFlag, Which*, step0*) [with Which = mpl_::int_<0>; step0 = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_item<mpl_::long_<2l>, boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >, boost::mpl::l_item<mpl_::long_<1l>, long unsigned int, boost::mpl::l_end> > >, boost::mpl::l_iter<boost::mpl::l_end> >; Visitor = boost::detail::variant::invoke_visitor<const boost::detail::variant::variant_hasher>; VoidPtrCV = const void*; NoBackupFlag = boost::variant<boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >, long unsigned int, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>::has_fallback_type_; typename Visitor::result_type = long unsigned int; mpl_::false_ = mpl_::bool_<false>]'
/usr/local/include/boost/variant/variant.hpp:2367:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/boost/functional/hash/extensions.hpp:269:34:   required from 'std::size_t boost::hash<T>::operator()(const T&) const [with T = CrUniqueKey<long unsigned int>; std::size_t = long unsigned int]'
/usr/local/include/boost/multi_index/hashed_index.hpp:506:50:   required from 'boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::find(const CompatibleKey&, const CompatibleHash&, const CompatiblePred&) const [with CompatibleKey = long unsigned int; CompatibleHash = boost::hash<CrUniqueKey<long unsigned int> >; CompatiblePred = std::equal_to<CrUniqueKey<long unsigned int> >; KeyFromValue = boost::multi_index::member<UsersKey, CrUniqueKey<long unsigned int>, &UsersKey::IMSI>; Hash = boost::hash<CrUniqueKey<long unsigned int> >; Pred = std::equal_to<CrUniqueKey<long unsigned int> >; SuperMeta = boost::multi_index::detail::nth_layer<1, UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; TagList = boost::mpl::v_item<IMSI_tag, boost::mpl::vector0<mpl_::na>, 0>; Category = boost::multi_index::detail::hashed_unique_tag; boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator = boost::multi_index::detail::hashed_index_iterator<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > > >, boost::multi_index::detail::bucket_array<boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >; typename SuperMeta::type::final_allocator_type = boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >; typename SuperMeta::type::node_type = boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >]'
/usr/local/include/boost/multi_index/hashed_index.hpp:496:28:   required from 'boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::find(const CompatibleKey&) const [with CompatibleKey = long unsigned int; KeyFromValue = boost::multi_index::member<UsersKey, CrUniqueKey<long unsigned int>, &UsersKey::IMSI>; Hash = boost::hash<CrUniqueKey<long unsigned int> >; Pred = std::equal_to<CrUniqueKey<long unsigned int> >; SuperMeta = boost::multi_index::detail::nth_layer<1, UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; TagList = boost::mpl::v_item<IMSI_tag, boost::mpl::vector0<mpl_::na>, 0>; Category = boost::multi_index::detail::hashed_unique_tag; boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator = boost::multi_index::detail::hashed_index_iterator<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > > >, boost::multi_index::detail::bucket_array<boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >; typename SuperMeta::type::final_allocator_type = boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >; typename SuperMeta::type::node_type = boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >]'
main.cpp:292:49:   required from 'typename boost::multi_index::multi_index_container<UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >::index<Tag>::type::iterator CrMultiParameterMultiIndex::GetIteratorBy(SearchingKey&) [with TagType = IMSI_tag; SearchingKey = long unsigned int; typename boost::multi_index::multi_index_container<UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >::index<Tag>::type::iterator = boost::multi_index::detail::hashed_index_iterator<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > > >, boost::multi_index::detail::bucket_array<boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >]'
main.cpp:334:64:   required from 'uint32_t CrMultiParameterMultiIndex::RemoveBy(SearchingKey&) [with TagType = IMSI_tag; SearchingKey = long unsigned int; uint32_t = unsigned int]'
main.cpp:457:44:   required from here
/usr/local/include/boost/functional/hash/hash.hpp:206:57: note: template<class T> typename boost::hash_detail::ulong_numbers<T>::type boost::hash_value(T)
     typename boost::hash_detail::ulong_numbers<T>::type hash_value(T v)
                                                         ^
/usr/local/include/boost/functional/hash/hash.hpp:206:57: note:   template argument deduction/substitution failed:
/usr/local/include/boost/functional/hash/hash.hpp: In substitution of 'template<class T> typename boost::hash_detail::ulong_numbers<T>::type boost::hash_value(T) [with T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >]':
/usr/local/include/boost/functional/hash/extensions.hpp:269:34:   required from 'std::size_t boost::hash<T>::operator()(const T&) const [with T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; std::size_t = long unsigned int]'
/usr/local/include/boost/variant/detail/hash_variant.hpp:33:34:   required from 'std::size_t boost::detail::variant::variant_hasher::operator()(const T&) const [with T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; std::size_t = long unsigned int]'
/usr/local/include/boost/variant/variant.hpp:1048:32:   required from 'boost::detail::variant::invoke_visitor<Visitor>::result_type boost::detail::variant::invoke_visitor<Visitor>::internal_visit(T&, int) [with T = const boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; Visitor = const boost::detail::variant::variant_hasher; boost::detail::variant::invoke_visitor<Visitor>::result_type = long unsigned int]'
/usr/local/include/boost/variant/detail/visitation_impl.hpp:130:9:   required from 'typename Visitor::result_type boost::detail::variant::visitation_impl_invoke_impl(int, Visitor&, VoidPtrCV, T*, mpl_::true_) [with Visitor = boost::detail::variant::invoke_visitor<const boost::detail::variant::variant_hasher>; VoidPtrCV = const void*; T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; typename Visitor::result_type = long unsigned int; mpl_::true_ = mpl_::bool_<true>]'
/usr/local/include/boost/variant/detail/visitation_impl.hpp:173:9:   required from 'typename Visitor::result_type boost::detail::variant::visitation_impl_invoke(int, Visitor&, VoidPtrCV, T*, NoBackupFlag, int) [with Visitor = boost::detail::variant::invoke_visitor<const boost::detail::variant::variant_hasher>; VoidPtrCV = const void*; T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; NoBackupFlag = boost::variant<boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >, long unsigned int, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>::has_fallback_type_; typename Visitor::result_type = long unsigned int]'
/usr/local/include/boost/variant/detail/visitation_impl.hpp:256:5:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/boost/functional/hash/extensions.hpp:269:34:   required from 'std::size_t boost::hash<T>::operator()(const T&) const [with T = CrUniqueKey<long unsigned int>; std::size_t = long unsigned int]'
/usr/local/include/boost/multi_index/hashed_index.hpp:506:50:   required from 'boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::find(const CompatibleKey&, const CompatibleHash&, const CompatiblePred&) const [with CompatibleKey = long unsigned int; CompatibleHash = boost::hash<CrUniqueKey<long unsigned int> >; CompatiblePred = std::equal_to<CrUniqueKey<long unsigned int> >; KeyFromValue = boost::multi_index::member<UsersKey, CrUniqueKey<long unsigned int>, &UsersKey::IMSI>; Hash = boost::hash<CrUniqueKey<long unsigned int> >; Pred = std::equal_to<CrUniqueKey<long unsigned int> >; SuperMeta = boost::multi_index::detail::nth_layer<1, UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; TagList = boost::mpl::v_item<IMSI_tag, boost::mpl::vector0<mpl_::na>, 0>; Category = boost::multi_index::detail::hashed_unique_tag; boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator = boost::multi_index::detail::hashed_index_iterator<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > > >, boost::multi_index::detail::bucket_array<boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >; typename SuperMeta::type::final_allocator_type = boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >; typename SuperMeta::type::node_type = boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >]'
/usr/local/include/boost/multi_index/hashed_index.hpp:496:28:   required from 'boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::find(const CompatibleKey&) const [with CompatibleKey = long unsigned int; KeyFromValue = boost::multi_index::member<UsersKey, CrUniqueKey<long unsigned int>, &UsersKey::IMSI>; Hash = boost::hash<CrUniqueKey<long unsigned int> >; Pred = std::equal_to<CrUniqueKey<long unsigned int> >; SuperMeta = boost::multi_index::detail::nth_layer<1, UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; TagList = boost::mpl::v_item<IMSI_tag, boost::mpl::vector0<mpl_::na>, 0>; Category = boost::multi_index::detail::hashed_unique_tag; boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator = boost::multi_index::detail::hashed_index_iterator<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > > >, boost::multi_index::detail::bucket_array<boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >; typename SuperMeta::type::final_allocator_type = boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >; typename SuperMeta::type::node_type = boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >]'
main.cpp:292:49:   required from 'typename boost::multi_index::multi_index_container<UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >::index<Tag>::type::iterator CrMultiParameterMultiIndex::GetIteratorBy(SearchingKey&) [with TagType = IMSI_tag; SearchingKey = long unsigned int; typename boost::multi_index::multi_index_container<UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >::index<Tag>::type::iterator = boost::multi_index::detail::hashed_index_iterator<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > > >, boost::multi_index::detail::bucket_array<boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >]'
main.cpp:334:64:   required from 'uint32_t CrMultiParameterMultiIndex::RemoveBy(SearchingKey&) [with TagType = IMSI_tag; SearchingKey = long unsigned int; uint32_t = unsigned int]'
main.cpp:457:44:   required from here
/usr/local/include/boost/functional/hash/hash.hpp:206:57: error: no type named 'type' in 'struct boost::hash_detail::ulong_numbers<boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >'
/usr/local/include/boost/functional/hash/extensions.hpp: In instantiation of 'std::size_t boost::hash<T>::operator()(const T&) const [with T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; std::size_t = long unsigned int]':
/usr/local/include/boost/variant/detail/hash_variant.hpp:33:34:   required from 'std::size_t boost::detail::variant::variant_hasher::operator()(const T&) const [with T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; std::size_t = long unsigned int]'
/usr/local/include/boost/variant/variant.hpp:1048:32:   required from 'boost::detail::variant::invoke_visitor<Visitor>::result_type boost::detail::variant::invoke_visitor<Visitor>::internal_visit(T&, int) [with T = const boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; Visitor = const boost::detail::variant::variant_hasher; boost::detail::variant::invoke_visitor<Visitor>::result_type = long unsigned int]'
/usr/local/include/boost/variant/detail/visitation_impl.hpp:130:9:   required from 'typename Visitor::result_type boost::detail::variant::visitation_impl_invoke_impl(int, Visitor&, VoidPtrCV, T*, mpl_::true_) [with Visitor = boost::detail::variant::invoke_visitor<const boost::detail::variant::variant_hasher>; VoidPtrCV = const void*; T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; typename Visitor::result_type = long unsigned int; mpl_::true_ = mpl_::bool_<true>]'
/usr/local/include/boost/variant/detail/visitation_impl.hpp:173:9:   required from 'typename Visitor::result_type boost::detail::variant::visitation_impl_invoke(int, Visitor&, VoidPtrCV, T*, NoBackupFlag, int) [with Visitor = boost::detail::variant::invoke_visitor<const boost::detail::variant::variant_hasher>; VoidPtrCV = const void*; T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; NoBackupFlag = boost::variant<boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >, long unsigned int, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>::has_fallback_type_; typename Visitor::result_type = long unsigned int]'
/usr/local/include/boost/variant/detail/visitation_impl.hpp:256:5:   required from 'typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VoidPtrCV, mpl_::false_, NoBackupFlag, Which*, step0*) [with Which = mpl_::int_<0>; step0 = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_item<mpl_::long_<2l>, boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >, boost::mpl::l_item<mpl_::long_<1l>, long unsigned int, boost::mpl::l_end> > >, boost::mpl::l_iter<boost::mpl::l_end> >; Visitor = boost::detail::variant::invoke_visitor<const boost::detail::variant::variant_hasher>; VoidPtrCV = const void*; NoBackupFlag = boost::variant<boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >, long unsigned int, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>::has_fallback_type_; typename Visitor::result_type = long unsigned int; mpl_::false_ = mpl_::bool_<false>]'
/usr/local/include/boost/variant/variant.hpp:2367:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/boost/functional/hash/extensions.hpp:269:34:   required from 'std::size_t boost::hash<T>::operator()(const T&) const [with T = CrUniqueKey<long unsigned int>; std::size_t = long unsigned int]'
/usr/local/include/boost/multi_index/hashed_index.hpp:506:50:   required from 'boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::find(const CompatibleKey&, const CompatibleHash&, const CompatiblePred&) const [with CompatibleKey = long unsigned int; CompatibleHash = boost::hash<CrUniqueKey<long unsigned int> >; CompatiblePred = std::equal_to<CrUniqueKey<long unsigned int> >; KeyFromValue = boost::multi_index::member<UsersKey, CrUniqueKey<long unsigned int>, &UsersKey::IMSI>; Hash = boost::hash<CrUniqueKey<long unsigned int> >; Pred = std::equal_to<CrUniqueKey<long unsigned int> >; SuperMeta = boost::multi_index::detail::nth_layer<1, UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; TagList = boost::mpl::v_item<IMSI_tag, boost::mpl::vector0<mpl_::na>, 0>; Category = boost::multi_index::detail::hashed_unique_tag; boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator = boost::multi_index::detail::hashed_index_iterator<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > > >, boost::multi_index::detail::bucket_array<boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >; typename SuperMeta::type::final_allocator_type = boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >; typename SuperMeta::type::node_type = boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >]'
/usr/local/include/boost/multi_index/hashed_index.hpp:496:28:   required from 'boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::find(const CompatibleKey&) const [with CompatibleKey = long unsigned int; KeyFromValue = boost::multi_index::member<UsersKey, CrUniqueKey<long unsigned int>, &UsersKey::IMSI>; Hash = boost::hash<CrUniqueKey<long unsigned int> >; Pred = std::equal_to<CrUniqueKey<long unsigned int> >; SuperMeta = boost::multi_index::detail::nth_layer<1, UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; TagList = boost::mpl::v_item<IMSI_tag, boost::mpl::vector0<mpl_::na>, 0>; Category = boost::multi_index::detail::hashed_unique_tag; boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator = boost::multi_index::detail::hashed_index_iterator<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > > >, boost::multi_index::detail::bucket_array<boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >; typename SuperMeta::type::final_allocator_type = boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >; typename SuperMeta::type::node_type = boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >]'
main.cpp:292:49:   required from 'typename boost::multi_index::multi_index_container<UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >::index<Tag>::type::iterator CrMultiParameterMultiIndex::GetIteratorBy(SearchingKey&) [with TagType = IMSI_tag; SearchingKey = long unsigned int; typename boost::multi_index::multi_index_container<UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >::index<Tag>::type::iterator = boost::multi_index::detail::hashed_index_iterator<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > > >, boost::multi_index::detail::bucket_array<boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >]'
main.cpp:334:64:   required from 'uint32_t CrMultiParameterMultiIndex::RemoveBy(SearchingKey&) [with TagType = IMSI_tag; SearchingKey = long unsigned int; uint32_t = unsigned int]'
main.cpp:457:44:   required from here
/usr/local/include/boost/functional/hash/hash.hpp:213:9: note: template<class T> typename boost::enable_if<boost::is_enum<T>, long unsigned int>::type boost::hash_value(T)
         hash_value(T v)
         ^
/usr/local/include/boost/functional/hash/hash.hpp:213:9: note:   template argument deduction/substitution failed:
/usr/local/include/boost/functional/hash/hash.hpp: In substitution of 'template<class T> typename boost::enable_if<boost::is_enum<T>, long unsigned int>::type boost::hash_value(T) [with T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >]':
/usr/local/include/boost/functional/hash/extensions.hpp:269:34:   required from 'std::size_t boost::hash<T>::operator()(const T&) const [with T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; std::size_t = long unsigned int]'
/usr/local/include/boost/variant/detail/hash_variant.hpp:33:34:   required from 'std::size_t boost::detail::variant::variant_hasher::operator()(const T&) const [with T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; std::size_t = long unsigned int]'
/usr/local/include/boost/variant/variant.hpp:1048:32:   required from 'boost::detail::variant::invoke_visitor<Visitor>::result_type boost::detail::variant::invoke_visitor<Visitor>::internal_visit(T&, int) [with T = const boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; Visitor = const boost::detail::variant::variant_hasher; boost::detail::variant::invoke_visitor<Visitor>::result_type = long unsigned int]'
/usr/local/include/boost/variant/detail/visitation_impl.hpp:130:9:   required from 'typename Visitor::result_type boost::detail::variant::visitation_impl_invoke_impl(int, Visitor&, VoidPtrCV, T*, mpl_::true_) [with Visitor = boost::detail::variant::invoke_visitor<const boost::detail::variant::variant_hasher>; VoidPtrCV = const void*; T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; typename Visitor::result_type = long unsigned int; mpl_::true_ = mpl_::bool_<true>]'
/usr/local/include/boost/variant/detail/visitation_impl.hpp:173:9:   required from 'typename Visitor::result_type boost::detail::variant::visitation_impl_invoke(int, Visitor&, VoidPtrCV, T*, NoBackupFlag, int) [with Visitor = boost::detail::variant::invoke_visitor<const boost::detail::variant::variant_hasher>; VoidPtrCV = const void*; T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; NoBackupFlag = boost::variant<boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >, long unsigned int, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>::has_fallback_type_; typename Visitor::result_type = long unsigned int]'
/usr/local/include/boost/variant/detail/visitation_impl.hpp:256:5:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/boost/functional/hash/extensions.hpp:269:34:   required from 'std::size_t boost::hash<T>::operator()(const T&) const [with T = CrUniqueKey<long unsigned int>; std::size_t = long unsigned int]'
/usr/local/include/boost/multi_index/hashed_index.hpp:506:50:   required from 'boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::find(const CompatibleKey&, const CompatibleHash&, const CompatiblePred&) const [with CompatibleKey = long unsigned int; CompatibleHash = boost::hash<CrUniqueKey<long unsigned int> >; CompatiblePred = std::equal_to<CrUniqueKey<long unsigned int> >; KeyFromValue = boost::multi_index::member<UsersKey, CrUniqueKey<long unsigned int>, &UsersKey::IMSI>; Hash = boost::hash<CrUniqueKey<long unsigned int> >; Pred = std::equal_to<CrUniqueKey<long unsigned int> >; SuperMeta = boost::multi_index::detail::nth_layer<1, UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; TagList = boost::mpl::v_item<IMSI_tag, boost::mpl::vector0<mpl_::na>, 0>; Category = boost::multi_index::detail::hashed_unique_tag; boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator = boost::multi_index::detail::hashed_index_iterator<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > > >, boost::multi_index::detail::bucket_array<boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >; typename SuperMeta::type::final_allocator_type = boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >; typename SuperMeta::type::node_type = boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >]'
/usr/local/include/boost/multi_index/hashed_index.hpp:496:28:   required from 'boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::find(const CompatibleKey&) const [with CompatibleKey = long unsigned int; KeyFromValue = boost::multi_index::member<UsersKey, CrUniqueKey<long unsigned int>, &UsersKey::IMSI>; Hash = boost::hash<CrUniqueKey<long unsigned int> >; Pred = std::equal_to<CrUniqueKey<long unsigned int> >; SuperMeta = boost::multi_index::detail::nth_layer<1, UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; TagList = boost::mpl::v_item<IMSI_tag, boost::mpl::vector0<mpl_::na>, 0>; Category = boost::multi_index::detail::hashed_unique_tag; boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator = boost::multi_index::detail::hashed_index_iterator<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > > >, boost::multi_index::detail::bucket_array<boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >; typename SuperMeta::type::final_allocator_type = boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >; typename SuperMeta::type::node_type = boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >]'
main.cpp:292:49:   required from 'typename boost::multi_index::multi_index_container<UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >::index<Tag>::type::iterator CrMultiParameterMultiIndex::GetIteratorBy(SearchingKey&) [with TagType = IMSI_tag; SearchingKey = long unsigned int; typename boost::multi_index::multi_index_container<UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >::index<Tag>::type::iterator = boost::multi_index::detail::hashed_index_iterator<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > > >, boost::multi_index::detail::bucket_array<boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >]'
main.cpp:334:64:   required from 'uint32_t CrMultiParameterMultiIndex::RemoveBy(SearchingKey&) [with TagType = IMSI_tag; SearchingKey = long unsigned int; uint32_t = unsigned int]'
main.cpp:457:44:   required from here
/usr/local/include/boost/functional/hash/hash.hpp:213:9: error: no type named 'type' in 'struct boost::enable_if<boost::is_enum<boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >, long unsigned int>'
/usr/local/include/boost/functional/hash/extensions.hpp: In instantiation of 'std::size_t boost::hash<T>::operator()(const T&) const [with T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; std::size_t = long unsigned int]':
/usr/local/include/boost/variant/detail/hash_variant.hpp:33:34:   required from 'std::size_t boost::detail::variant::variant_hasher::operator()(const T&) const [with T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; std::size_t = long unsigned int]'
/usr/local/include/boost/variant/variant.hpp:1048:32:   required from 'boost::detail::variant::invoke_visitor<Visitor>::result_type boost::detail::variant::invoke_visitor<Visitor>::internal_visit(T&, int) [with T = const boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; Visitor = const boost::detail::variant::variant_hasher; boost::detail::variant::invoke_visitor<Visitor>::result_type = long unsigned int]'
/usr/local/include/boost/variant/detail/visitation_impl.hpp:130:9:   required from 'typename Visitor::result_type boost::detail::variant::visitation_impl_invoke_impl(int, Visitor&, VoidPtrCV, T*, mpl_::true_) [with Visitor = boost::detail::variant::invoke_visitor<const boost::detail::variant::variant_hasher>; VoidPtrCV = const void*; T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; typename Visitor::result_type = long unsigned int; mpl_::true_ = mpl_::bool_<true>]'
/usr/local/include/boost/variant/detail/visitation_impl.hpp:173:9:   required from 'typename Visitor::result_type boost::detail::variant::visitation_impl_invoke(int, Visitor&, VoidPtrCV, T*, NoBackupFlag, int) [with Visitor = boost::detail::variant::invoke_visitor<const boost::detail::variant::variant_hasher>; VoidPtrCV = const void*; T = boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; NoBackupFlag = boost::variant<boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >, long unsigned int, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>::has_fallback_type_; typename Visitor::result_type = long unsigned int]'
/usr/local/include/boost/variant/detail/visitation_impl.hpp:256:5:   required from 'typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VoidPtrCV, mpl_::false_, NoBackupFlag, Which*, step0*) [with Which = mpl_::int_<0>; step0 = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_item<mpl_::long_<2l>, boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >, boost::mpl::l_item<mpl_::long_<1l>, long unsigned int, boost::mpl::l_end> > >, boost::mpl::l_iter<boost::mpl::l_end> >; Visitor = boost::detail::variant::invoke_visitor<const boost::detail::variant::variant_hasher>; VoidPtrCV = const void*; NoBackupFlag = boost::variant<boost::interprocess::shared_ptr<EmptyKey, boost::interprocess::allocator<void, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >, boost::interprocess::deleter<EmptyKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >, long unsigned int, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>::has_fallback_type_; typename Visitor::result_type = long unsigned int; mpl_::false_ = mpl_::bool_<false>]'
/usr/local/include/boost/variant/variant.hpp:2367:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/boost/functional/hash/extensions.hpp:269:34:   required from 'std::size_t boost::hash<T>::operator()(const T&) const [with T = CrUniqueKey<long unsigned int>; std::size_t = long unsigned int]'
/usr/local/include/boost/multi_index/hashed_index.hpp:506:50:   required from 'boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::find(const CompatibleKey&, const CompatibleHash&, const CompatiblePred&) const [with CompatibleKey = long unsigned int; CompatibleHash = boost::hash<CrUniqueKey<long unsigned int> >; CompatiblePred = std::equal_to<CrUniqueKey<long unsigned int> >; KeyFromValue = boost::multi_index::member<UsersKey, CrUniqueKey<long unsigned int>, &UsersKey::IMSI>; Hash = boost::hash<CrUniqueKey<long unsigned int> >; Pred = std::equal_to<CrUniqueKey<long unsigned int> >; SuperMeta = boost::multi_index::detail::nth_layer<1, UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; TagList = boost::mpl::v_item<IMSI_tag, boost::mpl::vector0<mpl_::na>, 0>; Category = boost::multi_index::detail::hashed_unique_tag; boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator = boost::multi_index::detail::hashed_index_iterator<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > > >, boost::multi_index::detail::bucket_array<boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >; typename SuperMeta::type::final_allocator_type = boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >; typename SuperMeta::type::node_type = boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >]'
/usr/local/include/boost/multi_index/hashed_index.hpp:496:28:   required from 'boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::find(const CompatibleKey&) const [with CompatibleKey = long unsigned int; KeyFromValue = boost::multi_index::member<UsersKey, CrUniqueKey<long unsigned int>, &UsersKey::IMSI>; Hash = boost::hash<CrUniqueKey<long unsigned int> >; Pred = std::equal_to<CrUniqueKey<long unsigned int> >; SuperMeta = boost::multi_index::detail::nth_layer<1, UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > >; TagList = boost::mpl::v_item<IMSI_tag, boost::mpl::vector0<mpl_::na>, 0>; Category = boost::multi_index::detail::hashed_unique_tag; boost::multi_index::detail::hashed_index<KeyFromValue, Hash, Pred, SuperMeta, TagList, Category>::iterator = boost::multi_index::detail::hashed_index_iterator<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > > >, boost::multi_index::detail::bucket_array<boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >; typename SuperMeta::type::final_allocator_type = boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> >; typename SuperMeta::type::node_type = boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<UsersKey, boost::interprocess::allocator<UsersKey, boost::interprocess::segment_manager<char, boost::interprocess::rbtree_best_fit<boost::interprocess::mutex_family>, boost::interprocess::iset_index> > > >]'
main.cpp:292:49:   required from 'typename boost::multi_index::multi_index_container<UsersKey, UsersKey_hash_indices, boost::interprocess::allocator<UsersKey, b