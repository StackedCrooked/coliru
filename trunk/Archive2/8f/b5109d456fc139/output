	.file	"main.cpp"
	.intel_syntax noprefix
# GNU C++ (GCC) version 4.8.2 (x86_64-unknown-linux-gnu)
#	compiled by GNU C version 4.8.2, GMP version 5.0.2, MPFR version 3.1.0-p3, MPC version 0.9
# GGC heuristics: --param ggc-min-expand=30 --param ggc-min-heapsize=4096
# options passed:  -imultilib . -imultiarch x86_64-linux-gnu -D_GNU_SOURCE
# -D_REENTRANT main.cpp -masm=intel -mtune=generic -march=x86-64
# -auxbase-strip main.s -O0 -Wall -Wpedantic -std=c++11 -fverbose-asm
# options enabled:  -faggressive-loop-optimizations
# -fasynchronous-unwind-tables -fauto-inc-dec -fbranch-count-reg -fcommon
# -fdelete-null-pointer-checks -fdwarf2-cfi-asm -fearly-inlining
# -feliminate-unused-debug-types -fexceptions -ffunction-cse -fgcse-lm
# -fgnu-runtime -fident -finline-atomics -fira-hoist-pressure
# -fira-share-save-slots -fira-share-spill-slots -fivopts
# -fkeep-static-consts -fleading-underscore -fmath-errno
# -fmerge-debug-strings -fmove-loop-invariants -fpeephole
# -fprefetch-loop-arrays -freg-struct-return
# -fsched-critical-path-heuristic -fsched-dep-count-heuristic
# -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
# -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
# -fsched-stalled-insns-dep -fshow-column -fsigned-zeros
# -fsplit-ivs-in-unroller -fstrict-volatile-bitfields -fsync-libcalls
# -ftrapping-math -ftree-coalesce-vars -ftree-cselim -ftree-forwprop
# -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
# -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop -ftree-pta
# -ftree-reassoc -ftree-scev-cprop -ftree-slp-vectorize
# -ftree-vect-loop-version -funit-at-a-time -funwind-tables -fverbose-asm
# -fzero-initialized-in-bss -m128bit-long-double -m64 -m80387
# -maccumulate-outgoing-args -malign-stringops -mfancy-math-387
# -mfp-ret-in-387 -mfxsr -mglibc -mieee-fp -mlong-double-80 -mmmx -mno-sse4
# -mpush-args -mred-zone -msse -msse2 -mtls-direct-seg-refs

	.section	.text._ZN3foo1xEv,"axG",@progbits,_ZN3foo1xEv,comdat
	.align 2
	.weak	_ZN3foo1xEv
	.type	_ZN3foo1xEv, @function
_ZN3foo1xEv:
.LFB0:
	.cfi_startproc
	push	rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	mov	rbp, rsp	#,
	.cfi_def_cfa_register 6
	mov	QWORD PTR [rbp-8], rdi	# this, this
	mov	eax, 0	# D.2064,
	pop	rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE0:
	.size	_ZN3foo1xEv, .-_ZN3foo1xEv
	.section	.text._ZN3foo1yEv,"axG",@progbits,_ZN3foo1yEv,comdat
	.align 2
	.weak	_ZN3foo1yEv
	.type	_ZN3foo1yEv, @function
_ZN3foo1yEv:
.LFB1:
	.cfi_startproc
	push	rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	mov	rbp, rsp	#,
	.cfi_def_cfa_register 6
	mov	QWORD PTR [rbp-8], rdi	# this, this
	mov	eax, 1	# D.2065,
	pop	rbp	#
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE1:
	.size	_ZN3foo1yEv, .-_ZN3foo1yEv
	.text
	.globl	main
	.type	main, @function
main:
.LFB2:
	.cfi_startproc
	.cfi_personality 0x3,__gxx_personality_v0
	.cfi_lsda 0x3,.LLSDA2
	push	rbp	#
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	mov	rbp, rsp	#,
	.cfi_def_cfa_register 6
	sub	rsp, 48	#,
	mov	QWORD PTR [rbp-16], OFFSET FLAT:_ZTV3foo+16	# f._vptr.foo,
	mov	QWORD PTR [rbp-32], OFFSET FLAT:_ZN3foo1xEv	# nv.__pfn,
	mov	QWORD PTR [rbp-24], 0	# nv.__delta,
	mov	rax, QWORD PTR [rbp-32]	# D.2067, nv.__pfn
	and	eax, 1	# D.2068,
	test	rax, rax	# D.2068
	jne	.L6	#,
	mov	rax, QWORD PTR [rbp-32]	# iftmp.0, nv.__pfn
	jmp	.L7	#
.L6:
	mov	rax, QWORD PTR [rbp-24]	# D.2068, nv.__delta
	lea	rdx, [rbp-16]	# tmp94,
	add	rax, rdx	# D.2070, tmp94
	mov	rdx, QWORD PTR [rax]	# D.2071, MEM[(int (*__vtbl_ptr_type) () * *)_9]
	mov	rax, QWORD PTR [rbp-32]	# D.2067, nv.__pfn
	sub	rax, 1	# D.2068,
	add	rax, rdx	# D.2071, D.2071
	mov	rax, QWORD PTR [rax]	# iftmp.0, *_15
.L7:
	mov	rdx, QWORD PTR [rbp-24]	# D.2068, nv.__delta
	lea	rcx, [rbp-16]	# tmp95,
	add	rdx, rcx	# D.2070, tmp95
	mov	rdi, rdx	#, D.2070
.LEHB0:
	call	rax	# iftmp.0
	mov	QWORD PTR [rbp-48], 1	# v.__pfn,
	mov	QWORD PTR [rbp-40], 0	# v.__delta,
	mov	rax, QWORD PTR [rbp-48]	# D.2067, v.__pfn
	and	eax, 1	# D.2068,
	test	rax, rax	# D.2068
	jne	.L8	#,
	mov	rax, QWORD PTR [rbp-48]	# iftmp.1, v.__pfn
	jmp	.L9	#
.L8:
	mov	rax, QWORD PTR [rbp-40]	# D.2068, v.__delta
	lea	rdx, [rbp-16]	# tmp96,
	add	rax, rdx	# D.2070, tmp96
	mov	rdx, QWORD PTR [rax]	# D.2071, MEM[(int (*__vtbl_ptr_type) () * *)_26]
	mov	rax, QWORD PTR [rbp-48]	# D.2067, v.__pfn
	sub	rax, 1	# D.2068,
	add	rax, rdx	# D.2071, D.2071
	mov	rax, QWORD PTR [rax]	# iftmp.1, *_32
.L9:
	mov	rdx, QWORD PTR [rbp-40]	# D.2068, v.__delta
	lea	rcx, [rbp-16]	# tmp97,
	add	rdx, rcx	# D.2070, tmp97
	mov	rdi, rdx	#, D.2070
	call	rax	# iftmp.1
.LEHE0:
	mov	eax, 0	# D.2072,
	jmp	.L13	#
.L12:
	mov	rdi, rax	#, D.2066
.LEHB1:
	call	_Unwind_Resume	#
.LEHE1:
.L13:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE2:
	.globl	__gxx_personality_v0
	.section	.gcc_except_table,"a",@progbits
.LLSDA2:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE2-.LLSDACSB2
.LLSDACSB2:
	.uleb128 .LEHB0-.LFB2
	.uleb128 .LEHE0-.LEHB0
	.uleb128 .L12-.LFB2
	.uleb128 0
	.uleb128 .LEHB1-.LFB2
	.uleb128 .LEHE1-.LEHB1
	.uleb128 0
	.uleb128 0
.LLSDACSE2:
	.text
	.size	main, .-main
	.weak	_ZTV3foo
	.section	.rodata._ZTV3foo,"aG",@progbits,_ZTV3foo,comdat
	.align 16
	.type	_ZTV3foo, @object
	.size	_ZTV3foo, 24
_ZTV3foo:
	.quad	0
	.quad	_ZTI3foo
	.quad	_ZN3foo1yEv
	.weak	_ZTS3foo
	.section	.rodata._ZTS3foo,"aG",@progbits,_ZTS3foo,comdat
	.type	_ZTS3foo, @object
	.size	_ZTS3foo, 5
_ZTS3foo:
	.string	"3foo"
	.weak	_ZTI3foo
	.section	.rodata._ZTI3foo,"aG",@progbits,_ZTI3foo,comdat
	.align 16
	.type	_ZTI3foo, @object
	.size	_ZTI3foo, 16
_ZTI3foo:
# <anonymous>:
# <anonymous>:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
# <anonymous>:
	.quad	_ZTS3foo
	.ident	"GCC: (GNU) 4.8.2"
	.section	.note.GNU-stack,"",@progbits
