+ g++-4.8 -std=c++11 -O3 -Wall -pedantic -S main.cpp -fverbose-asm -o main.S
+ cat main.S
	.file	"main.cpp"
# GNU C++ (Ubuntu 4.8.1-2ubuntu1~12.04) version 4.8.1 (x86_64-linux-gnu)
#	compiled by GNU C version 4.8.1, GMP version 5.0.2, MPFR version 3.1.0-p3, MPC version 0.9
# GGC heuristics: --param ggc-min-expand=30 --param ggc-min-heapsize=4096
# options passed:  -imultilib . -imultiarch x86_64-linux-gnu -D_GNU_SOURCE
# main.cpp -mtune=generic -march=x86-64 -auxbase-strip main.S -O3 -Wall
# -Wpedantic -std=c++11 -fverbose-asm -fstack-protector
# options enabled:  -faggressive-loop-optimizations
# -fasynchronous-unwind-tables -fauto-inc-dec -fbranch-count-reg
# -fcaller-saves -fcombine-stack-adjustments -fcommon -fcompare-elim
# -fcprop-registers -fcrossjumping -fcse-follow-jumps -fdefer-pop
# -fdelete-null-pointer-checks -fdevirtualize -fdwarf2-cfi-asm
# -fearly-inlining -feliminate-unused-debug-types -fexceptions
# -fexpensive-optimizations -fforward-propagate -ffunction-cse -fgcse
# -fgcse-after-reload -fgcse-lm -fgnu-runtime -fguess-branch-probability
# -fhoist-adjacent-loads -fident -fif-conversion -fif-conversion2
# -findirect-inlining -finline -finline-atomics -finline-functions
# -finline-functions-called-once -finline-small-functions -fipa-cp
# -fipa-cp-clone -fipa-profile -fipa-pure-const -fipa-reference -fipa-sra
# -fira-hoist-pressure -fira-share-save-slots -fira-share-spill-slots
# -fivopts -fkeep-static-consts -fleading-underscore -fmath-errno
# -fmerge-constants -fmerge-debug-strings -fmove-loop-invariants
# -fomit-frame-pointer -foptimize-register-move -foptimize-sibling-calls
# -foptimize-strlen -fpartial-inlining -fpeephole -fpeephole2
# -fpredictive-commoning -fprefetch-loop-arrays -free -freg-struct-return
# -fregmove -freorder-blocks -freorder-functions -frerun-cse-after-loop
# -fsched-critical-path-heuristic -fsched-dep-count-heuristic
# -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
# -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
# -fsched-stalled-insns-dep -fschedule-insns2 -fshow-column -fshrink-wrap
# -fsigned-zeros -fsplit-ivs-in-unroller -fsplit-wide-types
# -fstack-protector -fstrict-aliasing -fstrict-overflow
# -fstrict-volatile-bitfields -fsync-libcalls -fthread-jumps
# -ftoplevel-reorder -ftrapping-math -ftree-bit-ccp -ftree-builtin-call-dce
# -ftree-ccp -ftree-ch -ftree-coalesce-vars -ftree-copy-prop
# -ftree-copyrename -ftree-cselim -ftree-dce -ftree-dominator-opts
# -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-distribute-patterns
# -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
# -ftree-loop-optimize -ftree-parallelize-loops= -ftree-partial-pre
# -ftree-phiprop -ftree-pre -ftree-pta -ftree-reassoc -ftree-scev-cprop
# -ftree-sink -ftree-slp-vectorize -ftree-slsr -ftree-sra
# -ftree-switch-conversion -ftree-tail-merge -ftree-ter
# -ftree-vect-loop-version -ftree-vectorize -ftree-vrp -funit-at-a-time
# -funswitch-loops -funwind-tables -fvect-cost-model -fverbose-asm
# -fzero-initialized-in-bss -m128bit-long-double -m64 -m80387
# -maccumulate-outgoing-args -malign-stringops -mfancy-math-387
# -mfp-ret-in-387 -mfxsr -mglibc -mieee-fp -mlong-double-80 -mmmx -mno-sse4
# -mpush-args -mred-zone -msse -msse2 -mtls-direct-seg-refs

	.section	.rodata.str1.1,"aMS",@progbits,1
.LC0:
	.string	"%d\n"
	.text
	.p2align 4,,15
	.globl	_Z3foov
	.type	_Z3foov, @function
_Z3foov:
.LFB3999:
	.cfi_startproc
	.cfi_personality 0x3,__gxx_personality_v0
	.cfi_lsda 0x3,.LLSDA3999
	pushq	%rbx	#
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	$40, %edi	#,
	subq	$32, %rsp	#,
	.cfi_def_cfa_offset 48
	movq	$10, (%rsp)	#, va1._M_size
.LEHB0:
	call	_Znwm	#
.LEHE0:
	movl	$40, %edx	#,
	movq	%rax, %rdi	# D.65868,
	xorl	%esi, %esi	#
	movq	%rax, 8(%rsp)	# D.65868, va1._M_data
	call	memset	#
	movl	$40, %edi	#,
	movq	$10, 16(%rsp)	#, va2._M_size
.LEHB1:
	call	_Znwm	#
.LEHE1:
	xorl	%esi, %esi	#
	movq	%rax, %rdi	# D.65868,
	movl	$40, %edx	#,
	movq	%rax, 24(%rsp)	# D.65868, va2._M_data
	call	memset	#
	leaq	16(%rsp), %rsi	#, tmp125
	movq	%rsp, %rdi	#,
.LEHB2:
	call	_Z4fillRSt8valarrayIiES1_	#
	xorl	%ebx, %ebx	# ivtmp.120
	.p2align 4,,10
	.p2align 3
.L3:
	movq	24(%rsp), %rax	# MEM[(const struct valarray *)&va2 + 8B], MEM[(const struct valarray *)&va2 + 8B]
	movl	$.LC0, %esi	#,
	movl	$1, %edi	#,
	movl	(%rax,%rbx), %edx	# *_66, D.65872
	xorl	%eax, %eax	#
	addl	%edx, %edx	# D.65872
	call	__printf_chk	#
.LEHE2:
	addq	$4, %rbx	#, ivtmp.120
	cmpq	$40, %rbx	#, ivtmp.120
	jne	.L3	#,
	movq	24(%rsp), %rdi	# va2._M_data,
	call	_ZdlPv	#
	movq	8(%rsp), %rdi	# va1._M_data,
	call	_ZdlPv	#
	addq	$32, %rsp	#,
	.cfi_remember_state
	.cfi_def_cfa_offset 16
	popq	%rbx	#
	.cfi_def_cfa_offset 8
	ret
.L6:
	.cfi_restore_state
	movq	%rax, %rbx	#, tmp120
.L5:
	movq	8(%rsp), %rdi	# va1._M_data,
	call	_ZdlPv	#
	movq	%rbx, %rdi	# tmp120,
.LEHB3:
	call	_Unwind_Resume	#
.LEHE3:
.L7:
	movq	24(%rsp), %rdi	# va2._M_data,
	movq	%rax, %rbx	#, tmp121
	call	_ZdlPv	#
	jmp	.L5	#
	.cfi_endproc
.LFE3999:
	.globl	__gxx_personality_v0
	.section	.gcc_except_table,"a",@progbits
.LLSDA3999:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3999-.LLSDACSB3999
.LLSDACSB3999:
	.uleb128 .LEHB0-.LFB3999
	.uleb128 .LEHE0-.LEHB0
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB1-.LFB3999
	.uleb128 .LEHE1-.LEHB1
	.uleb128 .L6-.LFB3999
	.uleb128 0
	.uleb128 .LEHB2-.LFB3999
	.uleb128 .LEHE2-.LEHB2
	.uleb128 .L7-.LFB3999
	.uleb128 0
	.uleb128 .LEHB3-.LFB3999
	.uleb128 .LEHE3-.LEHB3
	.uleb128 0
	.uleb128 0
.LLSDACSE3999:
	.text
	.size	_Z3foov, .-_Z3foov
	.ident	"GCC: (Ubuntu 4.8.1-2ubuntu1~12.04) 4.8.1"
	.section	.note.GNU-stack,"",@progbits
