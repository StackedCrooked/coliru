main.cpp:16:30: error: function template partial specialization 'make_unique<T []>' is not allowed
     make_unique<T[]>(size_t n)
                              ^
main.cpp: In instantiation of 'typename std::enable_if<(std::extent<_Tp>::value == 0), std::unique_ptr<T> >::type make_unique(Args&& ...) [with T = int []; Args = {int}; typename std::enable_if<(std::extent<_Tp>::value == 0), std::unique_ptr<T> >::type = std::unique_ptr<int [], std::default_delete<int []> >]':
main.cpp:29:35:   required from here
main.cpp:12:67: error: invalid use of array with unspecified bounds
     { return std::unique_ptr<T>(new T(std::forward<Args>(args)...)); }
                                                                   ^
main.cpp: In function 'typename std::enable_if<(std::extent<_Tp>::value == 0), std::unique_ptr<T> >::type make_unique(Args&& ...) [with T = int []; Args = {int}; typename std::enable_if<(std::extent<_Tp>::value == 0), std::unique_ptr<T> >::type = std::unique_ptr<int [], std::default_delete<int []> >]':
main.cpp:12:70: warning: control reaches end of non-void function [-Wreturn-type]
     { return std::unique_ptr<T>(new T(std::forward<Args>(args)...)); }
                                                                      ^
