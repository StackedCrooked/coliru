main.cpp:9:16: warning: use of 'auto' in lambda parameter declaration only available with -std=c++1y or -std=gnu++1y
 auto tuple = [](auto... args)
                ^
main.cpp: In lambda function:
main.cpp:11:15: warning: use of 'auto' in lambda parameter declaration only available with -std=c++1y or -std=gnu++1y
     return [=](auto f){ return f(args...); };  
               ^
main.cpp: At global scope:
main.cpp:14:14: warning: use of 'auto' in lambda parameter declaration only available with -std=c++1y or -std=gnu++1y
 auto map = [](auto... args, auto fn)
              ^
main.cpp:14:27: warning: use of 'auto' in lambda parameter declaration only available with -std=c++1y or -std=gnu++1y
 auto map = [](auto... args, auto fn)
                           ^
main.cpp:19:14: warning: use of 'auto' in lambda parameter declaration only available with -std=c++1y or -std=gnu++1y
 auto cat = [](auto... l1, auto... l2)
              ^
main.cpp:19:25: warning: use of 'auto' in lambda parameter declaration only available with -std=c++1y or -std=gnu++1y
 auto cat = [](auto... l1, auto... l2)
                         ^
main.cpp: In lambda function:
main.cpp:21:18: warning: use of 'auto' in lambda parameter declaration only available with -std=c++1y or -std=gnu++1y
     return l1([=](auto... v1s) {
                  ^
main.cpp: In lambda function:
main.cpp:22:22: warning: use of 'auto' in lambda parameter declaration only available with -std=c++1y or -std=gnu++1y
         return l2([=](auto... v2s) {
                      ^
main.cpp:25:5: error: parameter packs not expanded with '...':
     });
     ^
main.cpp:25:5: note:         '__l2'
main.cpp: In lambda function:
main.cpp:26:1: error: parameter packs not expanded with '...':
 };
 ^
main.cpp:26:1: note:         'l1'
main.cpp: In function 'int main()':
main.cpp:31:20: error: invalid use of 'auto'
     map(tuple(1,2,3), [](auto val) {
                    ^
main.cpp:31:25: warning: use of 'auto' in lambda parameter declaration only available with -std=c++1y or -std=gnu++1y
     map(tuple(1,2,3), [](auto val) {
                         ^
