Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocating new segment of 160 bytes
Allocating new segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocating new segment of 160 bytes
Allocating new segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocating new segment of 160 bytes
Allocating new segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocated chunk of 8160 bytes which is divided into 255 blocks of 32 bytes each
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocating new segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocating new segment of 160 bytes
Allocating new segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocating new segment of 160 bytes
Allocating new segment of 160 bytes
Allocating new segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocating new segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocating new segment of 160 bytes
Allocating new segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocating new segment of 160 bytes
Allocating new segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocating new segment of 160 bytes
Allocating new segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocating new segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocating new segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocating new segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocated chunk of 12240 bytes which is divided into 255 blocks of 48 bytes each
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocating new segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocating new segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocating new segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocating new segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocating new segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocating new segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocating new segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocating new segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocating new segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f9064000a40
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f9064000a40
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
Allocation size=168 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<TaskQueue<int>::Task, Adaptor<FlexiblePool>::Allocator<char>, void (int&)>, Adaptor<FlexiblePool>::Allocator<char>, (__gnu_cxx::_Lock_policy)2>
Allocating new segment of 168 bytes
Allocation size=24 bytes. Type=std::__future_base::_Result_alloc<void, Adaptor<FlexiblePool>::Allocator<char> >
 Allocated chunk of 6120 bytes which is divided into 255 blocks of 24 bytes each
 Allocating 24 bytes from chunk 0x167c200
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<void (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<void (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7f9054000be0
 FlexiblePool: destroying 3 fixed-size pools.
FixedFreeListPool: segment_count=31 block_size=160 total_size=4960 bytes
FixedFreeListPool: segment_count=1 block_size=168 total_size=168 bytes
