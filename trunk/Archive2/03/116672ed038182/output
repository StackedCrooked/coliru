In file included from /usr/local/include/boost/multi_index/detail/index_base.hpp:25:0,
                 from /usr/local/include/boost/multi_index/detail/base_type.hpp:21,
                 from /usr/local/include/boost/multi_index_container.hpp:34,
                 from main.cpp:7:
/usr/local/include/boost/multi_index/detail/node_type.hpp: In instantiation of 'struct boost::multi_index::detail::index_node_applier::apply<boost::mpl::v_iter<boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > >, 2l>, boost::multi_index::detail::index_node_base<MLLEntry, std::allocator<MLLEntry> > >':
/usr/local/include/boost/mpl/aux_/preprocessed/gcc/apply_wrap.hpp:46:8:   required from 'struct boost::mpl::apply_wrap2<boost::multi_index::detail::index_node_applier, boost::mpl::v_iter<boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > >, 2l>, boost::multi_index::detail::index_node_base<MLLEntry, std::allocator<MLLEntry> > >'
/usr/local/include/boost/mpl/aux_/preprocessed/gcc/bind.hpp:207:21:   required from 'struct boost::mpl::bind2<boost::multi_index::detail::index_node_applier, mpl_::arg<2>, mpl_::arg<1> >::apply<boost::multi_index::detail::index_node_base<MLLEntry, std::allocator<MLLEntry> >, boost::mpl::v_iter<boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > >, 2l> >'
/usr/local/include/boost/mpl/aux_/preprocessed/gcc/apply_wrap.hpp:46:8:   required from 'struct boost::mpl::apply_wrap2<boost::mpl::bind2<boost::multi_index::detail::index_node_applier, mpl_::arg<2>, mpl_::arg<1> >, boost::multi_index::detail::index_node_base<MLLEntry, std::allocator<MLLEntry> >, boost::mpl::v_iter<boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > >, 2l> >'
/usr/local/include/boost/mpl/aux_/preprocessed/gcc/apply.hpp:67:8:   required from 'struct boost::mpl::apply2<boost::mpl::bind2<boost::multi_index::detail::index_node_applier, mpl_::arg<2>, mpl_::arg<1> >, boost::multi_index::detail::index_node_base<MLLEntry, std::allocator<MLLEntry> >, boost::mpl::v_iter<boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > >, 2l> >'
/usr/local/include/boost/mpl/aux_/preprocessed/gcc/reverse_iter_fold_impl.hpp:109:67:   required from 'struct boost::mpl::aux::reverse_iter_fold_impl<3l, boost::mpl::v_iter<boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > >, 0l>, boost::mpl::v_iter<boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > >, 3l>, boost::multi_index::detail::index_node_base<MLLEntry, std::allocator<MLLEntry> >, boost::mpl::bind2<boost::multi_index::detail::index_node_applier, mpl_::arg<2>, mpl_::arg<1> >, boost::mpl::protect<mpl_::arg<1>, 0> >'
/usr/local/include/boost/mpl/reverse_iter_fold.hpp:43:18:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/c++/4.9.2/bits/stl_pair.h:102:11:   required from 'struct std::pair<const int, boost::multi_index::multi_index_container<MLLEntry, boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > > > >'
/usr/local/include/c++/4.9.2/ext/aligned_buffer.h:44:34:   required from 'struct __gnu_cxx::__aligned_buffer<std::pair<const int, boost::multi_index::multi_index_container<MLLEntry, boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > > > > >'
/usr/local/include/c++/4.9.2/bits/stl_tree.h:147:41:   required from 'struct std::_Rb_tree_node<std::pair<const int, boost::multi_index::multi_index_container<MLLEntry, boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > > > > >'
/usr/local/include/c++/4.9.2/bits/stl_tree.h:1245:25:   required from 'void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = std::pair<const int, boost::multi_index::multi_index_container<MLLEntry, boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > > > >; _KeyOfValue = std::_Select1st<std::pair<const int, boost::multi_index::multi_index_container<MLLEntry, boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > > > > >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, boost::multi_index::multi_index_container<MLLEntry, boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > > > > >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const int, boost::multi_index::multi_index_container<MLLEntry, boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > > > > >*]'
/usr/local/include/c++/4.9.2/bits/stl_tree.h:715:28:   required from 'std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::~_Rb_tree() [with _Key = int; _Val = std::pair<const int, boost::multi_index::multi_index_container<MLLEntry, boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > > > >; _KeyOfValue = std::_Select1st<std::pair<const int, boost::multi_index::multi_index_container<MLLEntry, boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > > > > >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, boost::multi_index::multi_index_container<MLLEntry, boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > > > > >]'
/usr/local/include/c++/4.9.2/bits/stl_map.h:96:11:   required from here
/usr/local/include/boost/multi_index/detail/node_type.hpp:44:53: error: invalid use of incomplete type 'boost::multi_index::detail::index_node_applier::apply<boost::mpl::v_iter<boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > >, 2l>, boost::multi_index::detail::index_node_base<MLLEntry, std::allocator<MLLEntry> > >::index_specifier {aka struct boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> >}'
       BOOST_NESTED_TEMPLATE node_class<Super>::type type;
                                                     ^
In file included from /usr/local/include/boost/multi_index_container_fwd.hpp:19:0,
                 from /usr/local/include/boost/multi_index_container.hpp:31,
                 from main.cpp:7:
/usr/local/include/boost/multi_index/ordered_index_fwd.hpp:118:8: error: declaration of 'boost::multi_index::detail::index_node_applier::apply<boost::mpl::v_iter<boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > >, 2l>, boost::multi_index::detail::index_node_base<MLLEntry, std::allocator<MLLEntry> > >::index_specifier {aka struct boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> >}'
 struct ordered_non_unique;
        ^
In file included from /usr/local/include/boost/multi_index_container.hpp:34:0,
                 from main.cpp:7:
/usr/local/include/boost/multi_index/detail/base_type.hpp: In instantiation of 'struct boost::multi_index::detail::index_applier::apply<boost::mpl::at_c<boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > >, 0l>, boost::multi_index::detail::nth_layer<1, MLLEntry, boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > >, std::allocator<MLLEntry> > >':
/usr/local/include/boost/mpl/aux_/preprocessed/gcc/apply_wrap.hpp:46:8:   required from 'struct boost::mpl::apply_wrap2<boost::multi_index::detail::index_applier, boost::mpl::at_c<boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > >, 0l>, boost::multi_index::detail::nth_layer<1, MLLEntry, boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > >, std::allocator<MLLEntry> > >'
/usr/local/include/boost/mpl/aux_/preprocessed/gcc/apply.hpp:67:8:   required from 'struct boost::mpl::apply2<boost::multi_index::detail::index_applier, boost::mpl::at_c<boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > >, 0l>, boost::multi_index::detail::nth_layer<1, MLLEntry, boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > >, std::allocator<MLLEntry> > >'
/usr/local/include/boost/mpl/eval_if.hpp:60:31:   required from 'struct boost::mpl::eval_if_c<false, boost::mpl::identity<boost::multi_index::detail::index_base<MLLEntry, boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > >, std::allocator<MLLEntry> > >, boost::mpl::apply2<boost::multi_index::detail::index_applier, boost::mpl::at_c<boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > >, 0l>, boost::multi_index::detail::nth_layer<1, MLLEntry, boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > >, std::allocator<MLLEntry> > > >'
/usr/local/include/boost/multi_index/detail/base_type.hpp:59:11:   required from 'struct boost::multi_index::detail::nth_layer<0, MLLEntry, boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > >, std::allocator<MLLEntry> >'
/usr/local/include/boost/multi_index/detail/base_type.hpp:63:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/c++/4.9.2/bits/stl_pair.h:102:11:   required from 'struct std::pair<const int, boost::multi_index::multi_index_container<MLLEntry, boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > > > >'
/usr/local/include/c++/4.9.2/ext/aligned_buffer.h:44:34:   required from 'struct __gnu_cxx::__aligned_buffer<std::pair<const int, boost::multi_index::multi_index_container<MLLEntry, boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > > > > >'
/usr/local/include/c++/4.9.2/bits/stl_tree.h:147:41:   required from 'struct std::_Rb_tree_node<std::pair<const int, boost::multi_index::multi_index_container<MLLEntry, boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > > > > >'
/usr/local/include/c++/4.9.2/bits/stl_tree.h:1245:25:   required from 'void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = std::pair<const int, boost::multi_index::multi_index_container<MLLEntry, boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > > > >; _KeyOfValue = std::_Select1st<std::pair<const int, boost::multi_index::multi_index_container<MLLEntry, boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > > > > >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, boost::multi_index::multi_index_container<MLLEntry, boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > > > > >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const int, boost::multi_index::multi_index_container<MLLEntry, boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > > > > >*]'
/usr/local/include/c++/4.9.2/bits/stl_tree.h:715:28:   required from 'std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::~_Rb_tree() [with _Key = int; _Val = std::pair<const int, boost::multi_index::multi_index_container<MLLEntry, boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > > > >; _KeyOfValue = std::_Select1st<std::pair<const int, boost::multi_index::multi_index_container<MLLEntry, boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > > > > >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, boost::multi_index::multi_index_container<MLLEntry, boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > > > > >]'
/usr/local/include/c++/4.9.2/bits/stl_map.h:96:11:   required from here
/usr/local/include/boost/multi_index/detail/base_type.hpp:42:58: error: invalid use of incomplete type 'boost::multi_index::detail::index_applier::apply<boost::mpl::at_c<boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > >, 0l>, boost::multi_index::detail::nth_layer<1, MLLEntry, boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > >, std::allocator<MLLEntry> > >::index_specifier {aka struct boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >}'
       BOOST_NESTED_TEMPLATE index_class<SuperMeta>::type type;
                                                          ^
In file included from /usr/local/include/boost/multi_index_container_fwd.hpp:19:0,
                 from /usr/local/include/boost/multi_index_container.hpp:31,
                 from main.cpp:7:
/usr/local/include/boost/multi_index/ordered_index_fwd.hpp:115:8: error: declaration of 'boost::multi_index::detail::index_applier::apply<boost::mpl::at_c<boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > >, 0l>, boost::multi_index::detail::nth_layer<1, MLLEntry, boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<composite>, boost::multi_index::composite_key<MLLEntry, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getSetupCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getPutFileCmd>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getCleanupCmd> > >, boost::multi_index::ordered_non_unique<boost::multi_index::tag<dirfilter>, boost::multi_index::const_mem_fun<MLLEntry, int, &MLLEntry::getDirFilter> > >, std::allocator<MLLEntry> > >::index_specifier {aka struct boost::multi_index::ordered_unique<boost::multi_index::identity<MLLEntry> >}'
 struct ordered_unique;
        ^
