	.file	"main.cpp"
	.section	.rodata.cst8,"aM",@progbits,8
	.align	8
.LCPI0_0:
	.quad	4602678819172646912     # double 0.5
	.text
	.globl	main
	.align	16, 0x90
	.type	main,@function
main:                                   # @main
	.cfi_startproc
# BB#0:                                 # %_ZN5boost4math19normal_distributionIdNS0_8policies6policyINS2_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEC2Edd.exit
	pushq	%rbp
.Ltmp7:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp8:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp9:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp10:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp11:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp12:
	.cfi_def_cfa_offset 56
	subq	$136, %rsp
.Ltmp13:
	.cfi_def_cfa_offset 192
.Ltmp14:
	.cfi_offset %rbx, -56
.Ltmp15:
	.cfi_offset %r12, -48
.Ltmp16:
	.cfi_offset %r13, -40
.Ltmp17:
	.cfi_offset %r14, -32
.Ltmp18:
	.cfi_offset %r15, -24
.Ltmp19:
	.cfi_offset %rbp, -16
	movq	$0, 40(%rsp)
	movabsq	$4607182418800017408, %rax # imm = 0x3FF0000000000000
	movq	%rax, 48(%rsp)
	leaq	56(%rsp), %r14
	movq	%rax, 56(%rsp)
	movq	$_ZSt4cout, 8(%rsp)
	leaq	24(%rsp), %r15
	movabsq	$4611505874442293084, %rbp # imm = 0x3FFF5C28F5C28F5C
	movq	%rbp, 24(%rsp)
	leaq	32(%rsp), %r13
	movw	$10, 32(%rsp)
	movw	116(%rsp), %ax
	movw	%ax, 38(%rsp)
	movl	112(%rsp), %eax
	movl	%eax, 34(%rsp)
	leaq	40(%rsp), %r12
	movq	%r12, %rdi
	movq	%r15, %rsi
	callq	_ZN5boost4math3cdfIdNS0_8policies6policyINS2_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET_RKNS0_19normal_distributionIS6_T0_EERKS6_
	movl	$_ZSt4cout, %edi
	callq	_ZNSo9_M_insertIdEERSoT_
	movq	%rax, %rbx
	movq	%r13, %rdi
	callq	strlen
	movq	%rbx, %rdi
	movq	%r13, %rsi
	movq	%rax, %rdx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movq	8(%rsp), %rbx
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	_ZN5boost4math3cdfIdNS0_8policies6policyINS2_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET_RKNS0_23students_t_distributionIS6_T0_EERKS6_
	movq	%rbx, %rdi
	callq	_ZNSo9_M_insertIdEERSoT_
	movq	%rax, %rbx
	movq	%r13, %rdi
	callq	strlen
	movq	%rbx, %rdi
	movq	%r13, %rsi
	movq	%rax, %rdx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$_ZSt4cout, %edi
	movl	$.L.str2, %esi
	movl	$29, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movq	80(%rsp), %rax
	movq	88(%rsp), %rcx
	movq	%rcx, 104(%rsp)
	movq	%rax, 96(%rsp)
	movq	96(%rsp), %rax
	movq	104(%rsp), %rcx
	movq	%rcx, 120(%rsp)
	movq	%rax, 112(%rsp)
	leaq	128(%rsp), %rbx
	movq	%rbp, 128(%rsp)
	movq	%r12, %rdi
	movq	%rbx, %rsi
	callq	_ZN5boost4math3cdfIdNS0_8policies6policyINS2_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET_RKNS0_19normal_distributionIS6_T0_EERKS6_
	movsd	%xmm0, (%rsp)           # 8-byte Spill
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	_ZN5boost4math3cdfIdNS0_8policies6policyINS2_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET_RKNS0_23students_t_distributionIS6_T0_EERKS6_
	mulsd	(%rsp), %xmm0           # 8-byte Folded Reload
	movl	$_ZSt4cout, %edi
	callq	_ZNSo9_M_insertIdEERSoT_
	movl	$_ZSt4cout, %edi
	movl	$.L.str3, %esi
	movl	$20, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movq	80(%rsp), %rax
	movq	88(%rsp), %rcx
	movq	%rcx, 72(%rsp)
	movq	%rax, 64(%rsp)
	movq	64(%rsp), %rax
	movq	72(%rsp), %rcx
	movq	%rcx, 120(%rsp)
	movq	%rax, 112(%rsp)
	leaq	128(%rsp), %rbx
	movq	%rbp, 128(%rsp)
	movq	%r12, %rdi
	movq	%rbx, %rsi
	callq	_ZN5boost4math3cdfIdNS0_8policies6policyINS2_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET_RKNS0_19normal_distributionIS6_T0_EERKS6_
	xorps	%xmm1, %xmm1
	addsd	%xmm0, %xmm1
	movsd	%xmm1, (%rsp)           # 8-byte Spill
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	_ZN5boost4math3cdfIdNS0_8policies6policyINS2_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET_RKNS0_23students_t_distributionIS6_T0_EERKS6_
	addsd	(%rsp), %xmm0           # 8-byte Folded Reload
	mulsd	.LCPI0_0(%rip), %xmm0
	movl	$_ZSt4cout, %edi
	callq	_ZNSo9_M_insertIdEERSoT_
	xorl	%eax, %eax
	addq	$136, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp20:
	.size	main, .Ltmp20-main
	.cfi_endproc

	.section	.text.startup,"ax",@progbits
	.align	16, 0x90
	.type	__cxx_global_var_init4,@function
__cxx_global_var_init4:                 # @__cxx_global_var_init4
	.cfi_startproc
# BB#0:
	pushq	%rax
.Ltmp22:
	.cfi_def_cfa_offset 16
	cmpb	$0, _ZGVN5boost4math6detail15erf_initializerIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEN4mpl_4int_ILi64EEEE11initializerE(%rip)
	jne	.LBB1_2
# BB#1:
	leaq	(%rsp), %rdi
	callq	_ZN5boost4math6detail15erf_initializerIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEN4mpl_4int_ILi64EEEE4init7do_initERKSD_
	movq	$1, _ZGVN5boost4math6detail15erf_initializerIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEN4mpl_4int_ILi64EEEE11initializerE(%rip)
.LBB1_2:
	popq	%rax
	ret
.Ltmp23:
	.size	__cxx_global_var_init4, .Ltmp23-__cxx_global_var_init4
	.cfi_endproc

	.align	16, 0x90
	.type	__cxx_global_var_init5,@function
__cxx_global_var_init5:                 # @__cxx_global_var_init5
	.cfi_startproc
# BB#0:
	pushq	%rax
.Ltmp25:
	.cfi_def_cfa_offset 16
	cmpb	$0, _ZGVN5boost4math6detail15erf_initializerIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEN4mpl_4int_ILi53EEEE11initializerE(%rip)
	jne	.LBB2_2
# BB#1:
	leaq	(%rsp), %rdi
	callq	_ZN5boost4math6detail15erf_initializerIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEN4mpl_4int_ILi53EEEE4init7do_initERKSD_
	movq	$1, _ZGVN5boost4math6detail15erf_initializerIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEN4mpl_4int_ILi53EEEE11initializerE(%rip)
.LBB2_2:
	popq	%rax
	ret
.Ltmp26:
	.size	__cxx_global_var_init5, .Ltmp26-__cxx_global_var_init5
	.cfi_endproc

	.align	16, 0x90
	.type	__cxx_global_var_init6,@function
__cxx_global_var_init6:                 # @__cxx_global_var_init6
# BB#0:
	cmpb	$0, _ZGVN5boost4math7lanczos19lanczos_initializerINS1_12lanczos17m64EeE11initializerE(%rip)
	jne	.LBB3_2
# BB#1:
	movq	$1, _ZGVN5boost4math7lanczos19lanczos_initializerINS1_12lanczos17m64EeE11initializerE(%rip)
.LBB3_2:
	ret
.Ltmp27:
	.size	__cxx_global_var_init6, .Ltmp27-__cxx_global_var_init6

	.section	.rodata.cst4,"aM",@progbits,4
	.align	4
.LCPI4_0:
	.long	1137180672              # float 400
	.section	.text.startup,"ax",@progbits
	.align	16, 0x90
	.type	__cxx_global_var_init7,@function
__cxx_global_var_init7:                 # @__cxx_global_var_init7
	.cfi_startproc
# BB#0:
	subq	$40, %rsp
.Ltmp29:
	.cfi_def_cfa_offset 48
	cmpb	$0, _ZGVN5boost4math6detail18igamma_initializerIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEE11initializerE(%rip)
	jne	.LBB4_2
# BB#1:
	flds	.LCPI4_0(%rip)
	fld	%st(0)
	fstpt	16(%rsp)
	fstpt	(%rsp)
	leaq	32(%rsp), %rdi
	callq	_ZN5boost4math7gamma_pIeeNS0_8policies6policyINS2_13promote_floatILb0EEENS2_14promote_doubleILb0EEENS2_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEENS0_5tools12promote_argsIT_T0_ffffE4typeESC_SD_RKT1_
	fstp	%st(0)
	movq	$1, _ZGVN5boost4math6detail18igamma_initializerIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEE11initializerE(%rip)
.LBB4_2:
	addq	$40, %rsp
	ret
.Ltmp30:
	.size	__cxx_global_var_init7, .Ltmp30-__cxx_global_var_init7
	.cfi_endproc

	.section	.rodata.cst4,"aM",@progbits,4
	.align	4
.LCPI5_0:
	.long	1056964608              # float 0.5
	.section	.text.startup,"ax",@progbits
	.align	16, 0x90
	.type	__cxx_global_var_init8,@function
__cxx_global_var_init8:                 # @__cxx_global_var_init8
# BB#0:
	subq	$24, %rsp
	cmpb	$0, _ZGVN5boost4math6detail17expm1_initializerIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEN4mpl_4int_ILi64EEEE11initializerE(%rip)
	jne	.LBB5_2
# BB#1:
	flds	.LCPI5_0(%rip)
	fstpt	(%rsp)
	callq	expm1l
	fstp	%st(0)
	movq	$1, _ZGVN5boost4math6detail17expm1_initializerIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEN4mpl_4int_ILi64EEEE11initializerE(%rip)
.LBB5_2:
	addq	$24, %rsp
	ret
.Ltmp31:
	.size	__cxx_global_var_init8, .Ltmp31-__cxx_global_var_init8

	.section	.rodata.cst8,"aM",@progbits,8
	.align	8
.LCPI6_0:
	.quad	9218868437227405312     # double +Inf
.LCPI6_1:
	.quad	4602678819172646912     # double 0.5
.LCPI6_2:
	.quad	4841369599423283200     # double 4503599627370496
.LCPI6_4:
	.quad	9218868437227405311     # double 1.7976931348623157E+308
.LCPI6_5:
	.quad	4607182418800017408     # double 1
	.section	.rodata.cst4,"aM",@progbits,4
	.align	4
.LCPI6_3:
	.long	1056964608              # float 0.5
	.section	.text._ZN5boost4math3cdfIdNS0_8policies6policyINS2_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET_RKNS0_23students_t_distributionIS6_T0_EERKS6_,"axG",@progbits,_ZN5boost4math3cdfIdNS0_8policies6policyINS2_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET_RKNS0_23students_t_distributionIS6_T0_EERKS6_,comdat
	.weak	_ZN5boost4math3cdfIdNS0_8policies6policyINS2_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET_RKNS0_23students_t_distributionIS6_T0_EERKS6_
	.align	16, 0x90
	.type	_ZN5boost4math3cdfIdNS0_8policies6policyINS2_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET_RKNS0_23students_t_distributionIS6_T0_EERKS6_,@function
_ZN5boost4math3cdfIdNS0_8policies6policyINS2_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET_RKNS0_23students_t_distributionIS6_T0_EERKS6_: # @_ZN5boost4math3cdfIdNS0_8policies6policyINS2_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET_RKNS0_23students_t_distributionIS6_T0_EERKS6_
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin6:
	.cfi_lsda 3, .Lexception6
# BB#0:
	pushq	%r14
.Ltmp45:
	.cfi_def_cfa_offset 16
	pushq	%rbx
.Ltmp46:
	.cfi_def_cfa_offset 24
	subq	$232, %rsp
.Ltmp47:
	.cfi_def_cfa_offset 256
.Ltmp48:
	.cfi_offset %rbx, -24
.Ltmp49:
	.cfi_offset %r14, -16
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movsd	(%r14), %xmm0
	movsd	%xmm0, 64(%rsp)         # 8-byte Spill
	movsd	%xmm0, 176(%rsp)
	callq	fabs
	movsd	64(%rsp), %xmm1         # 8-byte Reload
	ucomisd	%xmm1, %xmm1
	jp	.LBB6_27
# BB#1:
	ucomisd	.LCPI6_0(%rip), %xmm0
	jae	.LBB6_27
# BB#2:
	movsd	(%rbx), %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	movsd	%xmm0, 160(%rsp)
	jbe	.LBB6_28
# BB#3:                                 # %_ZN5boost4math6detail19check_df_gt0_to_infIdNS0_8policies6policyINS3_14default_policyES5_S5_S5_S5_S5_S5_S5_S5_S5_S5_S5_S5_EEEEbPKcRKT_PS9_RKT0_.exit
	movsd	(%r14), %xmm0
	ucomisd	%xmm1, %xmm0
	jne	.LBB6_5
	jp	.LBB6_5
# BB#4:
	movsd	.LCPI6_1(%rip), %xmm0
	jmp	.LBB6_26
.LBB6_5:
	callq	fabs
	ucomisd	.LCPI6_0(%rip), %xmm0
	jb	.LBB6_8
# BB#6:                                 # %_ZN5boost4math19normal_distributionIdNS0_8policies6policyINS2_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEC2Edd.exit
	movq	$0, 136(%rsp)
	movabsq	$4607182418800017408, %rax # imm = 0x3FF0000000000000
	movq	%rax, 144(%rsp)
	leaq	136(%rsp), %rdi
	jmp	.LBB6_7
.LBB6_8:
	movsd	160(%rsp), %xmm1
	ucomisd	.LCPI6_2(%rip), %xmm1
	jbe	.LBB6_10
# BB#9:                                 # %_ZN5boost4math19normal_distributionIdNS0_8policies6policyINS2_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEC2Edd.exit5
	movq	$0, 120(%rsp)
	movabsq	$4607182418800017408, %rax # imm = 0x3FF0000000000000
	movq	%rax, 128(%rsp)
	leaq	120(%rsp), %rdi
.LBB6_7:
	movq	%r14, %rsi
	callq	_ZN5boost4math3cdfIdNS0_8policies6policyINS2_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET_RKNS0_19normal_distributionIS6_T0_EERKS6_
.LBB6_26:
	addq	$232, %rsp
	popq	%rbx
	popq	%r14
	ret
.LBB6_10:
	movsd	(%r14), %xmm2
	mulsd	%xmm2, %xmm2
	movaps	%xmm2, %xmm0
	addsd	%xmm0, %xmm0
	ucomisd	%xmm0, %xmm1
	movaps	%xmm1, %xmm0
	addsd	%xmm2, %xmm0
	jbe	.LBB6_18
# BB#11:
	divsd	%xmm0, %xmm2
	movsd	%xmm2, 56(%rsp)         # 8-byte Spill
	mulsd	.LCPI6_1(%rip), %xmm1
	movsd	%xmm1, 64(%rsp)         # 8-byte Spill
	leaq	192(%rsp), %rdi
	movl	$61, %esi
	callq	fegetexceptflag
	movl	$61, %edi
	callq	feclearexcept
	movsd	64(%rsp), %xmm0         # 8-byte Reload
	movsd	%xmm0, 88(%rsp)
	fldl	88(%rsp)
	movsd	56(%rsp), %xmm0         # 8-byte Reload
	movsd	%xmm0, 96(%rsp)
	fldl	96(%rsp)
.Ltmp37:
	fstpt	32(%rsp)
	fstpt	16(%rsp)
	flds	.LCPI6_3(%rip)
	fstpt	(%rsp)
	leaq	184(%rsp), %rdi
	movl	$1, %esi
	movl	$1, %edx
	xorl	%ecx, %ecx
	callq	_ZN5boost4math6detail9ibeta_impIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_RKT0_bbPSB_
.Ltmp38:
# BB#12:                                # %_ZN5boost4math6detail9ibeta_impIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_RKT0_bb.exit.i
	fld	%st(0)
	fstpt	64(%rsp)                # 10-byte Folded Spill
	fabs
	fldl	.LCPI6_4(%rip)
	fxch	%st(1)
	fucompi	%st(1)
	fstp	%st(0)
	ja	.LBB6_13
# BB#17:                                # %_ZN5boost4math6ibetacIdddNS0_8policies6policyINS2_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEENS0_5tools12promote_argsIT_T0_T1_fffE4typeES8_S9_SA_RKT2_.exit
	leaq	192(%rsp), %rdi
	jmp	.LBB6_24
.LBB6_27:
	leaq	176(%rsp), %rdx
	leaq	168(%rsp), %rcx
	movl	$.L.str9, %edi
	movl	$.L.str106, %esi
	callq	_ZN5boost4math8policies18raise_domain_errorIdNS1_6policyINS1_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET_PKcS8_RKS6_RKT0_
.LBB6_18:
	movaps	%xmm1, %xmm2
	divsd	%xmm0, %xmm2
	movsd	%xmm2, 56(%rsp)         # 8-byte Spill
	mulsd	.LCPI6_1(%rip), %xmm1
	movsd	%xmm1, 64(%rsp)         # 8-byte Spill
	leaq	216(%rsp), %rdi
	movl	$61, %esi
	callq	fegetexceptflag
	movl	$61, %edi
	callq	feclearexcept
	movsd	64(%rsp), %xmm0         # 8-byte Reload
	movsd	%xmm0, 112(%rsp)
	fldl	112(%rsp)
	movsd	56(%rsp), %xmm0         # 8-byte Reload
	movsd	%xmm0, 104(%rsp)
	fldl	104(%rsp)
.Ltmp32:
	fstpt	32(%rsp)
	flds	.LCPI6_3(%rip)
	fstpt	16(%rsp)
	fstpt	(%rsp)
	leaq	208(%rsp), %rdi
	xorl	%esi, %esi
	movl	$1, %edx
	xorl	%ecx, %ecx
	callq	_ZN5boost4math6detail9ibeta_impIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_RKT0_bbPSB_
.Ltmp33:
# BB#19:                                # %_ZN5boost4math6detail9ibeta_impIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_RKT0_bb.exit.i7
	fld	%st(0)
	fstpt	64(%rsp)                # 10-byte Folded Spill
	fabs
	fldl	.LCPI6_4(%rip)
	fxch	%st(1)
	fucompi	%st(1)
	fstp	%st(0)
	ja	.LBB6_20
# BB#23:                                # %_ZN5boost4math5ibetaIdddNS0_8policies6policyINS2_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEENS0_5tools12promote_argsIT_T0_T1_fffE4typeES8_S9_SA_RKT2_.exit
	leaq	216(%rsp), %rdi
.LBB6_24:
	movl	$61, %esi
	callq	fesetexceptflag
	fldt	64(%rsp)                # 10-byte Folded Reload
	fstpl	80(%rsp)
	movsd	80(%rsp), %xmm0
	mulsd	.LCPI6_1(%rip), %xmm0
	movsd	(%r14), %xmm1
	xorps	%xmm2, %xmm2
	ucomisd	%xmm2, %xmm1
	jbe	.LBB6_26
# BB#25:
	movsd	.LCPI6_5(%rip), %xmm1
	subsd	%xmm0, %xmm1
	movaps	%xmm1, %xmm0
	jmp	.LBB6_26
.LBB6_28:
	leaq	160(%rsp), %rax
	leaq	152(%rsp), %rcx
	movl	$.L.str10, %edi
	movl	$.L.str105, %esi
	movq	%rax, %rdx
	callq	_ZN5boost4math8policies18raise_domain_errorIdNS1_6policyINS1_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET_PKcS8_RKS6_RKT0_
.LBB6_13:
.Ltmp39:
	leaq	200(%rsp), %rax
	movl	$.L.str101, %edi
	xorl	%esi, %esi
	movq	%rax, %rdx
	callq	_ZN5boost4math8policies6detail20raise_overflow_errorIdEET_PKcS6_RKNS1_14overflow_errorILNS1_17error_policy_typeE0EEE
.Ltmp40:
	fldz
# BB#14:                                # %.noexc.i
	fstp	%st(0)
.LBB6_20:
.Ltmp34:
	leaq	224(%rsp), %rax
	movl	$.L.str11, %edi
	xorl	%esi, %esi
	movq	%rax, %rdx
	callq	_ZN5boost4math8policies6detail20raise_overflow_errorIdEET_PKcS6_RKNS1_14overflow_errorILNS1_17error_policy_typeE0EEE
.Ltmp35:
	fldz
# BB#21:                                # %.noexc.i8
	fstp	%st(0)
.LBB6_15:
	fstp	%st(0)
.Ltmp41:
	movq	%rax, %rbx
	leaq	192(%rsp), %rax
	jmp	.LBB6_16
.LBB6_22:
	fstp	%st(0)
.Ltmp36:
	movq	%rax, %rbx
	leaq	216(%rsp), %rax
.LBB6_16:                               # %unwind_resume
	movl	$61, %esi
	movq	%rax, %rdi
	callq	fesetexceptflag
	movq	%rbx, %rdi
	callq	_Unwind_Resume
.Ltmp50:
	.size	_ZN5boost4math3cdfIdNS0_8policies6policyINS2_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET_RKNS0_23students_t_distributionIS6_T0_EERKS6_, .Ltmp50-_ZN5boost4math3cdfIdNS0_8policies6policyINS2_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET_RKNS0_23students_t_distributionIS6_T0_EERKS6_
	.cfi_endproc
.Leh_func_end6:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table6:
.Lexception6:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	"\352\200\200"          # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	104                     # Call site table length
.Lset0 = .Leh_func_begin6-.Leh_func_begin6 # >> Call Site 1 <<
	.long	.Lset0
.Lset1 = .Ltmp37-.Leh_func_begin6       #   Call between .Leh_func_begin6 and .Ltmp37
	.long	.Lset1
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset2 = .Ltmp37-.Leh_func_begin6       # >> Call Site 2 <<
	.long	.Lset2
.Lset3 = .Ltmp38-.Ltmp37                #   Call between .Ltmp37 and .Ltmp38
	.long	.Lset3
.Lset4 = .Ltmp41-.Leh_func_begin6       #     jumps to .Ltmp41
	.long	.Lset4
	.byte	0                       #   On action: cleanup
.Lset5 = .Ltmp38-.Leh_func_begin6       # >> Call Site 3 <<
	.long	.Lset5
.Lset6 = .Ltmp32-.Ltmp38                #   Call between .Ltmp38 and .Ltmp32
	.long	.Lset6
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset7 = .Ltmp32-.Leh_func_begin6       # >> Call Site 4 <<
	.long	.Lset7
.Lset8 = .Ltmp33-.Ltmp32                #   Call between .Ltmp32 and .Ltmp33
	.long	.Lset8
.Lset9 = .Ltmp36-.Leh_func_begin6       #     jumps to .Ltmp36
	.long	.Lset9
	.byte	0                       #   On action: cleanup
.Lset10 = .Ltmp33-.Leh_func_begin6      # >> Call Site 5 <<
	.long	.Lset10
.Lset11 = .Ltmp39-.Ltmp33               #   Call between .Ltmp33 and .Ltmp39
	.long	.Lset11
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset12 = .Ltmp39-.Leh_func_begin6      # >> Call Site 6 <<
	.long	.Lset12
.Lset13 = .Ltmp40-.Ltmp39               #   Call between .Ltmp39 and .Ltmp40
	.long	.Lset13
.Lset14 = .Ltmp41-.Leh_func_begin6      #     jumps to .Ltmp41
	.long	.Lset14
	.byte	0                       #   On action: cleanup
.Lset15 = .Ltmp34-.Leh_func_begin6      # >> Call Site 7 <<
	.long	.Lset15
.Lset16 = .Ltmp35-.Ltmp34               #   Call between .Ltmp34 and .Ltmp35
	.long	.Lset16
.Lset17 = .Ltmp36-.Leh_func_begin6      #     jumps to .Ltmp36
	.long	.Lset17
	.byte	0                       #   On action: cleanup
.Lset18 = .Ltmp35-.Leh_func_begin6      # >> Call Site 8 <<
	.long	.Lset18
.Lset19 = .Leh_func_end6-.Ltmp35        #   Call between .Ltmp35 and .Leh_func_end6
	.long	.Lset19
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.rodata.cst8,"aM",@progbits,8
	.align	8
.LCPI7_0:
	.quad	9218868437227405312     # double +Inf
.LCPI7_1:
	.quad	-4614324166009603123    # double -1.4142135623730951
.LCPI7_2:
	.quad	9218868437227405311     # double 1.7976931348623157E+308
.LCPI7_3:
	.quad	4602678819172646912     # double 0.5
.LCPI7_4:
	.quad	4607182418800017408     # double 1
	.section	.text._ZN5boost4math3cdfIdNS0_8policies6policyINS2_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET_RKNS0_19normal_distributionIS6_T0_EERKS6_,"axG",@progbits,_ZN5boost4math3cdfIdNS0_8policies6policyINS2_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET_RKNS0_19normal_distributionIS6_T0_EERKS6_,comdat
	.weak	_ZN5boost4math3cdfIdNS0_8policies6policyINS2_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET_RKNS0_19normal_distributionIS6_T0_EERKS6_
	.align	16, 0x90
	.type	_ZN5boost4math3cdfIdNS0_8policies6policyINS2_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET_RKNS0_19normal_distributionIS6_T0_EERKS6_,@function
_ZN5boost4math3cdfIdNS0_8policies6policyINS2_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET_RKNS0_19normal_distributionIS6_T0_EERKS6_: # @_ZN5boost4math3cdfIdNS0_8policies6policyINS2_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET_RKNS0_19normal_distributionIS6_T0_EERKS6_
	.cfi_startproc
# BB#0:
	pushq	%r14
.Ltmp54:
	.cfi_def_cfa_offset 16
	pushq	%rbx
.Ltmp55:
	.cfi_def_cfa_offset 24
	subq	$104, %rsp
.Ltmp56:
	.cfi_def_cfa_offset 128
.Ltmp57:
	.cfi_offset %rbx, -24
.Ltmp58:
	.cfi_offset %r14, -16
	movq	%rsi, %rbx
	movsd	(%rdi), %xmm0
	movsd	%xmm0, 32(%rsp)         # 8-byte Spill
	movsd	8(%rdi), %xmm1
	movq	_ZZN5boost4math3cdfIdNS0_8policies6policyINS2_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET_RKNS0_19normal_distributionIS6_T0_EERKS6_E8function(%rip), %r14
	movsd	%xmm1, 96(%rsp)
	xorps	%xmm0, %xmm0
	ucomisd	%xmm1, %xmm0
	movaps	%xmm1, %xmm0
	jae	.LBB7_13
# BB#1:
	movsd	%xmm0, 24(%rsp)         # 8-byte Spill
	callq	fabs
	movsd	24(%rsp), %xmm1         # 8-byte Reload
	ucomisd	%xmm1, %xmm1
	jp	.LBB7_13
# BB#2:
	ucomisd	.LCPI7_0(%rip), %xmm0
	jae	.LBB7_13
# BB#3:
	movq	_ZZN5boost4math3cdfIdNS0_8policies6policyINS2_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET_RKNS0_19normal_distributionIS6_T0_EERKS6_E8function(%rip), %r14
	movsd	32(%rsp), %xmm0         # 8-byte Reload
	movsd	%xmm0, 96(%rsp)
	callq	fabs
	movsd	32(%rsp), %xmm1         # 8-byte Reload
	ucomisd	%xmm1, %xmm1
	jp	.LBB7_14
# BB#4:
	ucomisd	.LCPI7_0(%rip), %xmm0
	jae	.LBB7_14
# BB#5:
	movsd	(%rbx), %xmm0
	callq	fabs
	ucomisd	.LCPI7_0(%rip), %xmm0
	jb	.LBB7_8
# BB#6:
	xorps	%xmm0, %xmm0
	ucomisd	(%rbx), %xmm0
	ja	.LBB7_12
# BB#7:                                 # %select.mid
	movsd	.LCPI7_4(%rip), %xmm0
	jmp	.LBB7_12
.LBB7_8:
	movq	_ZZN5boost4math3cdfIdNS0_8policies6policyINS2_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET_RKNS0_19normal_distributionIS6_T0_EERKS6_E8function(%rip), %r14
	movsd	(%rbx), %xmm0
	movsd	%xmm0, 16(%rsp)         # 8-byte Spill
	movsd	%xmm0, 96(%rsp)
	callq	fabs
	movsd	16(%rsp), %xmm1         # 8-byte Reload
	ucomisd	%xmm1, %xmm1
	jp	.LBB7_15
# BB#9:
	ucomisd	.LCPI7_0(%rip), %xmm0
	jae	.LBB7_15
# BB#10:
	movsd	(%rbx), %xmm0
	subsd	32(%rsp), %xmm0         # 8-byte Folded Reload
	movsd	24(%rsp), %xmm1         # 8-byte Reload
	mulsd	.LCPI7_1(%rip), %xmm1
	divsd	%xmm1, %xmm0
	movsd	%xmm0, 48(%rsp)
	fldl	48(%rsp)
	fstpt	(%rsp)
	leaq	88(%rsp), %rsi
	leaq	80(%rsp), %rdx
	movl	$1, %edi
	callq	_ZN5boost4math6detail7erf_impIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_bRKT0_RKN4mpl_4int_ILi53EEE
	fld	%st(0)
	fabs
	fldl	.LCPI7_2(%rip)
	fxch	%st(1)
	fucompi	%st(1)
	fstp	%st(0)
	ja	.LBB7_16
# BB#11:                                # %_ZN5boost4math4erfcIdNS0_8policies6policyINS2_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEENS0_5tools12promote_argsIT_fffffE4typeES8_RKT0_.exit
	fstpl	40(%rsp)
	movsd	40(%rsp), %xmm0
	mulsd	.LCPI7_3(%rip), %xmm0
.LBB7_12:
	addq	$104, %rsp
	popq	%rbx
	popq	%r14
	ret
.LBB7_13:
	leaq	96(%rsp), %rdx
	leaq	72(%rsp), %rcx
	movl	$.L.str104, %esi
	movq	%r14, %rdi
	callq	_ZN5boost4math8policies18raise_domain_errorIdNS1_6policyINS1_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET_PKcS8_RKS6_RKT0_
.LBB7_14:
	leaq	96(%rsp), %rdx
	leaq	64(%rsp), %rcx
	movl	$.L.str103, %esi
	movq	%r14, %rdi
	callq	_ZN5boost4math8policies18raise_domain_errorIdNS1_6policyINS1_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET_PKcS8_RKS6_RKT0_
.LBB7_15:
	leaq	96(%rsp), %rdx
	leaq	56(%rsp), %rcx
	movl	$.L.str106, %esi
	movq	%r14, %rdi
	callq	_ZN5boost4math8policies18raise_domain_errorIdNS1_6policyINS1_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET_PKcS8_RKS6_RKT0_
.LBB7_16:
	fstp	%st(0)
	leaq	96(%rsp), %rax
	movl	$.L.str70, %edi
	xorl	%esi, %esi
	movq	%rax, %rdx
	callq	_ZN5boost4math8policies6detail20raise_overflow_errorIdEET_PKcS6_RKNS1_14overflow_errorILNS1_17error_policy_typeE0EEE
.Ltmp59:
	.size	_ZN5boost4math3cdfIdNS0_8policies6policyINS2_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET_RKNS0_19normal_distributionIS6_T0_EERKS6_, .Ltmp59-_ZN5boost4math3cdfIdNS0_8policies6policyINS2_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET_RKNS0_19normal_distributionIS6_T0_EERKS6_
	.cfi_endproc

	.section	.rodata.cst4,"aM",@progbits,4
	.align	4
.LCPI8_0:
	.long	1056964608              # float 0.5
.LCPI8_4:
	.long	1101004800              # float 20
.LCPI8_7:
	.long	1097859072              # float 15
.LCPI8_8:
	.long	1109393408              # float 40
.LCPI8_9:
	.long	536870912               # float 1.08420217E-19
.LCPI8_11:
	.long	2139095040              # float +Inf
.LCPI8_13:
	.long	3472883712              # float -2.14748365E+9
.LCPI8_17:
	.long	1073741824              # float 2
	.section	.rodata.cst8,"aM",@progbits,8
	.align	8
.LCPI8_1:
	.quad	4596373779694328218     # double 0.20000000000000001
.LCPI8_2:
	.quad	4606281698874543309     # double 0.90000000000000002
.LCPI8_3:
	.quad	4599075939470750515     # double 0.29999999999999999
.LCPI8_5:
	.quad	4591870180066957722     # double 0.10000000000000001
.LCPI8_6:
	.quad	4604480259023595110     # double 0.69999999999999996
.LCPI8_10:
	.quad	4746794006824878080     # double 2147483547
.LCPI8_12:
	.quad	4746794007244308480     # double 2147483647
	.section	.rodata.cst16,"aM",@progbits,16
	.align	16
.LCPI8_14:
	.quad	-1                      # x86_fp80 1.18973149535723176502E+4932
	.short	32766
	.zero	6
.LCPI8_15:
	.quad	-1                      # x86_fp80 5.94865747678615882511E+4931
	.short	32765
	.zero	6
.LCPI8_18:
	.quad	-6703182060581546710    # x86_fp80 -0.318309886183790671538
	.short	49149
	.zero	6
.LCPI8_19:
	.quad	-6703182060581546710    # x86_fp80 0.318309886183790671538
	.short	16381
	.zero	6
.LCPI8_20:
	.quad	-3958705157555305931    # x86_fp80 1.57079632679489661926
	.short	16383
	.zero	6
.LCPI8_21:
	.quad	-3958705157555305931    # x86_fp80 3.14159265358979323851
	.short	16384
	.zero	6
.LCPI8_22:
	.quad	-9223372036854775808    # x86_fp80 6.72420628622418701253E-4932
	.short	2
	.zero	6
	.section	.rodata,"a",@progbits
	.align	16
.LCPI8_16:
	.quad	-9223372036854775808    # x86_fp80 1
	.short	16383
	.zero	6
	.quad	-9223372036854775808    # x86_fp80 -1
	.short	49151
	.zero	6
	.section	.text._ZN5boost4math6detail9ibeta_impIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_RKT0_bbPSB_,"axG",@progbits,_ZN5boost4math6detail9ibeta_impIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_RKT0_bbPSB_,comdat
	.weak	_ZN5boost4math6detail9ibeta_impIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_RKT0_bbPSB_
	.align	16, 0x90
	.type	_ZN5boost4math6detail9ibeta_impIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_RKT0_bbPSB_,@function
_ZN5boost4math6detail9ibeta_impIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_RKT0_bbPSB_: # @_ZN5boost4math6detail9ibeta_impIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_RKT0_bbPSB_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp67:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp68:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp69:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp70:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp71:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp72:
	.cfi_def_cfa_offset 56
	subq	$584, %rsp              # imm = 0x248
.Ltmp73:
	.cfi_def_cfa_offset 640
.Ltmp74:
	.cfi_offset %rbx, -56
.Ltmp75:
	.cfi_offset %r12, -48
.Ltmp76:
	.cfi_offset %r13, -40
.Ltmp77:
	.cfi_offset %r14, -32
.Ltmp78:
	.cfi_offset %r15, -24
.Ltmp79:
	.cfi_offset %rbp, -16
	movq	%rcx, %rbx
	movl	%edx, %r15d
	movl	%esi, %ebp
	movq	%rdi, %r14
	fldt	672(%rsp)
	fldt	656(%rsp)
	fldt	640(%rsp)
	testq	%rbx, %rbx
	fld	%st(0)
	fstpt	384(%rsp)
	fld	%st(1)
	fstpt	368(%rsp)
	fld	%st(2)
	fstpt	352(%rsp)
	fld1
	fld	%st(0)
	fsub	%st(4)
	jne	.LBB8_1
.LBB8_2:
	testq	%rbx, %rbx
	je	.LBB8_4
# BB#3:
	fld1
	fchs
	fstpt	(%rbx)
.LBB8_4:
	fldz
	fucomi	%st(5)
	ja	.LBB8_6
# BB#5:
	fxch	%st(5)
	fucomi	%st(2)
	fxch	%st(5)
	ja	.LBB8_6
# BB#7:
	testb	%r15b, %r15b
	je	.LBB8_22
# BB#8:
	fldz
	fucomi	%st(4)
	ja	.LBB8_9
# BB#10:
	fucomi	%st(5)
	ja	.LBB8_11
# BB#12:
	fxch	%st(4)
	fucomi	%st(4)
	jne	.LBB8_19
	jp	.LBB8_19
# BB#13:
	fxch	%st(5)
	fucomi	%st(4)
	fstp	%st(4)
	jne	.LBB8_17
	jp	.LBB8_17
	jmp	.LBB8_14
.LBB8_17:
	fldz
	jbe	.LBB8_26
# BB#18:
	fstp	%st(4)
	fstp	%st(4)
	fstp	%st(4)
	fstp	%st(1)
	fstp	%st(2)
	fstp	%st(0)
	fstp	%st(0)
	movzbl	%bpl, %eax
	xorl	$1, %eax
	movl	%eax, 204(%rsp)
	fildl	204(%rsp)
	jmp	.LBB8_244
.LBB8_22:
	fucomi	%st(3)
	jae	.LBB8_23
# BB#24:
	fucomi	%st(4)
	fldz
	fxch	%st(4)
	fxch	%st(5)
	fxch	%st(4)
	jae	.LBB8_25
.LBB8_26:
	fstp	%st(0)
	fxch	%st(5)
	fucomi	%st(5)
	fstp	%st(5)
	jne	.LBB8_35
	jp	.LBB8_35
# BB#27:
	fstp	%st(4)
	fstp	%st(3)
	fstp	%st(2)
	testq	%rbx, %rbx
	je	.LBB8_32
# BB#28:
	fld1
	fxch	%st(1)
	fucomi	%st(1)
	jne	.LBB8_29
	jnp	.LBB8_31
.LBB8_29:
	fstp	%st(1)
	fldt	.LCPI8_15(%rip)
	fld1
	fucompi	%st(2)
	fxch	%st(1)
	ja	.LBB8_31
# BB#30:
	fstp	%st(1)
	fldt	.LCPI8_22(%rip)
	fxch	%st(1)
.LBB8_31:
	fxch	%st(1)
	fstpt	(%rbx)
.LBB8_32:
	testb	%bpl, %bpl
	fld1
	fldz
	fcmovne	%st(1), %st(0)
	fstp	%st(1)
	je	.LBB8_42
	jmp	.LBB8_33
.LBB8_35:
	fxch	%st(4)
	fucomi	%st(1)
	jne	.LBB8_43
	jp	.LBB8_43
# BB#36:
	fstp	%st(0)
	fstp	%st(3)
	fstp	%st(2)
	testq	%rbx, %rbx
	je	.LBB8_41
# BB#37:
	fld1
	fxch	%st(2)
	fucomi	%st(2)
	jne	.LBB8_38
	jnp	.LBB8_40
.LBB8_38:
	fstp	%st(2)
	fldt	.LCPI8_15(%rip)
	fld1
	fucompi	%st(3)
	fxch	%st(2)
	ja	.LBB8_40
# BB#39:
	fstp	%st(2)
	fldt	.LCPI8_22(%rip)
	fxch	%st(2)
.LBB8_40:
	fxch	%st(2)
	fstpt	(%rbx)
.LBB8_41:
	testb	%bpl, %bpl
	fldz
	fld1
	fcmovne	%st(1), %st(0)
	fstp	%st(1)
	je	.LBB8_33
.LBB8_42:
	fstp	%st(2)
	fstp	%st(0)
	jmp	.LBB8_244
.LBB8_33:
	testb	%r15b, %r15b
	fxch	%st(2)
	fxch	%st(1)
	jne	.LBB8_245
# BB#34:
	fstp	%st(2)
	fstpt	16(%rsp)
	fstpt	(%rsp)
	callq	_ZN5boost4math4betaIeeNS0_8policies6policyINS2_13promote_floatILb0EEENS2_14promote_doubleILb0EEENS2_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEENS0_5tools12promote_argsIT_T0_T1_fffE4typeESC_SD_SE_
	jmp	.LBB8_244
.LBB8_19:
	fxch	%st(5)
	fucomi	%st(4)
	fxch	%st(4)
	jne	.LBB8_26
	jp	.LBB8_26
# BB#20:
	fxch	%st(5)
	fucomi	%st(5)
	fstp	%st(5)
	fldz
	jbe	.LBB8_26
# BB#21:
	fstp	%st(4)
	fstp	%st(4)
	fstp	%st(4)
	fstp	%st(1)
	fstp	%st(2)
	fstp	%st(0)
	fstp	%st(0)
	movzbl	%bpl, %eax
	movl	%eax, 260(%rsp)
	fildl	260(%rsp)
	jmp	.LBB8_244
.LBB8_43:
	flds	.LCPI8_0(%rip)
	fxch	%st(4)
	fucomi	%st(4)
	jne	.LBB8_49
	jp	.LBB8_49
# BB#44:
	fxch	%st(3)
	fucomi	%st(4)
	fxch	%st(3)
	jne	.LBB8_49
	jp	.LBB8_49
# BB#45:
	fstp	%st(3)
	fstp	%st(2)
	fstp	%st(2)
	fstp	%st(1)
	testq	%rbx, %rbx
	je	.LBB8_47
# BB#46:
	testb	%bpl, %bpl
	fldt	.LCPI8_18(%rip)
	fldt	.LCPI8_19(%rip)
	fcmovne	%st(1), %st(0)
	fstp	%st(1)
	fld	%st(2)
	fmul	%st(2)
	fsqrt
	fmulp	%st(1)
	fstpt	(%rbx)
.LBB8_47:
	testb	%bpl, %bpl
	fcmovne	%st(1), %st(0)
	fstp	%st(1)
	fsqrt
	fstpt	(%rsp)
	callq	asinl
	fldt	.LCPI8_20(%rip)
	fdivrp	%st(1)
	testb	%r15b, %r15b
	jne	.LBB8_244
# BB#48:
	fldt	.LCPI8_21(%rip)
	fmulp	%st(1)
	jmp	.LBB8_244
.LBB8_49:
	fxch	%st(4)
	fstpt	180(%rsp)               # 10-byte Folded Spill
	fxch	%st(3)
	fucomi	%st(1)
	fld	%st(3)
	fld	%st(1)
	jne	.LBB8_51
	jp	.LBB8_51
# BB#50:
	fstp	%st(1)
	fstp	%st(0)
	fld	%st(2)
	fstpt	384(%rsp)
	fld	%st(0)
	fstpt	368(%rsp)
	fld	%st(4)
	fstpt	352(%rsp)
	xorb	$1, %bpl
	fldz
	fldz
	fxch	%st(5)
	fxch	%st(6)
	fxch	%st(2)
	fxch	%st(4)
	fxch	%st(1)
	fxch	%st(2)
	fxch	%st(1)
.LBB8_51:                               # %thread-pre-split
	fstp	%st(2)
	fstp	%st(4)
	fxch	%st(2)
	fucomi	%st(1)
	jne	.LBB8_74
	jp	.LBB8_74
# BB#52:
	fstp	%st(0)
	fstp	%st(0)
	fld1
	fxch	%st(1)
	fucomi	%st(1)
	jne	.LBB8_56
	jp	.LBB8_56
# BB#53:
	fstp	%st(1)
	fstp	%st(0)
	testq	%rbx, %rbx
	je	.LBB8_55
# BB#54:
	movzbl	%bpl, %eax
	shlq	$4, %rax
	fldt	.LCPI8_16(%rax)
	fstpt	(%rbx)
.LBB8_55:
	testb	%bpl, %bpl
	fcmovne	%st(1), %st(0)
	fstp	%st(1)
	jmp	.LBB8_244
.LBB8_6:
	fstp	%st(4)
	fstp	%st(2)
	fstp	%st(3)
	fstp	%st(0)
	fstp	%st(0)
	fstp	%st(0)
	movq	_ZZN5boost4math6detail9ibeta_impIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_RKT0_bbPSB_E8function(%rip), %rdi
	leaq	352(%rsp), %rdx
	movl	$.L.str15, %esi
.LBB8_16:
	movq	%r14, %rcx
	callq	_ZN5boost4math8policies18raise_domain_errorIeNS1_6policyINS1_13promote_floatILb0EEENS1_14promote_doubleILb0EEENS1_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEET_PKcSC_RKSA_RKT0_
	fstp	%st(0)
.LBB8_74:
	fxch	%st(2)
	fucomi	%st(2)
	fld	%st(0)
	fcmovnbe	%st(3), %st(0)
	fxch	%st(2)
	fucompi	%st(2)
	fstp	%st(1)
	jae	.LBB8_75
# BB#143:
	fxch	%st(1)
	fucomi	%st(1)
	fld	%st(0)
	fadd	%st(2)
	jbe	.LBB8_145
# BB#144:
	fmul	%st(3)
	fsubr	%st(2)
	jmp	.LBB8_146
.LBB8_56:
	testq	%rbx, %rbx
	je	.LBB8_58
# BB#57:
	movzbl	%bpl, %eax
	shlq	$4, %rax
	fldt	.LCPI8_16(%rax)
	fmul	%st(1)
	fstpt	144(%rsp)               # 10-byte Folded Spill
	fxch	%st(1)
	fchs
	fadd	%st(1)
	fld	%st(2)
	fstpt	(%rsp)
	fstpt	16(%rsp)
	fxch	%st(1)
	fstpt	192(%rsp)               # 10-byte Folded Spill
	fstpt	168(%rsp)               # 10-byte Folded Spill
	fstpt	156(%rsp)               # 10-byte Folded Spill
	callq	powl
	fld1
	fldt	156(%rsp)               # 10-byte Folded Reload
	fldt	168(%rsp)               # 10-byte Folded Reload
	fldt	192(%rsp)               # 10-byte Folded Reload
	fldt	144(%rsp)               # 10-byte Folded Reload
	fmulp	%st(5)
	fxch	%st(4)
	fstpt	(%rbx)
	fxch	%st(1)
	fxch	%st(3)
	fxch	%st(2)
	fxch	%st(1)
.LBB8_58:
	fldt	180(%rsp)               # 10-byte Folded Reload
	fucompi	%st(4)
	jbe	.LBB8_65
# BB#59:
	fstp	%st(2)
	fxch	%st(1)
	fstpt	168(%rsp)               # 10-byte Folded Spill
	fld	%st(1)
	fchs
	fxch	%st(2)
	fucompi	%st(1)
	fstp	%st(0)
	fld	%st(0)
	fstpt	448(%rsp)
	ja	.LBB8_247
# BB#60:
	jne	.LBB8_62
	jp	.LBB8_62
	jmp	.LBB8_61
.LBB8_62:                               # %_ZN5boost4math5log1pIeEENS0_5tools12promote_argsIT_fffffE4typeES4_.exit
	fstpt	(%rsp)
	callq	log1pl
	testb	%bpl, %bpl
	fldt	168(%rsp)               # 10-byte Folded Reload
	fmulp	%st(1)
	jne	.LBB8_63
# BB#64:
	fstpt	(%rsp)
	callq	expl
	jmp	.LBB8_72
.LBB8_75:
	fldt	180(%rsp)               # 10-byte Folded Reload
	fxch	%st(3)
	fucomi	%st(3)
	fstp	%st(3)
	jbe	.LBB8_76
# BB#77:
	fld	%st(1)
	fstpt	384(%rsp)
	fld	%st(0)
	fstpt	368(%rsp)
	fld	%st(3)
	fstpt	352(%rsp)
	xorb	$1, %bpl
	jmp	.LBB8_78
.LBB8_65:
	fstp	%st(3)
	testb	%bpl, %bpl
	je	.LBB8_71
# BB#66:
	fld	%st(1)
	fabs
	fxch	%st(1)
	fucompi	%st(1)
	fstp	%st(0)
	fldz
	ja	.LBB8_68
# BB#67:
	fstp	%st(0)
	fld	%st(1)
	fabs
	fld1
	fucompi	%st(1)
	fstp	%st(0)
	fldz
	jbe	.LBB8_70
.LBB8_68:
	fstp	%st(0)
	fld	%st(0)
	fstpt	(%rsp)
	fstpt	192(%rsp)               # 10-byte Folded Spill
	fstpt	168(%rsp)               # 10-byte Folded Spill
	callq	logl
	fldt	168(%rsp)               # 10-byte Folded Reload
	fldt	192(%rsp)               # 10-byte Folded Reload
	fxch	%st(2)
	fmul	%st(1)
	fld	%st(0)
	fabs
	flds	.LCPI8_17(%rip)
	fucompi	%st(1)
	fstp	%st(0)
	fxch	%st(1)
	fxch	%st(2)
	fxch	%st(1)
	jbe	.LBB8_70
# BB#69:
	fstp	%st(1)
	fstp	%st(1)
.LBB8_63:
	fstpt	(%rsp)
	callq	expm1l
	fchs
	jmp	.LBB8_72
.LBB8_145:
	fmul	%st(4)
	fsub	%st(1)
.LBB8_146:
	fldz
	fucompi	%st(1)
	fstp	%st(0)
	jbe	.LBB8_147
# BB#148:
	fld	%st(0)
	fstpt	384(%rsp)
	fld	%st(1)
	fstpt	368(%rsp)
	fld	%st(3)
	fstpt	352(%rsp)
	xorb	$1, %bpl
	jmp	.LBB8_149
.LBB8_76:
                                        # kill:
	fxch	%st(2)
	fxch	%st(3)
	fxch	%st(2)
	fxch	%st(1)
.LBB8_78:                               # %thread-pre-split85
	fucomi	%st(1)
	fld	%st(1)
	fcmovnbe	%st(1), %st(0)
	fld1
	fucompi	%st(1)
	fstp	%st(0)
	jae	.LBB8_79
# BB#110:
	fld1
	fucomi	%st(1)
	jae	.LBB8_113
# BB#111:
	fstp	%st(0)
	fldl	.LCPI8_5(%rip)
	fucompi	%st(4)
	fldz
	jbe	.LBB8_118
# BB#112:
	fstp	%st(0)
	fld	%st(0)
	fmul	%st(4)
	fld	%st(2)
	fstpt	16(%rsp)
	fstpt	(%rsp)
	fxch	%st(2)
	fstpt	192(%rsp)               # 10-byte Folded Spill
	fxch	%st(1)
	fstpt	168(%rsp)               # 10-byte Folded Spill
	fxch	%st(1)
	fstpt	180(%rsp)               # 10-byte Folded Spill
	fstpt	156(%rsp)               # 10-byte Folded Spill
	callq	powl
	fld1
	fldt	180(%rsp)               # 10-byte Folded Reload
	fldt	168(%rsp)               # 10-byte Folded Reload
	fldt	192(%rsp)               # 10-byte Folded Reload
	fldl	.LCPI8_6(%rip)
	fucompi	%st(5)
	fstp	%st(4)
	fldt	156(%rsp)               # 10-byte Folded Reload
	fxch	%st(2)
	fxch	%st(4)
	fxch	%st(3)
	jae	.LBB8_113
.LBB8_118:                              # %thread-pre-split87
	fstp	%st(0)
	fld	%st(0)
	fstpt	384(%rsp)
	fld	%st(1)
	fstpt	368(%rsp)
	fld	%st(2)
	fstpt	352(%rsp)
	movb	%bpl, %r13b
	xorb	$1, %r13b
	fldl	.LCPI8_3(%rip)
	fxch	%st(4)
	fucomi	%st(4)
	fstp	%st(4)
	jae	.LBB8_119
# BB#124:
	flds	.LCPI8_7(%rip)
	fxch	%st(1)
	fucomi	%st(1)
	fstp	%st(1)
	jae	.LBB8_125
# BB#135:
	fxch	%st(1)
	fstpt	156(%rsp)               # 10-byte Folded Spill
	fxch	%st(2)
	fstpt	180(%rsp)               # 10-byte Folded Spill
	fld1
	testb	%r15b, %r15b
	fldz
	fldz
	jne	.LBB8_138
# BB#136:
	fstp	%st(1)
	fstp	%st(0)
	fstp	%st(0)
	fldt	156(%rsp)               # 10-byte Folded Reload
	fadd	%st(2)
	fstpt	168(%rsp)               # 10-byte Folded Spill
	fld1
	fldz
	movl	$20, %eax
	fld	%st(1)
	fxch	%st(2)
	fxch	%st(1)
.LBB8_137:                              # %.lr.ph.i46
                                        # =>This Inner Loop Header: Depth=1
	fldt	168(%rsp)               # 10-byte Folded Reload
	fadd	%st(1)
	fld	%st(5)
	fadd	%st(2)
	fdivrp	%st(1)
	fmulp	%st(3)
	fadd	%st(1)
	decl	%eax
	jne	.LBB8_137
.LBB8_138:                              # %_ZN5boost4math6detail22rising_factorial_ratioIeEET_S3_S3_i.exit48
	fstp	%st(1)
	fstp	%st(0)
	fstpt	144(%rsp)               # 10-byte Folded Spill
	fldt	180(%rsp)               # 10-byte Folded Reload
	fstpt	48(%rsp)
	fld	%st(0)
	fstpt	32(%rsp)
	fstpt	192(%rsp)               # 10-byte Folded Spill
	fldt	156(%rsp)               # 10-byte Folded Reload
	fstpt	16(%rsp)
	fld	%st(0)
	fstpt	(%rsp)
	fstpt	168(%rsp)               # 10-byte Folded Spill
	movzbl	%r15b, %r12d
	leaq	448(%rsp), %rdi
	movl	%r12d, %esi
	movq	%r14, %rdx
	callq	_ZN5boost4math6detail17ibeta_power_termsIeNS0_7lanczos12lanczos17m64ENS0_8policies6policyINS5_13promote_floatILb0EEENS5_14promote_doubleILb0EEENS5_14default_policyESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EEEET_SD_SD_SD_SD_RKT0_bRKT1_
	testq	%rbx, %rbx
	je	.LBB8_140
# BB#139:
	fld	%st(0)
	fstpt	(%rbx)
	fldz
	fxch	%st(1)
	fucomi	%st(1)
	fstp	%st(1)
	jb	.LBB8_248
.LBB8_140:
	fldt	168(%rsp)               # 10-byte Folded Reload
	fdivr	%st(0), %st(1)
	fldz
	fxch	%st(2)
	fucomi	%st(2)
	jne	.LBB8_141
	jnp	.LBB8_101
.LBB8_141:                              # %.preheader.i50
	fstpt	132(%rsp)               # 10-byte Folded Spill
	fldt	156(%rsp)               # 10-byte Folded Reload
	fadd	%st(1)
	fstpt	156(%rsp)               # 10-byte Folded Spill
	fld1
	movl	$19, %eax
	fld	%st(0)
	fld	%st(1)
	fldt	192(%rsp)               # 10-byte Folded Reload
	fstpt	192(%rsp)               # 10-byte Folded Spill
.LBB8_142:                              # =>This Inner Loop Header: Depth=1
	fldt	156(%rsp)               # 10-byte Folded Reload
	fadd	%st(5)
	fldt	192(%rsp)               # 10-byte Folded Reload
	fmulp	%st(1)
	fld	%st(4)
	fadd	%st(6)
	fadd	%st(4)
	fdivrp	%st(1)
	fmulp	%st(2)
	fadd	%st(1)
	fxch	%st(4)
	fadd	%st(2)
	decl	%eax
	fxch	%st(4)
	jne	.LBB8_142
	jmp	.LBB8_104
.LBB8_147:
                                        # kill:
	fxch	%st(2)
	fxch	%st(3)
	fxch	%st(2)
	fxch	%st(1)
.LBB8_149:                              # %thread-pre-split89
	flds	.LCPI8_8(%rip)
	fucompi	%st(2)
	jbe	.LBB8_227
# BB#150:
	fxch	%st(3)
	fstpt	156(%rsp)               # 10-byte Folded Spill
	fxch	%st(1)
	fstpt	192(%rsp)               # 10-byte Folded Spill
	fld	%st(1)
	fstpt	(%rsp)
	fstpt	168(%rsp)               # 10-byte Folded Spill
	fstpt	180(%rsp)               # 10-byte Folded Spill
	callq	floorl
	fldt	180(%rsp)               # 10-byte Folded Reload
	fldt	168(%rsp)               # 10-byte Folded Reload
	fxch	%st(2)
	fucompi	%st(1)
	jne	.LBB8_167
	jp	.LBB8_167
# BB#151:
	fld	%st(1)
	fstpt	(%rsp)
	fxch	%st(1)
	fstpt	168(%rsp)               # 10-byte Folded Spill
	fstpt	180(%rsp)               # 10-byte Folded Spill
	callq	floorl
	fldt	180(%rsp)               # 10-byte Folded Reload
	fldt	168(%rsp)               # 10-byte Folded Reload
	fxch	%st(2)
	fucompi	%st(2)
	jne	.LBB8_167
	jp	.LBB8_167
# BB#152:
	fldl	.LCPI8_10(%rip)
	fucompi	%st(1)
	jbe	.LBB8_167
# BB#153:
	fld1
	fchs
	fld	%st(0)
	fstpt	120(%rsp)               # 10-byte Folded Spill
	fadd	%st(1)
	fld	%st(0)
	fstpt	144(%rsp)               # 10-byte Folded Spill
	fxch	%st(1)
	fstpt	180(%rsp)               # 10-byte Folded Spill
	fadd	%st(1)
	fld	%st(0)
	fstpt	132(%rsp)               # 10-byte Folded Spill
	fxch	%st(1)
	fstpt	168(%rsp)               # 10-byte Folded Spill
	fldt	156(%rsp)               # 10-byte Folded Reload
	fstpt	(%rsp)
	fstpt	16(%rsp)
	callq	powl
	fldt	132(%rsp)               # 10-byte Folded Reload
	fxch	%st(1)
	fstpt	108(%rsp)               # 10-byte Folded Spill
	fldt	120(%rsp)               # 10-byte Folded Reload
	fadd	%st(1)
	fucomi	%st(0)
	fld	%st(0)
	fabs
	jp	.LBB8_249
# BB#154:
	flds	.LCPI8_11(%rip)
	fxch	%st(1)
	fucompi	%st(1)
	fstp	%st(0)
	fldz
	jae	.LBB8_249
# BB#155:
	fstp	%st(0)
	fxch	%st(1)
	fstpt	132(%rsp)               # 10-byte Folded Spill
	fldz
	fxch	%st(1)
	fucomi	%st(1)
	fstp	%st(1)
	jae	.LBB8_156
# BB#157:
	fld	%st(0)
	fstpt	(%rsp)
	fstpt	120(%rsp)               # 10-byte Folded Spill
	callq	ceill
	jmp	.LBB8_158
.LBB8_79:
	fldl	.LCPI8_1(%rip)
	fucomi	%st(1)
	fcmovnbe	%st(1), %st(0)
	fxch	%st(2)
	fucomi	%st(2)
	fstp	%st(2)
	jae	.LBB8_81
# BB#80:
	fld	%st(1)
	fstpt	16(%rsp)
	fld	%st(3)
	fstpt	(%rsp)
	fxch	%st(2)
	fstpt	192(%rsp)               # 10-byte Folded Spill
	fxch	%st(1)
	fstpt	168(%rsp)               # 10-byte Folded Spill
	fxch	%st(1)
	fstpt	180(%rsp)               # 10-byte Folded Spill
	fstpt	156(%rsp)               # 10-byte Folded Spill
	callq	powl
	fldt	180(%rsp)               # 10-byte Folded Reload
	fldt	168(%rsp)               # 10-byte Folded Reload
	fldt	192(%rsp)               # 10-byte Folded Reload
	fldl	.LCPI8_2(%rip)
	fucompi	%st(4)
	fstp	%st(3)
	fldt	156(%rsp)               # 10-byte Folded Reload
	fxch	%st(2)
	fxch	%st(3)
	fxch	%st(2)
	fxch	%st(1)
	jae	.LBB8_81
# BB#87:
	fld	%st(0)
	fstpt	384(%rsp)
	fld	%st(1)
	fstpt	368(%rsp)
	fld	%st(2)
	fstpt	352(%rsp)
	movb	%bpl, %r13b
	xorb	$1, %r13b
	fldl	.LCPI8_3(%rip)
	fxch	%st(4)
	fucomi	%st(4)
	fstp	%st(4)
	jae	.LBB8_88
# BB#95:
	fxch	%st(3)
	fstpt	180(%rsp)               # 10-byte Folded Spill
	fstpt	156(%rsp)               # 10-byte Folded Spill
	fld1
	testb	%r15b, %r15b
	fldz
	fldz
	jne	.LBB8_98
# BB#96:
	fstp	%st(0)
	fstp	%st(1)
	fldt	156(%rsp)               # 10-byte Folded Reload
	fadd	%st(3)
	fstpt	144(%rsp)               # 10-byte Folded Spill
	fld1
	movl	$20, %eax
	fld	%st(0)
	fxch	%st(2)
	fxch	%st(1)
.LBB8_97:                               # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
                                        # kill:
	fldt	144(%rsp)               # 10-byte Folded Reload
	fadd	%st(2)
	fld	%st(5)
	fadd	%st(3)
	fdivrp	%st(1)
	fmulp	%st(3)
	fadd	%st(0), %st(1)
	decl	%eax
	jne	.LBB8_97
.LBB8_98:                               # %_ZN5boost4math6detail22rising_factorial_ratioIeEET_S3_S3_i.exit
	fstp	%st(0)
	fstp	%st(0)
	fstpt	144(%rsp)               # 10-byte Folded Spill
	fldt	180(%rsp)               # 10-byte Folded Reload
	fld	%st(0)
	fstpt	48(%rsp)
	fstpt	180(%rsp)               # 10-byte Folded Spill
	fld	%st(0)
	fstpt	32(%rsp)
	fstpt	192(%rsp)               # 10-byte Folded Spill
	fldt	156(%rsp)               # 10-byte Folded Reload
	fstpt	16(%rsp)
	fld	%st(0)
	fstpt	(%rsp)
	fstpt	168(%rsp)               # 10-byte Folded Spill
	movzbl	%r15b, %r12d
	leaq	448(%rsp), %rdi
	movl	%r12d, %esi
	movq	%r14, %rdx
	callq	_ZN5boost4math6detail17ibeta_power_termsIeNS0_7lanczos12lanczos17m64ENS0_8policies6policyINS5_13promote_floatILb0EEENS5_14promote_doubleILb0EEENS5_14default_policyESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EEEET_SD_SD_SD_SD_RKT0_bRKT1_
	testq	%rbx, %rbx
	je	.LBB8_100
# BB#99:
	fld	%st(0)
	fstpt	(%rbx)
	fldz
	fxch	%st(1)
	fucomi	%st(1)
	fstp	%st(1)
	jb	.LBB8_248
.LBB8_100:
	fldt	168(%rsp)               # 10-byte Folded Reload
	fdivr	%st(0), %st(1)
	fldz
	fxch	%st(2)
	fucomi	%st(2)
	jne	.LBB8_102
	jp	.LBB8_102
.LBB8_101:
	fstp	%st(2)
	fstp	%st(0)
	jmp	.LBB8_105
.LBB8_227:
	fld	%st(2)
	fstpt	48(%rsp)
	fxch	%st(2)
	fstpt	192(%rsp)               # 10-byte Folded Spill
	fld	%st(2)
	fstpt	32(%rsp)
	fxch	%st(2)
	fstpt	156(%rsp)               # 10-byte Folded Spill
	fld	%st(1)
	fstpt	16(%rsp)
	fxch	%st(1)
	fstpt	168(%rsp)               # 10-byte Folded Spill
	fld	%st(0)
	fstpt	(%rsp)
	fstpt	180(%rsp)               # 10-byte Folded Spill
	movzbl	%r15b, %esi
	leaq	424(%rsp), %rdi
	movq	%r14, %rdx
	callq	_ZN5boost4math6detail17ibeta_power_termsIeNS0_7lanczos12lanczos17m64ENS0_8policies6policyINS5_13promote_floatILb0EEENS5_14promote_doubleILb0EEENS5_14default_policyESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EEEET_SD_SD_SD_SD_RKT0_bRKT1_
	testq	%rbx, %rbx
	fldz
	je	.LBB8_229
# BB#228:
	fld	%st(1)
	fstpt	(%rbx)
	fxch	%st(1)
	fucomi	%st(1)
	fxch	%st(1)
	jb	.LBB8_253
.LBB8_229:
	fxch	%st(1)
	fucomi	%st(1)
	fstp	%st(1)
	jne	.LBB8_230
	jnp	.LBB8_232
.LBB8_230:
	fldt	180(%rsp)               # 10-byte Folded Reload
	fstpt	448(%rsp)
	fldt	168(%rsp)               # 10-byte Folded Reload
	fstpt	464(%rsp)
	fldt	156(%rsp)               # 10-byte Folded Reload
	fstpt	480(%rsp)
	fldt	192(%rsp)               # 10-byte Folded Reload
	fstpt	496(%rsp)
	movl	$0, 512(%rsp)
	flds	.LCPI8_9(%rip)
	fstpt	400(%rsp)
	movq	$-1, 560(%rsp)
	leaq	448(%rsp), %rdi
	leaq	400(%rsp), %rsi
.LBB8_231:                              # %_ZN5boost4math6detail15ibeta_fraction2IeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_SB_RKT0_bPSB_.exit18
	leaq	560(%rsp), %rdx
	fstpt	156(%rsp)               # 10-byte Folded Spill
	callq	_ZN5boost4math5tools20continued_fraction_bINS0_6detail17ibeta_fraction2_tIeEEeEENS1_6detail15fraction_traitsIT_E11result_typeERS8_RKT0_Rm
	fldt	156(%rsp)               # 10-byte Folded Reload
	fdivp	%st(1)
	jmp	.LBB8_232
.LBB8_167:
	fldt	156(%rsp)               # 10-byte Folded Reload
	fld	%st(2)
	fmul	%st(1)
	fldl	.LCPI8_6(%rip)
	fucompi	%st(1)
	fstp	%st(0)
	fldt	192(%rsp)               # 10-byte Folded Reload
	jae	.LBB8_168
# BB#175:
	flds	.LCPI8_7(%rip)
	fxch	%st(3)
	fucomi	%st(3)
	fstp	%st(3)
	jbe	.LBB8_197
# BB#176:
	fxch	%st(1)
	fstpt	156(%rsp)               # 10-byte Folded Spill
	fxch	%st(1)
	fstpt	180(%rsp)               # 10-byte Folded Spill
	fstpt	192(%rsp)               # 10-byte Folded Spill
	fld	%st(0)
	fstpt	(%rsp)
	fstpt	168(%rsp)               # 10-byte Folded Spill
	callq	floorl
	fucomi	%st(0)
	fld	%st(0)
	fabs
	jp	.LBB8_178
# BB#177:
	flds	.LCPI8_11(%rip)
	fxch	%st(1)
	fucompi	%st(1)
	fstp	%st(0)
	fldz
	jae	.LBB8_178
# BB#180:
	fstp	%st(0)
	fldz
	fxch	%st(1)
	fucomi	%st(1)
	fstp	%st(1)
	jae	.LBB8_181
# BB#182:
	fld	%st(0)
	fstpt	(%rsp)
	fstpt	144(%rsp)               # 10-byte Folded Spill
	callq	ceill
	jmp	.LBB8_183
.LBB8_81:
	testb	%bpl, %bpl
	je	.LBB8_82
# BB#83:
	testb	%r15b, %r15b
	je	.LBB8_85
# BB#84:
	fld1
	jmp	.LBB8_86
.LBB8_113:
	testb	%bpl, %bpl
	je	.LBB8_114
# BB#115:
	testb	%r15b, %r15b
	jne	.LBB8_117
# BB#116:
	fstp	%st(0)
	fstp	%st(3)
	fxch	%st(2)
	fstpt	16(%rsp)
	fxch	%st(1)
	fstpt	(%rsp)
	fstpt	192(%rsp)               # 10-byte Folded Spill
	callq	_ZN5boost4math4betaIeeNS0_8policies6policyINS2_13promote_floatILb0EEENS2_14promote_doubleILb0EEENS2_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEENS0_5tools12promote_argsIT_T0_T1_fffE4typeESC_SD_SE_
	fldt	192(%rsp)               # 10-byte Folded Reload
	fldt	384(%rsp)
	fldt	368(%rsp)
	fldt	352(%rsp)
	fxch	%st(4)
.LBB8_117:
	fld	%st(3)
	fstpt	192(%rsp)               # 10-byte Folded Spill
	fchs
	fxch	%st(3)
	fstpt	64(%rsp)
	fxch	%st(2)
	fstpt	48(%rsp)
	fxch	%st(2)
	fstpt	32(%rsp)
	fstpt	16(%rsp)
	fstpt	(%rsp)
	movzbl	%r15b, %esi
	leaq	304(%rsp), %rdi
	jmp	.LBB8_174
.LBB8_70:
	fstp	%st(0)
	fxch	%st(1)
	fstpt	16(%rsp)
	fstpt	(%rsp)
	callq	powl
	fld1
	fchs
	faddp	%st(1)
	fchs
	jmp	.LBB8_72
.LBB8_71:
	fstp	%st(0)
	fxch	%st(1)
	fstpt	16(%rsp)
	fstpt	(%rsp)
	callq	powl
.LBB8_72:
	testb	%r15b, %r15b
	jne	.LBB8_244
# BB#73:
	fldt	384(%rsp)
	fdivrp	%st(1)
	jmp	.LBB8_244
.LBB8_168:
	testb	%bpl, %bpl
	je	.LBB8_169
# BB#171:
	fld1
	testb	%r15b, %r15b
	jne	.LBB8_173
# BB#172:
	fstp	%st(0)
	fstp	%st(1)
	fxch	%st(2)
	fstpt	16(%rsp)
	fstpt	(%rsp)
	fstpt	192(%rsp)               # 10-byte Folded Spill
	callq	_ZN5boost4math4betaIeeNS0_8policies6policyINS2_13promote_floatILb0EEENS2_14promote_doubleILb0EEENS2_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEENS0_5tools12promote_argsIT_T0_T1_fffE4typeESC_SD_SE_
	fldt	192(%rsp)               # 10-byte Folded Reload
	fldt	384(%rsp)
	fldt	368(%rsp)
	fldt	352(%rsp)
	fxch	%st(1)
	fxch	%st(4)
	fxch	%st(2)
	fxch	%st(3)
	fxch	%st(1)
	fxch	%st(2)
.LBB8_173:
	fld	%st(1)
	fstpt	192(%rsp)               # 10-byte Folded Spill
	fchs
	fxch	%st(1)
	fstpt	64(%rsp)
	fstpt	48(%rsp)
	fstpt	32(%rsp)
	fxch	%st(1)
	fstpt	16(%rsp)
	fstpt	(%rsp)
	movzbl	%r15b, %esi
	leaq	272(%rsp), %rdi
	jmp	.LBB8_174
.LBB8_82:
	fld	%st(2)
	fstpt	64(%rsp)
	fxch	%st(2)
	fstpt	192(%rsp)               # 10-byte Folded Spill
	fldz
	fstpt	48(%rsp)
	fxch	%st(2)
	fstpt	32(%rsp)
	fstpt	16(%rsp)
	fstpt	(%rsp)
	movzbl	%r15b, %esi
	leaq	344(%rsp), %rdi
	jmp	.LBB8_170
.LBB8_85:
	fstp	%st(3)
	fxch	%st(2)
	fstpt	16(%rsp)
	fxch	%st(1)
	fstpt	(%rsp)
	fstpt	192(%rsp)               # 10-byte Folded Spill
	callq	_ZN5boost4math4betaIeeNS0_8policies6policyINS2_13promote_floatILb0EEENS2_14promote_doubleILb0EEENS2_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEENS0_5tools12promote_argsIT_T0_T1_fffE4typeESC_SD_SE_
	fldt	192(%rsp)               # 10-byte Folded Reload
	fldt	384(%rsp)
	fldt	368(%rsp)
	fldt	352(%rsp)
	fxch	%st(4)
.LBB8_86:
	fld	%st(3)
	fstpt	192(%rsp)               # 10-byte Folded Spill
	fchs
	fxch	%st(3)
	fstpt	64(%rsp)
	fxch	%st(2)
	fstpt	48(%rsp)
	fxch	%st(2)
	fstpt	32(%rsp)
	fstpt	16(%rsp)
	fstpt	(%rsp)
	movzbl	%r15b, %esi
	leaq	336(%rsp), %rdi
.LBB8_174:                              # %_ZN5boost4math6detail15ibeta_fraction2IeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_SB_RKT0_bPSB_.exit18
	movq	%rbx, %rdx
	movq	%r14, %rcx
	callq	_ZN5boost4math6detail12ibeta_seriesIeNS0_7lanczos12lanczos17m64ENS0_8policies6policyINS5_13promote_floatILb0EEENS5_14promote_doubleILb0EEENS5_14default_policyESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EEEET_SD_SD_SD_SD_RKT0_bPSD_SD_RKT1_
.LBB8_222:
	fchs
	xorl	%ebp, %ebp
	jmp	.LBB8_232
.LBB8_114:
	fstp	%st(0)
	fld	%st(2)
	fstpt	64(%rsp)
	fxch	%st(2)
	fstpt	192(%rsp)               # 10-byte Folded Spill
	fldz
	fstpt	48(%rsp)
	fxch	%st(2)
	fstpt	32(%rsp)
	fstpt	16(%rsp)
	fstpt	(%rsp)
	movzbl	%r15b, %esi
	leaq	312(%rsp), %rdi
	jmp	.LBB8_170
.LBB8_197:
	testb	%r15b, %r15b
	je	.LBB8_223
# BB#198:
	fxch	%st(1)
	fstpt	156(%rsp)               # 10-byte Folded Spill
	fxch	%st(1)
	fstpt	180(%rsp)               # 10-byte Folded Spill
	fstpt	192(%rsp)               # 10-byte Folded Spill
	fld	%st(0)
	fstpt	(%rsp)
	fstpt	168(%rsp)               # 10-byte Folded Spill
	callq	floorl
	fucomi	%st(0)
	fld	%st(0)
	fabs
	jp	.LBB8_200
# BB#199:
	flds	.LCPI8_11(%rip)
	fxch	%st(1)
	fucompi	%st(1)
	fstp	%st(0)
	fldz
	jae	.LBB8_200
# BB#201:
	fstp	%st(0)
	fldz
	fxch	%st(1)
	fucomi	%st(1)
	fstp	%st(1)
	jae	.LBB8_202
# BB#203:
	fld	%st(0)
	fstpt	(%rsp)
	fstpt	144(%rsp)               # 10-byte Folded Spill
	callq	ceill
	jmp	.LBB8_204
.LBB8_119:
	testb	%bpl, %bpl
	je	.LBB8_121
# BB#120:
	fld	%st(3)
	fstpt	64(%rsp)
	fldz
	fstpt	48(%rsp)
	fxch	%st(2)
	fstpt	32(%rsp)
	fstpt	16(%rsp)
	fstpt	(%rsp)
	movzbl	%r15b, %esi
	leaq	296(%rsp), %rdi
	jmp	.LBB8_90
.LBB8_169:
	fld	%st(0)
	fstpt	64(%rsp)
	fstpt	192(%rsp)               # 10-byte Folded Spill
	fldz
	fstpt	48(%rsp)
	fstpt	32(%rsp)
	fxch	%st(1)
	fstpt	16(%rsp)
	fstpt	(%rsp)
	movzbl	%r15b, %esi
	leaq	280(%rsp), %rdi
.LBB8_170:                              # %_ZN5boost4math6detail15ibeta_fraction2IeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_SB_RKT0_bPSB_.exit18
	movq	%rbx, %rdx
	movq	%r14, %rcx
	callq	_ZN5boost4math6detail12ibeta_seriesIeNS0_7lanczos12lanczos17m64ENS0_8policies6policyINS5_13promote_floatILb0EEENS5_14promote_doubleILb0EEENS5_14default_policyESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EEEET_SD_SD_SD_SD_RKT0_bPSD_SD_RKT1_
	jmp	.LBB8_232
.LBB8_88:
	testb	%bpl, %bpl
	je	.LBB8_91
# BB#89:
	fld	%st(3)
	fstpt	64(%rsp)
	fldz
	fstpt	48(%rsp)
	fxch	%st(2)
	fstpt	32(%rsp)
	fstpt	16(%rsp)
	fstpt	(%rsp)
	movzbl	%r15b, %esi
	leaq	328(%rsp), %rdi
.LBB8_90:                               # %_ZN5boost4math6detail15ibeta_fraction2IeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_SB_RKT0_bPSB_.exit18
	movq	%rbx, %rdx
	movq	%r14, %rcx
	fstpt	180(%rsp)               # 10-byte Folded Spill
	callq	_ZN5boost4math6detail12ibeta_seriesIeNS0_7lanczos12lanczos17m64ENS0_8policies6policyINS5_13promote_floatILb0EEENS5_14promote_doubleILb0EEENS5_14default_policyESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EEEET_SD_SD_SD_SD_RKT0_bPSD_SD_RKT1_
	jmp	.LBB8_128
.LBB8_223:
	fld	%st(0)
	fstpt	48(%rsp)
	fstpt	192(%rsp)               # 10-byte Folded Spill
	fld	%st(0)
	fstpt	32(%rsp)
	fstpt	156(%rsp)               # 10-byte Folded Spill
	fld	%st(1)
	fstpt	16(%rsp)
	fxch	%st(1)
	fstpt	168(%rsp)               # 10-byte Folded Spill
	fld	%st(0)
	fstpt	(%rsp)
	fstpt	180(%rsp)               # 10-byte Folded Spill
	leaq	528(%rsp), %rdi
	xorl	%esi, %esi
	movq	%r14, %rdx
	callq	_ZN5boost4math6detail17ibeta_power_termsIeNS0_7lanczos12lanczos17m64ENS0_8policies6policyINS5_13promote_floatILb0EEENS5_14promote_doubleILb0EEENS5_14default_policyESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EEEET_SD_SD_SD_SD_RKT0_bRKT1_
	testq	%rbx, %rbx
	fldz
	je	.LBB8_225
# BB#224:
	fld	%st(1)
	fstpt	(%rbx)
	fxch	%st(1)
	fucomi	%st(1)
	fxch	%st(1)
	jb	.LBB8_253
.LBB8_225:
	fxch	%st(1)
	fucomi	%st(1)
	fstp	%st(1)
	jne	.LBB8_226
	jnp	.LBB8_232
.LBB8_226:
	fldt	180(%rsp)               # 10-byte Folded Reload
	fstpt	448(%rsp)
	fldt	168(%rsp)               # 10-byte Folded Reload
	fstpt	464(%rsp)
	fldt	156(%rsp)               # 10-byte Folded Reload
	fstpt	480(%rsp)
	fldt	192(%rsp)               # 10-byte Folded Reload
	fstpt	496(%rsp)
	movl	$0, 512(%rsp)
	flds	.LCPI8_9(%rip)
	fstpt	432(%rsp)
	movq	$-1, 560(%rsp)
	leaq	448(%rsp), %rdi
	leaq	432(%rsp), %rsi
	jmp	.LBB8_231
.LBB8_125:
	testb	%bpl, %bpl
	je	.LBB8_129
# BB#126:
	fld1
	fstpt	80(%rsp)
	fldz
	fstpt	64(%rsp)
	fld	%st(3)
	fstpt	48(%rsp)
	fxch	%st(2)
	fstpt	32(%rsp)
	fstpt	16(%rsp)
	fstpt	(%rsp)
	movzbl	%r15b, %esi
	movq	%r14, %rdi
	jmp	.LBB8_127
.LBB8_181:
	fld	%st(0)
	fstpt	(%rsp)
	fstpt	144(%rsp)               # 10-byte Folded Spill
	callq	floorl
.LBB8_183:                              # %_ZN5boost4math5truncIeNS0_8policies6policyINS2_13promote_floatILb0EEENS2_14promote_doubleILb0EEENS2_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEENS0_5tools12promote_argsIT_fffffE4typeERKSC_RKT0_.exit.i67
	fldl	.LCPI8_12(%rip)
	fxch	%st(1)
	fucomi	%st(1)
	fstp	%st(1)
	fldt	192(%rsp)               # 10-byte Folded Reload
	fldt	168(%rsp)               # 10-byte Folded Reload
	ja	.LBB8_251
# BB#184:                               # %_ZN5boost4math5truncIeNS0_8policies6policyINS2_13promote_floatILb0EEENS2_14promote_doubleILb0EEENS2_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEENS0_5tools12promote_argsIT_fffffE4typeERKSC_RKT0_.exit.i67
	flds	.LCPI8_13(%rip)
	fucompi	%st(3)
	ja	.LBB8_251
# BB#185:                               # %_ZN5boost4math6itruncIeNS0_8policies6policyINS2_13promote_floatILb0EEENS2_14promote_doubleILb0EEENS2_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEEiRKT_RKT0_.exit68
	fxch	%st(1)
	fstpt	192(%rsp)               # 10-byte Folded Spill
	fxch	%st(1)
	fisttpl	240(%rsp)
	movl	240(%rsp), %r13d
	movl	%r13d, 244(%rsp)
	fildl	244(%rsp)
	fld	%st(0)
	fstpt	120(%rsp)               # 10-byte Folded Spill
	fucompi	%st(1)
	setnp	%al
	sete	%cl
	andb	%al, %cl
	movzbl	%cl, %eax
	movl	%r13d, %r12d
	subl	%eax, %r12d
	movl	%r12d, 248(%rsp)
	fld	%st(0)
	fisubl	248(%rsp)
	fxch	%st(1)
	fstpt	168(%rsp)               # 10-byte Folded Spill
	fld1
	testb	%r15b, %r15b
	fldz
	je	.LBB8_187
# BB#186:
	fstp	%st(0)
	fldz
	fldz
	fldz
	jmp	.LBB8_190
.LBB8_187:
	fldt	180(%rsp)               # 10-byte Folded Reload
	fadd	%st(3)
	testl	%r12d, %r12d
	fldz
	fxch	%st(1)
	fxch	%st(2)
	jle	.LBB8_190
# BB#188:                               # %.lr.ph.i72.preheader
	fstp	%st(1)
	fstp	%st(2)
	fldt	120(%rsp)               # 10-byte Folded Reload
	fldt	168(%rsp)               # 10-byte Folded Reload
	fxch	%st(1)
	fucompi	%st(1)
	fstp	%st(0)
	setnp	%al
	sete	%cl
	xorl	%edx, %edx
	testb	%al, %cl
	movl	$-1, %eax
	cmovel	%edx, %eax
	addl	%r13d, %eax
	fld1
	fld	%st(0)
	fxch	%st(3)
.LBB8_189:                              # %.lr.ph.i72
                                        # =>This Inner Loop Header: Depth=1
                                        # kill:
	fld	%st(2)
	fadd	%st(1)
	fld	%st(5)
	fadd	%st(2)
	fdivrp	%st(1)
	fmulp	%st(4)
	fadd	%st(1)
	decl	%eax
	jne	.LBB8_189
.LBB8_190:                              # %_ZN5boost4math6detail22rising_factorial_ratioIeEET_S3_S3_i.exit74
	fstp	%st(2)
	fstp	%st(0)
	fstp	%st(0)
	fstpt	144(%rsp)               # 10-byte Folded Spill
	fldt	168(%rsp)               # 10-byte Folded Reload
	fstpt	168(%rsp)               # 10-byte Folded Spill
	fldt	156(%rsp)               # 10-byte Folded Reload
	fstpt	48(%rsp)
	fldt	192(%rsp)               # 10-byte Folded Reload
	fld	%st(0)
	fstpt	32(%rsp)
	fstpt	192(%rsp)               # 10-byte Folded Spill
	fldt	180(%rsp)               # 10-byte Folded Reload
	fld	%st(0)
	fstpt	180(%rsp)               # 10-byte Folded Spill
	fstpt	16(%rsp)
	fld	%st(0)
	fstpt	(%rsp)
	movzbl	%r15b, %esi
	movl	%esi, 132(%rsp)         # 4-byte Spill
	leaq	448(%rsp), %rdi
	movq	%r14, %rdx
	fstpt	156(%rsp)               # 10-byte Folded Spill
	callq	_ZN5boost4math6detail17ibeta_power_termsIeNS0_7lanczos12lanczos17m64ENS0_8policies6policyINS5_13promote_floatILb0EEENS5_14promote_doubleILb0EEENS5_14default_policyESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EEEET_SD_SD_SD_SD_RKT0_bRKT1_
	fldt	156(%rsp)               # 10-byte Folded Reload
	fdivr	%st(0), %st(1)
	fldz
	fxch	%st(2)
	fucomi	%st(2)
	jne	.LBB8_192
	jp	.LBB8_192
# BB#191:
	fstp	%st(2)
	jmp	.LBB8_196
.LBB8_121:
	fld1
	testb	%r15b, %r15b
	jne	.LBB8_123
# BB#122:
	fstp	%st(0)
	fstp	%st(2)
	fstpt	16(%rsp)
	fstpt	(%rsp)
	fstpt	180(%rsp)               # 10-byte Folded Spill
	callq	_ZN5boost4math4betaIeeNS0_8policies6policyINS2_13promote_floatILb0EEENS2_14promote_doubleILb0EEENS2_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEENS0_5tools12promote_argsIT_T0_T1_fffE4typeESC_SD_SE_
	fldt	180(%rsp)               # 10-byte Folded Reload
	fldt	384(%rsp)
	fldt	368(%rsp)
	fldt	352(%rsp)
	fxch	%st(3)
	fxch	%st(4)
	fxch	%st(1)
	fxch	%st(2)
	fxch	%st(1)
.LBB8_123:
	fld	%st(4)
	fstpt	180(%rsp)               # 10-byte Folded Spill
	fchs
	fxch	%st(4)
	fstpt	64(%rsp)
	fxch	%st(3)
	fstpt	48(%rsp)
	fxch	%st(1)
	fstpt	32(%rsp)
	fstpt	16(%rsp)
	fstpt	(%rsp)
	movzbl	%r15b, %esi
	leaq	288(%rsp), %rdi
	jmp	.LBB8_94
.LBB8_156:
	fld	%st(0)
	fstpt	(%rsp)
	fstpt	120(%rsp)               # 10-byte Folded Spill
	callq	floorl
.LBB8_158:                              # %_ZN5boost4math5truncIeNS0_8policies6policyINS2_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEENS0_5tools12promote_argsIT_fffffE4typeERKS8_RKT0_.exit.i.i
	fldl	.LCPI8_12(%rip)
	fxch	%st(1)
	fucomi	%st(1)
	fstp	%st(1)
	fldt	192(%rsp)               # 10-byte Folded Reload
	fldt	156(%rsp)               # 10-byte Folded Reload
	fldt	144(%rsp)               # 10-byte Folded Reload
	ja	.LBB8_250
# BB#159:                               # %_ZN5boost4math5truncIeNS0_8policies6policyINS2_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEENS0_5tools12promote_argsIT_fffffE4typeERKS8_RKT0_.exit.i.i
	flds	.LCPI8_13(%rip)
	fucompi	%st(4)
	ja	.LBB8_250
# BB#160:                               # %_ZN5boost4math6itruncIeEEiRKT_.exit
	fxch	%st(3)
	fisttpl	236(%rsp)
	movl	236(%rsp), %eax
	movq	%rax, 224(%rsp)
	fildll	224(%rsp)
	fucomi	%st(3)
	fldt	168(%rsp)               # 10-byte Folded Reload
	fstpt	168(%rsp)               # 10-byte Folded Spill
	fldt	108(%rsp)               # 10-byte Folded Reload
	jbe	.LBB8_161
# BB#162:                               # %.lr.ph.i63.preheader
	decl	%eax
	fld	%st(0)
	fxch	%st(5)
	fstpt	144(%rsp)               # 10-byte Folded Spill
	fldt	132(%rsp)               # 10-byte Folded Reload
.LBB8_163:                              # %.lr.ph.i63
                                        # =>This Inner Loop Header: Depth=1
	leal	2(%rax), %ecx
	movq	%rcx, 208(%rsp)
	fildll	208(%rsp)
	fmul	%st(5)
	fxch	%st(3)
	fsubr	%st(1)
	fmul	%st(4)
	fdivrp	%st(3)
	fxch	%st(1)
	fmulp	%st(2)
	fxch	%st(4)
	fadd	%st(1)
	movl	%eax, %ecx
	movq	%rcx, 216(%rsp)
	fildll	216(%rsp)
	decl	%eax
	fldt	144(%rsp)               # 10-byte Folded Reload
	fxch	%st(1)
	fucomi	%st(1)
	fstp	%st(1)
	fxch	%st(1)
	fxch	%st(5)
	fxch	%st(1)
	fxch	%st(2)
	fxch	%st(1)
	ja	.LBB8_163
	jmp	.LBB8_164
.LBB8_192:                              # %.preheader.i75
	fstpt	108(%rsp)               # 10-byte Folded Spill
	fldt	180(%rsp)               # 10-byte Folded Reload
	decl	%r12d
	testl	%r12d, %r12d
	fld1
	fldt	192(%rsp)               # 10-byte Folded Reload
	fxch	%st(3)
	fstpt	156(%rsp)               # 10-byte Folded Spill
	fldz
	jle	.LBB8_195
# BB#193:                               # %.lr.ph.i76
	fstp	%st(1)
	fstp	%st(0)
	fldt	168(%rsp)               # 10-byte Folded Reload
	fldt	120(%rsp)               # 10-byte Folded Reload
	fucompi	%st(1)
	fstp	%st(0)
	fldt	156(%rsp)               # 10-byte Folded Reload
	faddp	%st(1)
	fstpt	180(%rsp)               # 10-byte Folded Spill
	setnp	%al
	sete	%cl
	xorl	%edx, %edx
	testb	%al, %cl
	movl	$-1, %eax
	cmovel	%edx, %eax
	leal	-1(%r13,%rax), %eax
	fld1
	fld	%st(0)
	fld	%st(1)
	fxch	%st(1)
.LBB8_194:                              # =>This Inner Loop Header: Depth=1
	fldt	180(%rsp)               # 10-byte Folded Reload
	fadd	%st(5)
	fmul	%st(4)
	fldt	156(%rsp)               # 10-byte Folded Reload
	fadd	%st(6)
	fadd	%st(4)
	fdivrp	%st(1)
	fmulp	%st(1)
	fadd	%st(0), %st(1)
	fxch	%st(4)
	fadd	%st(2)
	decl	%eax
	fxch	%st(4)
	jne	.LBB8_194
.LBB8_195:                              # %._crit_edge.i82
	fstp	%st(4)
	fstp	%st(1)
	fstp	%st(2)
	fstpt	192(%rsp)               # 10-byte Folded Spill
	fldt	108(%rsp)               # 10-byte Folded Reload
	fmulp	%st(1)
	fldt	156(%rsp)               # 10-byte Folded Reload
.LBB8_196:                              # %_ZN5boost4math6detail12ibeta_a_stepIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_SB_iRKT0_bPSB_.exit84
	fldt	384(%rsp)
	fldt	352(%rsp)
	fld1
	fstpt	80(%rsp)
	fxch	%st(3)
	fstpt	64(%rsp)
	fldt	192(%rsp)               # 10-byte Folded Reload
	fstpt	48(%rsp)
	fxch	%st(2)
	fstpt	32(%rsp)
	fstpt	16(%rsp)
	fstpt	(%rsp)
	movq	%r14, %rdi
	movl	132(%rsp), %esi         # 4-byte Reload
	callq	_ZN5boost4math6detail27beta_small_b_large_a_seriesIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_SB_SB_SB_RKT0_b
	fldt	144(%rsp)               # 10-byte Folded Reload
	fdivrp	%st(1)
	jmp	.LBB8_232
.LBB8_161:
	fstp	%st(1)
	fstp	%st(1)
	fstp	%st(2)
	fldz
	fldz
	fldz
	fldz
	fxch	%st(1)
	fxch	%st(3)
	fxch	%st(2)
	fxch	%st(1)
.LBB8_164:                              # %_ZN5boost4math6detail13binomial_ccdfIeEET_S3_S3_S3_S3_.exit
	fstp	%st(2)
	fstp	%st(0)
	fstp	%st(1)
	fstp	%st(0)
	fxch	%st(1)
	fstpt	156(%rsp)               # 10-byte Folded Spill
	fstpt	192(%rsp)               # 10-byte Folded Spill
	testb	%r15b, %r15b
	je	.LBB8_166
# BB#165:
	fldt	156(%rsp)               # 10-byte Folded Reload
	jmp	.LBB8_232
.LBB8_166:
	fldt	168(%rsp)               # 10-byte Folded Reload
	fstpt	16(%rsp)
	fldt	180(%rsp)               # 10-byte Folded Reload
	fstpt	(%rsp)
	callq	_ZN5boost4math4betaIeeNS0_8policies6policyINS2_13promote_floatILb0EEENS2_14promote_doubleILb0EEENS2_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEENS0_5tools12promote_argsIT_T0_T1_fffE4typeESC_SD_SE_
	fldt	156(%rsp)               # 10-byte Folded Reload
	fmulp	%st(1)
	jmp	.LBB8_232
.LBB8_202:
	fld	%st(0)
	fstpt	(%rsp)
	fstpt	144(%rsp)               # 10-byte Folded Spill
	callq	floorl
.LBB8_204:                              # %_ZN5boost4math5truncIeNS0_8policies6policyINS2_13promote_floatILb0EEENS2_14promote_doubleILb0EEENS2_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEENS0_5tools12promote_argsIT_fffffE4typeERKSC_RKT0_.exit.i
	fldl	.LCPI8_12(%rip)
	fxch	%st(1)
	fucomi	%st(1)
	fstp	%st(1)
	fldt	192(%rsp)               # 10-byte Folded Reload
	fldt	168(%rsp)               # 10-byte Folded Reload
	fldt	156(%rsp)               # 10-byte Folded Reload
	ja	.LBB8_252
# BB#205:                               # %_ZN5boost4math5truncIeNS0_8policies6policyINS2_13promote_floatILb0EEENS2_14promote_doubleILb0EEENS2_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEENS0_5tools12promote_argsIT_fffffE4typeERKSC_RKT0_.exit.i
	flds	.LCPI8_13(%rip)
	fucompi	%st(4)
	ja	.LBB8_252
# BB#206:                               # %_ZN5boost4math6itruncIeNS0_8policies6policyINS2_13promote_floatILb0EEENS2_14promote_doubleILb0EEENS2_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEEiRKT_RKT0_.exit
	fxch	%st(3)
	fisttpl	252(%rsp)
	movl	252(%rsp), %r12d
	movl	%r12d, 256(%rsp)
	fisubl	256(%rsp)
	fldz
	fucompi	%st(1)
	jb	.LBB8_208
# BB#207:
	decl	%r12d
	fld1
	faddp	%st(1)
.LBB8_208:
	fldt	180(%rsp)               # 10-byte Folded Reload
	fld	%st(0)
	fstpt	180(%rsp)               # 10-byte Folded Spill
	fld	%st(1)
	fstpt	144(%rsp)               # 10-byte Folded Spill
	fxch	%st(3)
	fstpt	48(%rsp)
	fld	%st(1)
	fstpt	32(%rsp)
	fxch	%st(1)
	fstpt	192(%rsp)               # 10-byte Folded Spill
	fxch	%st(1)
	fstpt	16(%rsp)
	fstpt	(%rsp)
	leaq	448(%rsp), %rdi
	movl	$1, %esi
	movq	%r14, %rdx
	callq	_ZN5boost4math6detail17ibeta_power_termsIeNS0_7lanczos12lanczos17m64ENS0_8policies6policyINS5_13promote_floatILb0EEENS5_14promote_doubleILb0EEENS5_14default_policyESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EEEET_SD_SD_SD_SD_RKT0_bRKT1_
	fldt	144(%rsp)               # 10-byte Folded Reload
	fdivr	%st(0), %st(1)
	fld	%st(1)
	fstpt	156(%rsp)               # 10-byte Folded Spill
	fldz
	fxch	%st(2)
	fucompi	%st(2)
	jne	.LBB8_210
	jp	.LBB8_210
# BB#209:
	fstp	%st(1)
	jmp	.LBB8_214
.LBB8_91:
	fld1
	testb	%r15b, %r15b
	jne	.LBB8_93
# BB#92:
	fstp	%st(0)
	fstp	%st(2)
	fstpt	16(%rsp)
	fstpt	(%rsp)
	fstpt	180(%rsp)               # 10-byte Folded Spill
	callq	_ZN5boost4math4betaIeeNS0_8policies6policyINS2_13promote_floatILb0EEENS2_14promote_doubleILb0EEENS2_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEENS0_5tools12promote_argsIT_T0_T1_fffE4typeESC_SD_SE_
	fldt	180(%rsp)               # 10-byte Folded Reload
	fldt	384(%rsp)
	fldt	368(%rsp)
	fldt	352(%rsp)
	fxch	%st(3)
	fxch	%st(4)
	fxch	%st(1)
	fxch	%st(2)
	fxch	%st(1)
.LBB8_93:
	fld	%st(4)
	fstpt	180(%rsp)               # 10-byte Folded Spill
	fchs
	fxch	%st(4)
	fstpt	64(%rsp)
	fxch	%st(3)
	fstpt	48(%rsp)
	fxch	%st(1)
	fstpt	32(%rsp)
	fstpt	16(%rsp)
	fstpt	(%rsp)
	movzbl	%r15b, %esi
	leaq	320(%rsp), %rdi
.LBB8_94:                               # %_ZN5boost4math6detail15ibeta_fraction2IeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_SB_RKT0_bPSB_.exit18
	movq	%rbx, %rdx
	movq	%r14, %rcx
	callq	_ZN5boost4math6detail12ibeta_seriesIeNS0_7lanczos12lanczos17m64ENS0_8policies6policyINS5_13promote_floatILb0EEENS5_14promote_doubleILb0EEENS5_14default_policyESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EEEET_SD_SD_SD_SD_RKT0_bPSD_SD_RKT1_
	jmp	.LBB8_134
.LBB8_102:                              # %.preheader.i25
	fstpt	132(%rsp)               # 10-byte Folded Spill
	fldt	156(%rsp)               # 10-byte Folded Reload
	fadd	%st(1)
	fstpt	156(%rsp)               # 10-byte Folded Spill
	fld1
	movl	$19, %eax
	fld	%st(0)
	fld	%st(1)
	fldt	192(%rsp)               # 10-byte Folded Reload
	fstpt	192(%rsp)               # 10-byte Folded Spill
.LBB8_103:                              # =>This Inner Loop Header: Depth=1
	fldt	156(%rsp)               # 10-byte Folded Reload
	fadd	%st(5)
	fldt	192(%rsp)               # 10-byte Folded Reload
	fmulp	%st(1)
	fld	%st(4)
	fadd	%st(6)
	fadd	%st(4)
	fdivrp	%st(1)
	fmulp	%st(2)
	fadd	%st(1)
	fxch	%st(4)
	fadd	%st(2)
	decl	%eax
	fxch	%st(4)
	jne	.LBB8_103
.LBB8_104:                              # %._crit_edge.i31
	fstp	%st(4)
	fstp	%st(1)
	fstp	%st(0)
	fstp	%st(0)
	fldt	132(%rsp)               # 10-byte Folded Reload
	fmulp	%st(1)
.LBB8_105:                              # %_ZN5boost4math6detail12ibeta_a_stepIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_SB_iRKT0_bPSB_.exit33
	testb	%bpl, %bpl
	fldt	180(%rsp)               # 10-byte Folded Reload
	je	.LBB8_107
# BB#106:
	fldt	384(%rsp)
	fadds	.LCPI8_4(%rip)
	fldt	368(%rsp)
	fldt	352(%rsp)
	fldt	144(%rsp)               # 10-byte Folded Reload
	fstpt	80(%rsp)
	fxch	%st(4)
	fstpt	64(%rsp)
	fld	%st(2)
	fstpt	48(%rsp)
	fxch	%st(3)
	fstpt	32(%rsp)
	fxch	%st(2)
	fstpt	16(%rsp)
	fxch	%st(1)
	fstpt	(%rsp)
	movq	%r14, %rdi
	movl	%r12d, %esi
.LBB8_127:                              # %_ZN5boost4math6detail15ibeta_fraction2IeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_SB_RKT0_bPSB_.exit18
	fstpt	180(%rsp)               # 10-byte Folded Spill
	callq	_ZN5boost4math6detail27beta_small_b_large_a_seriesIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_SB_SB_SB_RKT0_b
.LBB8_128:                              # %_ZN5boost4math6detail15ibeta_fraction2IeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_SB_RKT0_bPSB_.exit18
	fldt	180(%rsp)               # 10-byte Folded Reload
	fstpt	192(%rsp)               # 10-byte Folded Spill
	movb	%r13b, %bpl
	jmp	.LBB8_232
.LBB8_107:
	fld1
	testb	%r15b, %r15b
	jne	.LBB8_109
# BB#108:
	fstp	%st(0)
	fldt	384(%rsp)
	fldt	368(%rsp)
	fstpt	16(%rsp)
	fstpt	(%rsp)
	fstpt	180(%rsp)               # 10-byte Folded Spill
	fstpt	132(%rsp)               # 10-byte Folded Spill
	callq	_ZN5boost4math4betaIeeNS0_8policies6policyINS2_13promote_floatILb0EEENS2_14promote_doubleILb0EEENS2_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEENS0_5tools12promote_argsIT_T0_T1_fffE4typeESC_SD_SE_
	fldt	132(%rsp)               # 10-byte Folded Reload
	fldt	180(%rsp)               # 10-byte Folded Reload
	fxch	%st(1)
	fxch	%st(2)
.LBB8_109:
	fld	%st(1)
	fstpt	180(%rsp)               # 10-byte Folded Spill
	fsubrp	%st(2)
	fldt	384(%rsp)
	fadds	.LCPI8_4(%rip)
	fldt	368(%rsp)
	fldt	352(%rsp)
	fldt	144(%rsp)               # 10-byte Folded Reload
	fstpt	80(%rsp)
	fxch	%st(4)
	fstpt	64(%rsp)
	fxch	%st(2)
	fstpt	48(%rsp)
	fxch	%st(2)
	fstpt	32(%rsp)
	fstpt	16(%rsp)
	fstpt	(%rsp)
	movq	%r14, %rdi
	movl	%r12d, %esi
	jmp	.LBB8_133
.LBB8_129:
	fld1
	testb	%r15b, %r15b
	je	.LBB8_131
# BB#130:
	fld	%st(0)
	jmp	.LBB8_132
.LBB8_210:                              # %.preheader.i34
	fldt	180(%rsp)               # 10-byte Folded Reload
	decl	%r12d
	testl	%r12d, %r12d
	fld1
	fldt	192(%rsp)               # 10-byte Folded Reload
	fstpt	192(%rsp)               # 10-byte Folded Spill
	fldz
	fldz
	jle	.LBB8_213
# BB#211:                               # %.lr.ph.i35
	fstp	%st(2)
	fstp	%st(0)
	fstp	%st(0)
	fadd	%st(1)
	fstpt	180(%rsp)               # 10-byte Folded Spill
	fld1
	fld	%st(0)
	fld	%st(1)
	fldz
	fxch	%st(3)
	fxch	%st(1)
	fxch	%st(2)
	fxch	%st(1)
.LBB8_212:                              # =>This Inner Loop Header: Depth=1
	fstp	%st(3)
	fldt	180(%rsp)               # 10-byte Folded Reload
	fadd	%st(5)
	fldt	192(%rsp)               # 10-byte Folded Reload
	fmulp	%st(1)
	fld	%st(4)
	fadd	%st(6)
	fadd	%st(4)
	fdivrp	%st(1)
	fmulp	%st(1)
	fadd	%st(0), %st(1)
	fxch	%st(4)
	fadd	%st(2)
	decl	%r12d
	fldz
	fxch	%st(1)
	fxch	%st(5)
	fxch	%st(1)
	fxch	%st(3)
	jne	.LBB8_212
.LBB8_213:                              # %._crit_edge.i40
	fstp	%st(3)
	fstp	%st(0)
	fstp	%st(3)
	fstp	%st(0)
	fldt	156(%rsp)               # 10-byte Folded Reload
	fmulp	%st(2)
	fxch	%st(1)
	fstpt	156(%rsp)               # 10-byte Folded Spill
.LBB8_214:                              # %_ZN5boost4math6detail12ibeta_a_stepIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_SB_iRKT0_bPSB_.exit42
	fldt	192(%rsp)               # 10-byte Folded Reload
	fld	%st(1)
	fstpt	144(%rsp)               # 10-byte Folded Spill
	fld	%st(0)
	fstpt	192(%rsp)               # 10-byte Folded Spill
	fldt	384(%rsp)
	fld	%st(0)
	fstpt	132(%rsp)               # 10-byte Folded Spill
	fldt	352(%rsp)
	fld	%st(0)
	fstpt	180(%rsp)               # 10-byte Folded Spill
	fxch	%st(2)
	fstpt	48(%rsp)
	fxch	%st(1)
	fstpt	32(%rsp)
	fxch	%st(1)
	fstpt	16(%rsp)
	fstpt	(%rsp)
	leaq	448(%rsp), %rdi
	movl	$1, %esi
	movq	%r14, %rdx
	callq	_ZN5boost4math6detail17ibeta_power_termsIeNS0_7lanczos12lanczos17m64ENS0_8policies6policyINS5_13promote_floatILb0EEENS5_14promote_doubleILb0EEENS5_14default_policyESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EEEET_SD_SD_SD_SD_RKT0_bRKT1_
	fldt	132(%rsp)               # 10-byte Folded Reload
	fdivr	%st(0), %st(1)
	fldz
	fxch	%st(2)
	fucomi	%st(2)
	jne	.LBB8_216
	jp	.LBB8_216
# BB#215:
	fstp	%st(2)
	fstp	%st(0)
	jmp	.LBB8_219
.LBB8_131:
	fstp	%st(0)
	fstp	%st(2)
	fstpt	16(%rsp)
	fstpt	(%rsp)
	fstpt	180(%rsp)               # 10-byte Folded Spill
	callq	_ZN5boost4math4betaIeeNS0_8policies6policyINS2_13promote_floatILb0EEENS2_14promote_doubleILb0EEENS2_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEENS0_5tools12promote_argsIT_T0_T1_fffE4typeESC_SD_SE_
	fld1
	fldt	180(%rsp)               # 10-byte Folded Reload
	fldt	384(%rsp)
	fldt	368(%rsp)
	fldt	352(%rsp)
	fxch	%st(3)
	fxch	%st(5)
	fxch	%st(3)
	fxch	%st(4)
	fxch	%st(1)
	fxch	%st(3)
.LBB8_132:
	fld	%st(5)
	fstpt	180(%rsp)               # 10-byte Folded Spill
	fchs
	fxch	%st(1)
	fstpt	80(%rsp)
	fstpt	64(%rsp)
	fxch	%st(3)
	fstpt	48(%rsp)
	fxch	%st(1)
	fstpt	32(%rsp)
	fstpt	16(%rsp)
	fstpt	(%rsp)
	movzbl	%r15b, %esi
	movq	%r14, %rdi
.LBB8_133:                              # %_ZN5boost4math6detail15ibeta_fraction2IeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_SB_RKT0_bPSB_.exit18
	callq	_ZN5boost4math6detail27beta_small_b_large_a_seriesIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_SB_SB_SB_RKT0_b
.LBB8_134:                              # %_ZN5boost4math6detail15ibeta_fraction2IeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_SB_RKT0_bPSB_.exit18
	fchs
	xorl	%ebp, %ebp
	fldt	180(%rsp)               # 10-byte Folded Reload
	fstpt	192(%rsp)               # 10-byte Folded Spill
.LBB8_232:                              # %_ZN5boost4math6detail15ibeta_fraction2IeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_SB_RKT0_bPSB_.exit18
	testq	%rbx, %rbx
	fldz
	fldz
	je	.LBB8_240
# BB#233:
	fstp	%st(1)
	fstp	%st(0)
	fldt	(%rbx)
	fldz
	fucomi	%st(1)
	jbe	.LBB8_235
# BB#234:
	fstp	%st(1)
	fstp	%st(0)
	fldt	384(%rsp)
	fldt	368(%rsp)
	fldt	352(%rsp)
	fldt	192(%rsp)               # 10-byte Folded Reload
	fstpt	48(%rsp)
	fstpt	32(%rsp)
	fstpt	16(%rsp)
	fstpt	(%rsp)
	leaq	264(%rsp), %rdi
	movl	$1, %esi
	movq	%r14, %rdx
	fstpt	156(%rsp)               # 10-byte Folded Spill
	callq	_ZN5boost4math6detail17ibeta_power_termsIeNS0_7lanczos12lanczos17m64ENS0_8policies6policyINS5_13promote_floatILb0EEENS5_14promote_doubleILb0EEENS5_14default_policyESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EEEET_SD_SD_SD_SD_RKT0_bRKT1_
	fldz
	fldt	156(%rsp)               # 10-byte Folded Reload
	fld	%st(2)
	fstpt	(%rbx)
	fxch	%st(2)
	fxch	%st(1)
.LBB8_235:
	fldt	352(%rsp)
	fldt	192(%rsp)               # 10-byte Folded Reload
	fmulp	%st(1)
	fxch	%st(2)
	fucomi	%st(1)
	fstp	%st(1)
	fxch	%st(1)
	jne	.LBB8_236
	jnp	.LBB8_240
.LBB8_236:
	fldt	.LCPI8_14(%rip)
	fmul	%st(1)
	fxch	%st(2)
	fucomi	%st(2)
	fstp	%st(2)
	jbe	.LBB8_238
# BB#237:
	fstp	%st(1)
	fstp	%st(0)
	fldt	.LCPI8_15(%rip)
	jmp	.LBB8_239
.LBB8_238:
	fdivrp	%st(1)
.LBB8_239:
	fstpt	(%rbx)
	fldz
	fldz
.LBB8_240:
	fstp	%st(1)
	fstp	%st(0)
	testb	%bpl, %bpl
	je	.LBB8_244
# BB#241:
	fld1
	testb	%r15b, %r15b
	jne	.LBB8_243
# BB#242:
	fstp	%st(0)
	fldt	384(%rsp)
	fldt	368(%rsp)
	fstpt	16(%rsp)
	fstpt	(%rsp)
	fstpt	156(%rsp)               # 10-byte Folded Spill
	callq	_ZN5boost4math4betaIeeNS0_8policies6policyINS2_13promote_floatILb0EEENS2_14promote_doubleILb0EEENS2_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEENS0_5tools12promote_argsIT_T0_T1_fffE4typeESC_SD_SE_
	fldt	156(%rsp)               # 10-byte Folded Reload
	fxch	%st(1)
.LBB8_243:
	fsubp	%st(1)
.LBB8_244:
	fldz
	fldz
.LBB8_245:
	fstp	%st(1)
	fstp	%st(0)
	addq	$584, %rsp              # imm = 0x248
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.LBB8_216:                              # %.preheader.i
	fstpt	120(%rsp)               # 10-byte Folded Spill
	fldt	144(%rsp)               # 10-byte Folded Reload
	fadd	%st(1)
	fstpt	168(%rsp)               # 10-byte Folded Spill
	fld1
	movl	$19, %eax
	fld	%st(0)
	fld	%st(1)
.LBB8_217:                              # =>This Inner Loop Header: Depth=1
	fldt	168(%rsp)               # 10-byte Folded Reload
	fadd	%st(5)
	fldt	180(%rsp)               # 10-byte Folded Reload
	fmulp	%st(1)
	fld	%st(4)
	fadd	%st(6)
	fadd	%st(4)
	fdivrp	%st(1)
	fmulp	%st(2)
	fadd	%st(1)
	fxch	%st(4)
	fadd	%st(2)
	decl	%eax
	fxch	%st(4)
	jne	.LBB8_217
# BB#218:                               # %._crit_edge.i
	fstp	%st(4)
	fstp	%st(2)
	fstp	%st(0)
	fstp	%st(0)
	fldt	120(%rsp)               # 10-byte Folded Reload
	fmulp	%st(1)
.LBB8_219:                              # %_ZN5boost4math6detail12ibeta_a_stepIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_SB_iRKT0_bPSB_.exit
	fldt	192(%rsp)               # 10-byte Folded Reload
	fldt	156(%rsp)               # 10-byte Folded Reload
	faddp	%st(2)
	testb	%bpl, %bpl
	fldt	144(%rsp)               # 10-byte Folded Reload
	je	.LBB8_221
# BB#220:
	fld1
	fchs
	faddp	%st(3)
.LBB8_221:
	fldt	384(%rsp)
	fadds	.LCPI8_4(%rip)
	fldt	352(%rsp)
	fld1
	fstpt	80(%rsp)
	fxch	%st(4)
	fstpt	64(%rsp)
	fld	%st(2)
	fstpt	48(%rsp)
	fxch	%st(2)
	fstpt	192(%rsp)               # 10-byte Folded Spill
	fxch	%st(2)
	fstpt	32(%rsp)
	fxch	%st(1)
	fstpt	16(%rsp)
	fstpt	(%rsp)
	movl	$1, %esi
	movq	%r14, %rdi
	callq	_ZN5boost4math6detail27beta_small_b_large_a_seriesIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_SB_SB_SB_RKT0_b
	testb	%bpl, %bpl
	jne	.LBB8_222
	jmp	.LBB8_232
.LBB8_249:
	fstp	%st(0)
	fstp	%st(1)
	fld	%st(0)
	fstpt	448(%rsp)
	fstpt	560(%rsp)
	leaq	448(%rsp), %rdx
	leaq	560(%rsp), %rcx
	leaq	536(%rsp), %r8
	movl	$.L.str56, %edi
	xorl	%esi, %esi
	callq	_ZN5boost4math8policies20raise_rounding_errorIeeNS1_6policyINS1_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET0_PKcS8_RKT_RKS6_RKT1_
	fstp	%st(0)
.LBB8_178:
	fstp	%st(0)
	fld	%st(0)
	fstpt	448(%rsp)
	fstpt	560(%rsp)
	leaq	448(%rsp), %rdx
	leaq	560(%rsp), %rcx
	movl	$.L.str56, %edi
	xorl	%esi, %esi
	jmp	.LBB8_179
.LBB8_251:
	fstp	%st(2)
	fstp	%st(0)
	fstp	%st(0)
	fldt	144(%rsp)               # 10-byte Folded Reload
	fstpt	544(%rsp)
	movl	$0, 540(%rsp)
	leaq	544(%rsp), %rdx
	leaq	540(%rsp), %rcx
	movl	$.L.str53, %edi
	xorl	%esi, %esi
	movq	%r14, %r8
	callq	_ZN5boost4math8policies20raise_rounding_errorIeiNS1_6policyINS1_13promote_floatILb0EEENS1_14promote_doubleILb0EEENS1_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEET0_PKcSC_RKT_RKSA_RKT1_
.LBB8_1:
	testb	%r15b, %r15b
	jne	.LBB8_2
# BB#246:
	fstp	%st(3)
	fstp	%st(1)
	fstp	%st(2)
	fstp	%st(0)
	fstp	%st(0)
	movl	$.L.str13, %edi
	movl	$.L.str14, %esi
	movl	$886, %edx              # imm = 0x376
	movl	$.L__PRETTY_FUNCTION__._ZN5boost4math6detail9ibeta_impIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_RKT0_bbPSB_, %ecx
	callq	__assert_fail
.LBB8_9:
	fstp	%st(5)
	fstp	%st(3)
	fstp	%st(4)
	fstp	%st(2)
	fstp	%st(2)
	fstp	%st(1)
	fstp	%st(0)
	movq	_ZZN5boost4math6detail9ibeta_impIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_RKT0_bbPSB_E8function(%rip), %rax
	leaq	384(%rsp), %rcx
	movl	$.L.str16, %esi
	jmp	.LBB8_15
.LBB8_11:
	fstp	%st(5)
	fstp	%st(3)
	fstp	%st(4)
	fstp	%st(2)
	fstp	%st(2)
	fstp	%st(1)
	fstp	%st(0)
	movq	_ZZN5boost4math6detail9ibeta_impIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_RKT0_bbPSB_E8function(%rip), %rax
	leaq	368(%rsp), %rcx
	movl	$.L.str17, %esi
	jmp	.LBB8_15
.LBB8_14:
	fstp	%st(3)
	fstp	%st(3)
	fstp	%st(3)
	fstp	%st(1)
	fstp	%st(0)
	fstp	%st(0)
	movq	_ZZN5boost4math6detail9ibeta_impIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_RKT0_bbPSB_E8function(%rip), %rax
	leaq	352(%rsp), %rcx
	movl	$.L.str18, %esi
	jmp	.LBB8_15
.LBB8_23:
	fstp	%st(4)
	fstp	%st(2)
	fstp	%st(3)
	fstp	%st(0)
	fstp	%st(0)
	fstp	%st(0)
	movq	_ZZN5boost4math6detail9ibeta_impIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_RKT0_bbPSB_E8function(%rip), %rax
	leaq	384(%rsp), %rcx
	movl	$.L.str19, %esi
	jmp	.LBB8_15
.LBB8_25:
	fstp	%st(4)
	fstp	%st(4)
	fstp	%st(4)
	fstp	%st(1)
	fstp	%st(2)
	fstp	%st(0)
	fstp	%st(0)
	movq	_ZZN5boost4math6detail9ibeta_impIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_RKT0_bbPSB_E8function(%rip), %rax
	leaq	368(%rsp), %rcx
	movl	$.L.str20, %esi
.LBB8_15:
	movq	%rax, %rdi
	movq	%rcx, %rdx
	jmp	.LBB8_16
.LBB8_247:
	fstp	%st(0)
	leaq	448(%rsp), %rax
	leaq	560(%rsp), %rcx
	movl	$.L.str50, %edi
	movl	$.L.str51, %esi
	movq	%rax, %rdx
	callq	_ZN5boost4math8policies18raise_domain_errorIeNS1_6policyINS1_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET_PKcS8_RKS6_RKT0_
	fstp	%st(0)
.LBB8_61:
	fstp	%st(0)
	leaq	560(%rsp), %rax
	movl	$.L.str50, %edi
	xorl	%esi, %esi
	movq	%rax, %rdx
	callq	_ZN5boost4math8policies20raise_overflow_errorIeNS1_6policyINS1_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET_PKcS8_RKT0_
	fstp	%st(0)
.LBB8_248:
	fstp	%st(0)
	movl	$.L.str52, %edi
	movl	$.L.str14, %esi
	movl	$658, %edx              # imm = 0x292
	movl	$.L__PRETTY_FUNCTION__._ZN5boost4math6detail12ibeta_a_stepIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_SB_iRKT0_bPSB_, %ecx
	callq	__assert_fail
.LBB8_200:
	fstp	%st(0)
	fld	%st(0)
	fstpt	448(%rsp)
	fstpt	560(%rsp)
	leaq	448(%rsp), %rax
	leaq	560(%rsp), %rcx
	movl	$.L.str56, %edi
	xorl	%esi, %esi
	movq	%rax, %rdx
.LBB8_179:
	movq	%r14, %r8
	callq	_ZN5boost4math8policies20raise_rounding_errorIeeNS1_6policyINS1_13promote_floatILb0EEENS1_14promote_doubleILb0EEENS1_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEET0_PKcSC_RKT_RKSA_RKT1_
	fstp	%st(0)
.LBB8_253:
	fstp	%st(0)
	fstp	%st(0)
	movl	$.L.str52, %edi
	movl	$.L.str14, %esi
	movl	$633, %edx              # imm = 0x279
	movl	$.L__PRETTY_FUNCTION__._ZN5boost4math6detail15ibeta_fraction2IeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_SB_RKT0_bPSB_, %ecx
	callq	__assert_fail
.LBB8_250:
	fstp	%st(3)
	fstp	%st(0)
	fstp	%st(1)
	fstp	%st(0)
	fldt	120(%rsp)               # 10-byte Folded Reload
	fstpt	544(%rsp)
	movl	$0, 540(%rsp)
	leaq	544(%rsp), %rax
	leaq	540(%rsp), %rcx
	leaq	536(%rsp), %rbp
	movl	$.L.str53, %edi
	xorl	%esi, %esi
	movq	%rax, %rdx
	movq	%rbp, %r8
	callq	_ZN5boost4math8policies20raise_rounding_errorIeiNS1_6policyINS1_14default_policyES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_EEEET0_PKcS8_RKT_RKS6_RKT1_
.LBB8_252:
	fstp	%st(3)
	fstp	%st(1)
	fstp	%st(0)
	fstp	%st(0)
	fldt	144(%rsp)               # 10-byte Folded Reload
	fstpt	544(%rsp)
	movl	$0, 540(%rsp)
	leaq	544(%rsp), %rax
	leaq	540(%rsp), %rcx
	movl	$.L.str53, %edi
	xorl	%esi, %esi
	movq	%rax, %rdx
	movq	%r14, %r8
	callq	_ZN5boost4math8policies20raise_rounding_errorIeiNS1_6policyINS1_13promote_floatILb0EEENS1_14promote_doubleILb0EEENS1_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEET0_PKcSC_RKT_RKSA_RKT1_
.Ltmp80:
	.size	_ZN5boost4math6detail9ibeta_impIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_RKT0_bbPSB_, .Ltmp80-_ZN5boost4math6detail9ibeta_impIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_RKT0_bbPSB_
	.cfi_endproc

	.section	.text._ZN5boost4math8policies18raise_domain_errorIeNS1_6policyINS1_13promote_floatILb0EEENS1_14promote_doubleILb0EEENS1_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEET_PKcSC_RKSA_RKT0_,"axG",@progbits,_ZN5boost4math8policies18raise_domain_errorIeNS1_6policyINS1_13promote_floatILb0EEENS1_14promote_doubleILb0EEENS1_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEET_PKcSC_RKSA_RKT0_,comdat
	.weak	_ZN5boost4math8policies18raise_domain_errorIeNS1_6policyINS1_13promote_floatILb0EEENS1_14promote_doubleILb0EEENS1_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEET_PKcSC_RKSA_RKT0_
	.align	16, 0x90
	.type	_ZN5boost4math8policies18raise_domain_errorIeNS1_6policyINS1_13promote_floatILb0EEENS1_14promote_doubleILb0EEENS1_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEET_PKcSC_RKSA_RKT0_,@function
_ZN5boost4math8policies18raise_domain_errorIeNS1_6policyINS1_13promote_floatILb0EEENS1_14promote_doubleILb0EEENS1_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEET_PKcSC_RKSA_RKT0_: # @_ZN5boost4math8policies18raise_domain_errorIeNS1_6policyINS1_13promote_floatILb0EEENS1_14promote_doubleILb0EEENS1_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEET_PKcSC_RKSA_RKT0_
	.cfi_startproc
# BB#0:
	pushq	%rax
.Ltmp82:
	.cfi_def_cfa_offset 16
	testq	%rsi, %rsi
	movl	$.L.str97, %eax
	cmovneq	%rsi, %rax
	leaq	(%rsp), %rcx
	movq	%rax, %rsi
	callq	_ZN5boost4math8policies6detail18raise_domain_errorIeEET_PKcS6_RKS4_RKNS1_12domain_errorILNS1_17error_policy_typeE0EEE
	fstp	%st(0)
.Ltmp83:
	.size	_ZN5boost4math8policies18raise_domain_errorIeNS1_6policyINS1_13promote_floatILb0EEENS1_14promote_doubleILb0EEENS1_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEET_PKcSC_RKSA_RKT0_, .Ltmp83-_ZN5boost4math8policies18raise_domain_errorIeNS1_6policyINS1_13promote_floatILb0EEENS1_14promote_doubleILb0EEENS1_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEET_PKcSC_RKSA_RKT0_
	.cfi_endproc

	.section	.rodata.cst16,"aM",@progbits,16
	.align	16
.LCPI10_0:
	.quad	-1                      # x86_fp80 1.18973149535723176502E+4932
	.short	32766
	.zero	6
	.section	.text._ZN5boost4math4betaIeeNS0_8policies6policyINS2_13promote_floatILb0EEENS2_14promote_doubleILb0EEENS2_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEENS0_5tools12promote_argsIT_T0_T1_fffE4typeESC_SD_SE_,"axG",@progbits,_ZN5boost4math4betaIeeNS0_8policies6policyINS2_13promote_floatILb0EEENS2_14promote_doubleILb0EEENS2_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEENS0_5tools12promote_argsIT_T0_T1_fffE4typeESC_SD_SE_,comdat
	.weak	_ZN5boost4math4betaIeeNS0_8policies6policyINS2_13promote_floatILb0EEENS2_14promote_doubleILb0EEENS2_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEENS0_5tools12promote_argsIT_T0_T1_fffE4typeESC_SD_SE_
	.align	16, 0x90
	.type	_ZN5boost4math4betaIeeNS0_8policies6policyINS2_13promote_floatILb0EEENS2_14promote_doubleILb0EEENS2_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEENS0_5tools12promote_argsIT_T0_T1_fffE4typeESC_SD_SE_,@function
_ZN5boost4math4betaIeeNS0_8policies6policyINS2_13promote_floatILb0EEENS2_14promote_doubleILb0EEENS2_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEENS0_5tools12promote_argsIT_T0_T1_fffE4typeESC_SD_SE_: # @_ZN5boost4math4betaIeeNS0_8policies6policyINS2_13promote_floatILb0EEENS2_14promote_doubleILb0EEENS2_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEENS0_5tools12promote_argsIT_T0_T1_fffE4typeESC_SD_SE_
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin10:
	.cfi_lsda 3, .Lexception10
# BB#0:
	pushq	%rbx
.Ltmp91:
	.cfi_def_cfa_offset 16
	subq	$96, %rsp
.Ltmp92:
	.cfi_def_cfa_offset 112
.Ltmp93:
	.cfi_offset %rbx, -16
	fldt	112(%rsp)
	fstpt	52(%rsp)                # 10-byte Folded Spill
	fldt	128(%rsp)
	fstpt	40(%rsp)                # 10-byte Folded Spill
	leaq	80(%rsp), %rdi
	movl	$61, %esi
	callq	fegetexceptflag
	movl	$61, %edi
	callq	feclearexcept
.Ltmp84:
	fldt	40(%rsp)                # 10-byte Folded Reload
	fstpt	16(%rsp)
	fldt	52(%rsp)                # 10-byte Folded Reload
	fstpt	(%rsp)
	leaq	72(%rsp), %rdi
	leaq	64(%rsp), %rsi
	callq	_ZN5boost4math6detail8beta_impIeNS0_7lanczos12lanczos17m64ENS0_8policies6policyINS5_13promote_floatILb0EEENS5_14promote_doubleILb0EEENS5_14default_policyESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EEEET_SD_SD_RKT0_RKT1_
.Ltmp85:
# BB#1:
	fld	%st(0)
	fstpt	52(%rsp)                # 10-byte Folded Spill
	fabs
	fldt	.LCPI10_0(%rip)
	fxch	%st(1)
	fucompi	%st(1)
	fstp	%st(0)
	ja	.LBB10_2
# BB#5:                                 # %_ZN5boost4math6detail4betaIeeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEENS0_5tools12promote_argsIT_T0_ffffE4typeESD_SE_RKT1_PKN4mpl_5bool_ILb1EEE.exit
	leaq	80(%rsp), %rdi
	movl	$61, %esi
	callq	fesetexceptflag
	fldt	52(%rsp)                # 10-byte Folded Reload
	addq	$96, %rsp
	popq	%rbx
	ret
.LBB10_2:
.Ltmp86:
	leaq	88(%rsp), %rax
	movl	$.L.str98, %edi
	xorl	%esi, %esi
	movq	%rax, %rdx
	callq	_ZN5boost4math8policies6detail20raise_overflow_errorIeEET_PKcS6_RKNS1_14overflow_errorILNS1_17error_policy_typeE0EEE
	fstp	%st(0)
.Ltmp87:
	fldz
# BB#3:                                 # %.noexc.i
	fstp	%st(0)
.LBB10_4:
	fstp	%st(0)
.Ltmp88:
	movq	%rax, %rbx
	leaq	80(%rsp), %rax
	movl	$61, %esi
	movq	%rax, %rdi
	callq	fesetexceptflag
	movq	%rbx, %rdi
	callq	_Unwind_Resume
.Ltmp94:
	.size	_ZN5boost4math4betaIeeNS0_8policies6policyINS2_13promote_floatILb0EEENS2_14promote_doubleILb0EEENS2_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEENS0_5tools12promote_argsIT_T0_T1_fffE4typeESC_SD_SE_, .Ltmp94-_ZN5boost4math4betaIeeNS0_8policies6policyINS2_13promote_floatILb0EEENS2_14promote_doubleILb0EEENS2_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEENS0_5tools12promote_argsIT_T0_T1_fffE4typeESC_SD_SE_
	.cfi_endproc
.Leh_func_end10:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table10:
.Lexception10:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	"\234"                  # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	26                      # Call site table length
.Lset20 = .Ltmp84-.Leh_func_begin10     # >> Call Site 1 <<
	.long	.Lset20
.Lset21 = .Ltmp87-.Ltmp84               #   Call between .Ltmp84 and .Ltmp87
	.long	.Lset21
.Lset22 = .Ltmp88-.Leh_func_begin10     #     jumps to .Ltmp88
	.long	.Lset22
	.byte	0                       #   On action: cleanup
.Lset23 = .Ltmp87-.Leh_func_begin10     # >> Call Site 2 <<
	.long	.Lset23
.Lset24 = .Leh_func_end10-.Ltmp87       #   Call between .Ltmp87 and .Leh_func_end10
	.long	.Lset24
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.rodata.cst8,"aM",@progbits,8
	.align	8
.LCPI11_0:
	.quad	4623071806624890880     # double 12.225222736597061
	.section	.rodata.cst4,"aM",@progbits,4
	.align	4
.LCPI11_1:
	.long	3204448256              # float -0.5
.LCPI11_2:
	.long	1092616192              # float 10
.LCPI11_5:
	.long	536870912               # float 1.08420217E-19
	.section	.rodata.cst16,"aM",@progbits,16
	.align	16
.LCPI11_3:
	.quad	-5910881771259737445    # x86_fp80 2.71828182845904523543
	.short	16384
	.zero	6
.LCPI11_4:
	.quad	-9223372036854775808    # x86_fp80 3.36210314311209350626E-4932
	.short	1
	.zero	6
.LCPI11_6:
	.long	1127219200              # 0x43300000
	.long	1160773632              # 0x45300000
	.long	0                       # 0x0
	.long	0                       # 0x0
.LCPI11_7:
	.quad	4841369599423283200     # double 4.503600e+15
	.quad	4985484787499139072     # double 1.934281e+25
	.section	.text._ZN5boost4math6detail12ibeta_seriesIeNS0_7lanczos12lanczos17m64ENS0_8policies6policyINS5_13promote_floatILb0EEENS5_14promote_doubleILb0EEENS5_14default_policyESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EEEET_SD_SD_SD_SD_RKT0_bPSD_SD_RKT1_,"axG",@progbits,_ZN5boost4math6detail12ibeta_seriesIeNS0_7lanczos12lanczos17m64ENS0_8policies6policyINS5_13promote_floatILb0EEENS5_14promote_doubleILb0EEENS5_14default_policyESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EEEET_SD_SD_SD_SD_RKT0_bPSD_SD_RKT1_,comdat
	.weak	_ZN5boost4math6detail12ibeta_seriesIeNS0_7lanczos12lanczos17m64ENS0_8policies6policyINS5_13promote_floatILb0EEENS5_14promote_doubleILb0EEENS5_14default_policyESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EEEET_SD_SD_SD_SD_RKT0_bPSD_SD_RKT1_
	.align	16, 0x90
	.type	_ZN5boost4math6detail12ibeta_seriesIeNS0_7lanczos12lanczos17m64ENS0_8policies6policyINS5_13promote_floatILb0EEENS5_14promote_doubleILb0EEENS5_14default_policyESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EEEET_SD_SD_SD_SD_RKT0_bPSD_SD_RKT1_,@function
_ZN5boost4math6detail12ibeta_seriesIeNS0_7lanczos12lanczos17m64ENS0_8policies6policyINS5_13promote_floatILb0EEENS5_14promote_doubleILb0EEENS5_14default_policyESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EEEET_SD_SD_SD_SD_RKT0_bPSD_SD_RKT1_: # @_ZN5boost4math6detail12ibeta_seriesIeNS0_7lanczos12lanczos17m64ENS0_8policies6policyINS5_13promote_floatILb0EEENS5_14promote_doubleILb0EEENS5_14default_policyESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EEEET_SD_SD_SD_SD_RKT0_bPSD_SD_RKT1_
	.cfi_startproc
# BB#0:
	pushq	%r14
.Ltmp98:
	.cfi_def_cfa_offset 16
	pushq	%rbx
.Ltmp99:
	.cfi_def_cfa_offset 24
	subq	$264, %rsp              # imm = 0x108
.Ltmp100:
	.cfi_def_cfa_offset 288
.Ltmp101:
	.cfi_offset %rbx, -24
.Ltmp102:
	.cfi_offset %r14, -16
	movq	%rcx, %r14
	movq	%rdx, %rbx
	fldt	352(%rsp)
	fldt	336(%rsp)
	fldt	320(%rsp)
	fldt	304(%rsp)
	fldt	288(%rsp)
	testq	%rbx, %rbx
	fld	%st(0)
	fstpt	208(%rsp)
	fld	%st(1)
	fstpt	192(%rsp)
	jne	.LBB11_1
.LBB11_2:
	fxch	%st(4)
	fstpt	76(%rsp)                # 10-byte Folded Spill
	fxch	%st(2)
	fstpt	112(%rsp)               # 10-byte Folded Spill
	testb	%sil, %sil
	je	.LBB11_12
# BB#3:
	fstpt	148(%rsp)               # 10-byte Folded Spill
	fld	%st(1)
	fadd	%st(1)
	fld	%st(0)
	fstpt	176(%rsp)
	fldl	.LCPI11_0(%rip)
	fld	%st(3)
	fadd	%st(1)
	fxch	%st(3)
	fstpt	136(%rsp)               # 10-byte Folded Spill
	flds	.LCPI11_1(%rip)
	fadd	%st(0), %st(3)
	fxch	%st(3)
	fstpt	88(%rsp)                # 10-byte Folded Spill
	fldt	136(%rsp)               # 10-byte Folded Reload
	fadd	%st(1)
	fadd	%st(3)
	fstpt	64(%rsp)                # 10-byte Folded Spill
	faddp	%st(1)
	faddp	%st(1)
	fstpt	100(%rsp)               # 10-byte Folded Spill
	leaq	176(%rsp), %rdx
	movl	$_ZZN5boost4math7lanczos12lanczos17m6423lanczos_sum_expG_scaledIeEET_RKS4_E3num, %edi
	movl	$_ZZN5boost4math7lanczos12lanczos17m6423lanczos_sum_expG_scaledIeEET_RKS4_E5denom, %esi
	xorl	%ecx, %ecx
	fstpt	124(%rsp)               # 10-byte Folded Spill
	callq	_ZN5boost4math5tools6detail23evaluate_rational_c_impIeeeEET1_PKT_PKT0_RKS4_PKN4mpl_4int_ILi17EEE
	fstpt	52(%rsp)                # 10-byte Folded Spill
	leaq	208(%rsp), %rdx
	movl	$_ZZN5boost4math7lanczos12lanczos17m6423lanczos_sum_expG_scaledIeEET_RKS4_E3num, %edi
	movl	$_ZZN5boost4math7lanczos12lanczos17m6423lanczos_sum_expG_scaledIeEET_RKS4_E5denom, %esi
	xorl	%ecx, %ecx
	callq	_ZN5boost4math5tools6detail23evaluate_rational_c_impIeeeEET1_PKT_PKT0_RKS4_PKN4mpl_4int_ILi17EEE
	fstpt	40(%rsp)                # 10-byte Folded Spill
	leaq	192(%rsp), %rdx
	movl	$_ZZN5boost4math7lanczos12lanczos17m6423lanczos_sum_expG_scaledIeEET_RKS4_E3num, %edi
	movl	$_ZZN5boost4math7lanczos12lanczos17m6423lanczos_sum_expG_scaledIeEET_RKS4_E5denom, %esi
	xorl	%ecx, %ecx
	callq	_ZN5boost4math5tools6detail23evaluate_rational_c_impIeeeEET1_PKT_PKT0_RKS4_PKN4mpl_4int_ILi17EEE
	fldt	64(%rsp)                # 10-byte Folded Reload
	fldt	136(%rsp)               # 10-byte Folded Reload
	fldt	124(%rsp)               # 10-byte Folded Reload
	fldt	40(%rsp)                # 10-byte Folded Reload
	fmulp	%st(4)
	fldt	52(%rsp)                # 10-byte Folded Reload
	fdivp	%st(4)
	fld	%st(1)
	fmul	%st(1)
	fld	%st(3)
	fmuls	.LCPI11_2(%rip)
	fucompi	%st(1)
	fstp	%st(0)
	jbe	.LBB11_8
# BB#4:
	fxch	%st(3)
	fstpt	52(%rsp)                # 10-byte Folded Spill
	fldt	100(%rsp)               # 10-byte Folded Reload
	fstpt	100(%rsp)               # 10-byte Folded Spill
	fld	%st(0)
	fadds	.LCPI11_1(%rip)
	fstpt	40(%rsp)                # 10-byte Folded Spill
	fxch	%st(1)
	fdivr	%st(2)
	fld	%st(0)
	fstpt	240(%rsp)
	fld1
	fchs
	fucomi	%st(1)
	ja	.LBB11_22
# BB#5:
	fxch	%st(2)
	fstpt	136(%rsp)               # 10-byte Folded Spill
	fxch	%st(2)
	fstpt	124(%rsp)               # 10-byte Folded Spill
	fxch	%st(1)
	fucomi	%st(1)
	fstp	%st(1)
	jne	.LBB11_7
	jp	.LBB11_7
	jmp	.LBB11_6
.LBB11_7:                               # %_ZN5boost4math5log1pINS0_8policies6policyINS2_13promote_floatILb0EEENS2_14promote_doubleILb0EEENS2_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEEeeRKT_.exit
	fstpt	(%rsp)
	callq	log1pl
	fldt	40(%rsp)                # 10-byte Folded Reload
	fmulp	%st(1)
	fstpt	(%rsp)
	callq	expl
	fstpt	64(%rsp)                # 10-byte Folded Spill
	fldt	100(%rsp)               # 10-byte Folded Reload
	jmp	.LBB11_9
.LBB11_12:
	fxch	%st(1)
	fstpt	136(%rsp)               # 10-byte Folded Spill
	fld	%st(1)
	fstpt	16(%rsp)
	fxch	%st(1)
	fstpt	124(%rsp)               # 10-byte Folded Spill
	fld	%st(0)
	fstpt	(%rsp)
	fstpt	148(%rsp)               # 10-byte Folded Spill
	callq	powl
	jmp	.LBB11_13
.LBB11_8:
	fxch	%st(3)
	fstpt	52(%rsp)                # 10-byte Folded Spill
	fxch	%st(2)
	fstpt	124(%rsp)               # 10-byte Folded Spill
	fldt	100(%rsp)               # 10-byte Folded Reload
	fld	%st(0)
	fstpt	100(%rsp)               # 10-byte Folded Spill
	fdivp	%st(1)
	fld	%st(1)
	fadds	.LCPI11_1(%rip)
	fxch	%st(2)
	fstpt	136(%rsp)               # 10-byte Folded Spill
	fxch	%st(1)
	fstpt	16(%rsp)
	fstpt	(%rsp)
	callq	powl
	fldt	100(%rsp)               # 10-byte Folded Reload
	fxch	%st(1)
	fstpt	64(%rsp)                # 10-byte Folded Spill
.LBB11_9:
	fldt	148(%rsp)               # 10-byte Folded Reload
	fmulp	%st(1)
	fldt	88(%rsp)                # 10-byte Folded Reload
	fld	%st(0)
	fstpt	88(%rsp)                # 10-byte Folded Spill
	fdivrp	%st(1)
	fldt	124(%rsp)               # 10-byte Folded Reload
	fstpt	16(%rsp)
	fstpt	(%rsp)
	callq	powl
	testq	%rbx, %rbx
	fldt	52(%rsp)                # 10-byte Folded Reload
	fldt	64(%rsp)                # 10-byte Folded Reload
	fmulp	%st(1)
	fmulp	%st(1)
	fldt	.LCPI11_3(%rip)
	fldt	88(%rsp)                # 10-byte Folded Reload
	fdivp	%st(1)
	fsqrt
	fmulp	%st(1)
	je	.LBB11_13
# BB#10:
	fldt	136(%rsp)               # 10-byte Folded Reload
	fstpt	16(%rsp)
	fldt	76(%rsp)                # 10-byte Folded Reload
	fstpt	(%rsp)
	fstpt	100(%rsp)               # 10-byte Folded Spill
	callq	powl
	fldt	100(%rsp)               # 10-byte Folded Reload
	fmul	%st(0), %st(1)
	fldz
	fxch	%st(2)
	fucomi	%st(2)
	fstp	%st(2)
	fxch	%st(1)
	fstpt	(%rbx)
	jb	.LBB11_11
.LBB11_13:
	fldt	.LCPI11_4(%rip)
	fucompi	%st(1)
	fldt	112(%rsp)               # 10-byte Folded Reload
	jbe	.LBB11_15
# BB#14:
	fstp	%st(1)
	jmp	.LBB11_20
.LBB11_15:
	fld1
	fldt	136(%rsp)               # 10-byte Folded Reload
	fsubr	%st(1)
	movl	$1, %edx
	movl	$1000000, %ecx          # imm = 0xF4240
	xorl	%eax, %eax
	fldt	148(%rsp)               # 10-byte Folded Reload
	fstpt	148(%rsp)               # 10-byte Folded Spill
	fldt	124(%rsp)               # 10-byte Folded Reload
	.align	16, 0x90
.LBB11_16:                              # =>This Inner Loop Header: Depth=1
                                        # kill:
	fld	%st(4)
	fdiv	%st(1)
	fadd	%st(0), %st(4)
	fld	%st(4)
	fmuls	.LCPI11_5(%rip)
	fabs
	fxch	%st(1)
	fabs
	fucompi	%st(1)
	fstp	%st(0)
	jbe	.LBB11_17
# BB#18:                                #   in Loop: Header=BB11_16 Depth=1
	movl	%edx, 172(%rsp)
	fldt	148(%rsp)               # 10-byte Folded Reload
	fmul	%st(2)
	fidivl	172(%rsp)
	fxch	%st(2)
	fadd	%st(3)
	incl	%edx
	fxch	%st(5)
	fmulp	%st(2)
	fadd	%st(2)
	decq	%rcx
	fxch	%st(1)
	fxch	%st(4)
	fxch	%st(1)
	jne	.LBB11_16
	jmp	.LBB11_19
.LBB11_17:
	fstp	%st(4)
	fstp	%st(0)
	fstp	%st(0)
	fstp	%st(1)
	movq	%rcx, %rax
	fldz
	fldz
	fldz
	fldz
	fxch	%st(2)
	fxch	%st(4)
	fxch	%st(3)
	fxch	%st(1)
	fxch	%st(2)
.LBB11_19:                              # %_ZN5boost4math5tools10sum_seriesINS0_6detail14ibeta_series_tIeEEeeEENT_11result_typeERS6_RKT0_RmRKT1_.exit
	fstp	%st(1)
	fstp	%st(3)
	fstp	%st(0)
	fstp	%st(1)
	movl	$1000000, %ecx          # imm = 0xF4240
	subq	%rax, %rcx
	cmpq	$1000000, %rcx          # imm = 0xF4240
	jae	.LBB11_23
.LBB11_20:                              # %_ZN5boost4math8policies23check_series_iterationsIeNS1_6policyINS1_13promote_floatILb0EEENS1_14promote_doubleILb0EEENS1_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEEvPKcmRKT0_.exit
	addq	$264, %rsp              # imm = 0x108
	popq	%rbx
	popq	%r14
	ret
.LBB11_1:
	testb	%sil, %sil
	jne	.LBB11_2
# BB#21:
	fstp	%st(3)
	fstp	%st(1)
	fstp	%st(2)
	fstp	%st(1)
	fstp	%st(0)
	movl	$.L.str13, %edi
	movl	$.L.str14, %esi
	movl	$475, %edx              # imm = 0x1DB
	movl	$.L__PRETTY_FUNCTION__._ZN5boost4math6detail12ibeta_seriesIeNS0_7lanczos12lanczos17m64ENS0_8policies6policyINS5_13promote_floatILb0EEENS5_14promote_doubleILb0EEENS5_14default_policyESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EEEET_SD_SD_SD_SD_RKT0_bPSD_SD_RKT1_, %ecx
	callq	__assert_fail
.LBB11_22:
	fstp	%st(1)
	fstp	%st(0)
	fstp	%st(1)
	fstp	%st(0)
	leaq	240(%rsp), %rax
	movl	$.L.str50, %edi
	movl	$.L.str51, %esi
	movq	%rax, %rdx
	movq	%r14, %rcx
	callq	_ZN5boost4math8policies18raise_domain_errorIeNS1_6policyINS1_13promote_floatILb0EEENS1_14promote_doubleILb0EEENS1_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEET_PKcSC_RKSA_RKT0_
	fstp	%st(0)
.LBB11_6:
	fstp	%st(0)
	movl	$.L.str50, %edi
	xorl	%esi, %esi
	movq	%r14, %rdx
	callq	_ZN5boost4math8policies20raise_overflow_errorIeNS1_6policyINS1_13promote_floatILb0EEENS1_14promote_doubleILb0EEENS1_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEET_PKcSC_RKT0_
	fstp	%st(0)
.LBB11_11:
	fstp	%st(0)
	movl	$.L.str52, %edi
	movl	$.L.str14, %esi
	movl	$496, %edx              # imm = 0x1F0
	movl	$.L__PRETTY_FUNCTION__._ZN5boost4math6detail12ibeta_seriesIeNS0_7lanczos12lanczos17m64ENS0_8policies6policyINS5_13promote_floatILb0EEENS5_14promote_doubleILb0EEENS5_14default_policyESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EEEET_SD_SD_SD_SD_RKT0_bPSD_SD_RKT1_, %ecx
	callq	__assert_fail
.LBB11_23:
	fstp	%st(0)
	movd	%rcx, %xmm0
	punpckldq	.LCPI11_6(%rip), %xmm0 # xmm0 = xmm0[0],mem[0],xmm0[1],mem[1]
	subpd	.LCPI11_7(%rip), %xmm0
	haddpd	%xmm0, %xmm0
	movlpd	%xmm0, 160(%rsp)
	fldl	160(%rsp)
	fstpt	224(%rsp)
	leaq	224(%rsp), %rax
	movl	$.L.str96, %edi
	movl	$.L.str75, %esi
	movq	%rax, %rdx
	movq	%r14, %rcx
	callq	_ZN5boost4math8policies22raise_evaluation_errorIeNS1_6policyINS1_13promote_floatILb0EEENS1_14promote_doubleILb0EEENS1_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEET_PKcSC_RKSA_RKT0_
	fstp	%st(0)
.Ltmp103:
	.size	_ZN5boost4math6detail12ibeta_seriesIeNS0_7lanczos12lanczos17m64ENS0_8policies6policyINS5_13promote_floatILb0EEENS5_14promote_doubleILb0EEENS5_14default_policyESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EEEET_SD_SD_SD_SD_RKT0_bPSD_SD_RKT1_, .Ltmp103-_ZN5boost4math6detail12ibeta_seriesIeNS0_7lanczos12lanczos17m64ENS0_8policies6policyINS5_13promote_floatILb0EEENS5_14promote_doubleILb0EEENS5_14default_policyESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EEEET_SD_SD_SD_SD_RKT0_bPSD_SD_RKT1_
	.cfi_endproc

	.section	.rodata.cst4,"aM",@progbits,4
	.align	4
.LCPI12_0:
	.long	1056964608              # float 0.5
.LCPI12_4:
	.long	1082130432              # float 4
.LCPI12_5:
	.long	1073741824              # float 2
.LCPI12_6:
	.long	1593835520              # float 9.22337203E+18
.LCPI12_7:
	.long	536870912               # float 1.08420217E-19
	.section	.rodata.cst8,"aM",@progbits,8
	.align	8
.LCPI12_1:
	.quad	4599976659396224614     # double 0.34999999999999998
	.section	.rodata.cst16,"aM",@progbits,16
	.align	16
.LCPI12_2:
	.quad	-9223372036854775808    # x86_fp80 3.36210314311209350626E-4932
	.short	1
	.zero	6
.LCPI12_3:
	.quad	-1                      # x86_fp80 1.18973149535723176502E+4932
	.short	32766
	.zero	6
	.section	.text._ZN5boost4math6detail27beta_small_b_large_a_seriesIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_SB_SB_SB_RKT0_b,"axG",@progbits,_ZN5boost4math6detail27beta_small_b_large_a_seriesIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_SB_SB_SB_RKT0_b,comdat
	.weak	_ZN5boost4math6detail27beta_small_b_large_a_seriesIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_SB_SB_SB_RKT0_b
	.align	16, 0x90
	.type	_ZN5boost4math6detail27beta_small_b_large_a_seriesIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_SB_SB_SB_RKT0_b,@function
_ZN5boost4math6detail27beta_small_b_large_a_seriesIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_SB_SB_SB_RKT0_b: # @_ZN5boost4math6detail27beta_small_b_large_a_seriesIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_SB_SB_SB_SB_RKT0_b
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin12:
	.cfi_lsda 3, .Lexception12
# BB#0:
	pushq	%rbp
.Ltmp117:
	.cfi_def_cfa_offset 16
	pushq	%rbx
.Ltmp118:
	.cfi_def_cfa_offset 24
	subq	$1064, %rsp             # imm = 0x428
.Ltmp119:
	.cfi_def_cfa_offset 1088
.Ltmp120:
	.cfi_offset %rbx, -24
.Ltmp121:
	.cfi_offset %rbp, -16
	movl	%esi, %ebp
	movq	%rdi, %rbx
	fldt	1168(%rsp)
	fstpt	100(%rsp)               # 10-byte Folded Spill
	fldt	1152(%rsp)
	fldt	1136(%rsp)
	fldt	1120(%rsp)
	fldt	1104(%rsp)
	fldt	1088(%rsp)
	fld	%st(0)
	fstpt	52(%rsp)                # 10-byte Folded Spill
	fldl	.LCPI12_1(%rip)
	fucompi	%st(4)
	fld1
	fchs
	fadd	%st(2)
	fld	%st(0)
	fstpt	124(%rsp)               # 10-byte Folded Spill
	fmuls	.LCPI12_0(%rip)
	faddp	%st(1)
	fstpt	76(%rsp)                # 10-byte Folded Spill
	jbe	.LBB12_5
# BB#1:
	fstp	%st(1)
	fstpt	148(%rsp)               # 10-byte Folded Spill
	fld	%st(0)
	fchs
	fld1
	fxch	%st(2)
	fucompi	%st(2)
	fstp	%st(1)
	fld	%st(0)
	fstpt	992(%rsp)
	ja	.LBB12_34
# BB#2:
	fxch	%st(1)
	fstpt	136(%rsp)               # 10-byte Folded Spill
	jne	.LBB12_4
	jp	.LBB12_4
	jmp	.LBB12_3
.LBB12_4:                               # %_ZN5boost4math5log1pINS0_8policies6policyINS2_13promote_floatILb0EEENS2_14promote_doubleILb0EEENS2_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEEeeRKT_.exit
	fstpt	(%rsp)
	callq	log1pl
	jmp	.LBB12_6
.LBB12_5:
	fstp	%st(2)
	fxch	%st(1)
	fstpt	148(%rsp)               # 10-byte Folded Spill
	fxch	%st(1)
	fstpt	136(%rsp)               # 10-byte Folded Spill
	fstpt	(%rsp)
	callq	logl
.LBB12_6:
	fld	%st(0)
	fstpt	64(%rsp)                # 10-byte Folded Spill
	fldt	76(%rsp)                # 10-byte Folded Reload
	fmulp	%st(1)
	fld	%st(0)
	fstpt	112(%rsp)               # 10-byte Folded Spill
	fchs
	fld	%st(0)
	fstpt	88(%rsp)                # 10-byte Folded Spill
	fldt	148(%rsp)               # 10-byte Folded Reload
	fstpt	(%rsp)
	fstpt	16(%rsp)
	leaq	984(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZN5boost4math6detail24regularised_gamma_prefixIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS0_7lanczos12lanczos17m64EEET_SD_SD_RKT0_RKT1_
	fldt	.LCPI12_2(%rip)
	fucompi	%st(1)
	jae	.LBB12_7
# BB#9:
	fstpt	40(%rsp)                # 10-byte Folded Spill
	testb	%bpl, %bpl
	je	.LBB12_17
# BB#10:
	leaq	1024(%rsp), %rdi
	movl	$61, %esi
	callq	fegetexceptflag
	movl	$61, %edi
	callq	feclearexcept
.Ltmp104:
	fldt	148(%rsp)               # 10-byte Folded Reload
	fstpt	16(%rsp)
	fldt	52(%rsp)                # 10-byte Folded Reload
	fstpt	(%rsp)
	leaq	1016(%rsp), %rdi
	callq	_ZN5boost4math6detail22tgamma_delta_ratio_impIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_RKT0_
.Ltmp105:
# BB#11:
	fld	%st(0)
	fstpt	52(%rsp)                # 10-byte Folded Spill
	fabs
	fldt	.LCPI12_3(%rip)
	fxch	%st(1)
	fucompi	%st(1)
	fstp	%st(0)
	ja	.LBB12_12
# BB#16:                                # %_ZN5boost4math18tgamma_delta_ratioIeeNS0_8policies6policyINS2_13promote_floatILb0EEENS2_14promote_doubleILb0EEENS2_14default_policyES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEENS0_5tools12promote_argsIT_T0_ffffE4typeESC_SD_RKT1_.exit
	leaq	1024(%rsp), %rdi
	movl	$61, %esi
	callq	fesetexceptflag
	fldt	40(%rsp)                # 10-byte Folded Reload
	fldt	52(%rsp)                # 10-byte Folded Reload
	fdivrp	%st(1)
	fstpt	52(%rsp)                # 10-byte Folded Spill
	fldt	148(%rsp)               # 10-byte Folded Reload
	fld	%st(0)
	fstpt	148(%rsp)               # 10-byte Folded Spill
	fstpt	16(%rsp)
	fldt	76(%rsp)                # 10-byte Folded Reload
	fstpt	(%rsp)
	callq	powl
	fldt	52(%rsp)                # 10-byte Folded Reload
	fdivp	%st(1)
	fldt	88(%rsp)                # 10-byte Folded Reload
	fstpt	88(%rsp)                # 10-byte Folded Spill
	jmp	.LBB12_18
.LBB12_7:
	fstp	%st(0)
	fldt	136(%rsp)               # 10-byte Folded Reload
	jmp	.LBB12_8
.LBB12_17:
	fldt	88(%rsp)                # 10-byte Folded Reload
	fld	%st(0)
	fstpt	88(%rsp)                # 10-byte Folded Spill
	fstpt	16(%rsp)
	fldt	148(%rsp)               # 10-byte Folded Reload
	fld	%st(0)
	fstpt	148(%rsp)               # 10-byte Folded Spill
	fld	%st(0)
	fstpt	148(%rsp)               # 10-byte Folded Spill
	fstpt	(%rsp)
	movq	%rbx, %rdi
	callq	_ZN5boost4math6detail18full_igamma_prefixIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_RKT0_
	fstpt	52(%rsp)                # 10-byte Folded Spill
	fldt	148(%rsp)               # 10-byte Folded Reload
	fstpt	16(%rsp)
	fldt	76(%rsp)                # 10-byte Folded Reload
	fstpt	(%rsp)
	callq	powl
	fldt	52(%rsp)                # 10-byte Folded Reload
	fdivp	%st(1)
.LBB12_18:
	fldt	148(%rsp)               # 10-byte Folded Reload
	fld	%st(0)
	fstpt	148(%rsp)               # 10-byte Folded Spill
	fstpt	148(%rsp)               # 10-byte Folded Spill
	fldt	100(%rsp)               # 10-byte Folded Reload
	fmulp	%st(1)
	fstpt	100(%rsp)               # 10-byte Folded Spill
	leaq	176(%rsp), %rdi
	xorl	%esi, %esi
	movl	$800, %edx              # imm = 0x320
	callq	memset
	fld1
	fstpt	176(%rsp)
	leaq	1048(%rsp), %rdi
	movl	$61, %esi
	callq	fegetexceptflag
	movl	$61, %edi
	callq	feclearexcept
.Ltmp106:
	fldt	88(%rsp)                # 10-byte Folded Reload
	fstpt	16(%rsp)
	fldt	148(%rsp)               # 10-byte Folded Reload
	fstpt	(%rsp)
	leaq	1040(%rsp), %rdx
	movl	$1, %edi
	movl	$1, %esi
	xorl	%ecx, %ecx
	callq	_ZN5boost4math6detail20gamma_incomplete_impIeNS0_8policies6policyINS3_13promote_floatILb0EEENS3_14promote_doubleILb0EEENS3_14default_policyES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEET_SB_SB_bbRKT0_PSB_
.Ltmp107:
# BB#19:
	fld	%st(0)
	fstpt	88(%rsp)                # 10-byte Folded Spill
	fabs
	fldt	.LCPI12_3(%rip)
	fxch	%st(1)
	fucompi	%st(1)
	fstp	%st(0)
	ja	.LBB12_20
# BB#23:           