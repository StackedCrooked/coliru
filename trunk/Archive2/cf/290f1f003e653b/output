Item::Item(const Args& ...) [with Args = {main()::<lambda()>}; <template-parameter-1-2> = void]
Item::Item(const Item&)
Item& Item::operator=(const Item&)
Item& Item::operator=(Item&&)
Item::Item(Item&&)
Item& Item::operator=(Item&&)
Item::Item(const Item&)
Item::Item(const Args& ...) [with Args = {main()::<lambda(int)>}; <template-parameter-1-2> = void]
Item& Item::operator=(Item&&)
Item::~Item()
Item::~Item()
Item::~Item()
Item::~Item()
Item::~Item()
