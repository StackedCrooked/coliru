In file included from /usr/local/include/boost/fusion/view/transform_view/transform_view_iterator.hpp:18:0,
                 from /usr/local/include/boost/fusion/view/transform_view/transform_view.hpp:15,
                 from /usr/local/include/boost/fusion/algorithm/transformation/transform.hpp:11,
                 from /usr/local/include/boost/fusion/include/transform.hpp:11,
                 from /usr/local/include/boost/proto/fusion.hpp:24,
                 from /usr/local/include/boost/proto/core.hpp:21,
                 from /usr/local/include/boost/proto/proto.hpp:12,
                 from /usr/local/include/boost/spirit/home/support/meta_compiler.hpp:19,
                 from /usr/local/include/boost/spirit/home/qi/meta_compiler.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi/action/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from /usr/local/include/boost/spirit/include/qi.hpp:16,
                 from main.cpp:2:
/usr/local/include/boost/fusion/view/transform_view/detail/value_of_impl.hpp: In instantiation of 'struct boost::fusion::extension::value_of_impl<boost::fusion::transform_view_iterator_tag>::apply<boost::fusion::transform_view_iterator<boost::fusion::mpl_iterator<boost::mpl::aux::filter_iter<boost::mpl::fusion_iterator<boost::fusion::cons_iterator<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> > > >, boost::mpl::fusion_iterator<boost::fusion::cons_iterator<boost::fusion::nil_> >, boost::mpl::protect<boost::mpl::bind1<boost::mpl::quote1<boost::spirit::repository::qi::is_kwd_parser, mpl_::void_>, mpl_::arg<-1> >, 0> > >, boost::spirit::repository::qi::detail::string_keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >, boost::mpl::filter_view<boost::mpl::v_item<mpl_::integral_c<int, 1>, boost::mpl::v_item<mpl_::integral_c<int, 0>, boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, 0>, 0>, boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>::is_kwd_parser_filter<mpl_::arg<-1> > >, boost::array<bool, 2ul>, boost::spirit::unused_type>::build_char_type_sequence<boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > > >::element_char_type> >':
/usr/local/include/boost/fusion/iterator/value_of.hpp:51:16:   required from 'struct boost::fusion::result_of::value_of<boost::fusion::transform_view_iterator<boost::fusion::mpl_iterator<boost::mpl::aux::filter_iter<boost::mpl::fusion_iterator<boost::fusion::cons_iterator<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> > > >, boost::mpl::fusion_iterator<boost::fusion::cons_iterator<boost::fusion::nil_> >, boost::mpl::protect<boost::mpl::bind1<boost::mpl::quote1<boost::spirit::repository::qi::is_kwd_parser, mpl_::void_>, mpl_::arg<-1> >, 0> > >, boost::spirit::repository::qi::detail::string_keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >, boost::mpl::filter_view<boost::mpl::v_item<mpl_::integral_c<int, 1>, boost::mpl::v_item<mpl_::integral_c<int, 0>, boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, 0>, 0>, boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>::is_kwd_parser_filter<mpl_::arg<-1> > >, boost::array<bool, 2ul>, boost::spirit::unused_type>::build_char_type_sequence<boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > > >::element_char_type> >'
/usr/local/include/boost/fusion/iterator/mpl/fusion_iterator.hpp:47:70:   required from 'struct boost::mpl::fusion_iterator<boost::fusion::transform_view_iterator<boost::fusion::mpl_iterator<boost::mpl::aux::filter_iter<boost::mpl::fusion_iterator<boost::fusion::cons_iterator<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> > > >, boost::mpl::fusion_iterator<boost::fusion::cons_iterator<boost::fusion::nil_> >, boost::mpl::protect<boost::mpl::bind1<boost::mpl::quote1<boost::spirit::repository::qi::is_kwd_parser, mpl_::void_>, mpl_::arg<-1> >, 0> > >, boost::spirit::repository::qi::detail::string_keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >, boost::mpl::filter_view<boost::mpl::v_item<mpl_::integral_c<int, 1>, boost::mpl::v_item<mpl_::integral_c<int, 0>, boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, 0>, 0>, boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>::is_kwd_parser_filter<mpl_::arg<-1> > >, boost::array<bool, 2ul>, boost::spirit::unused_type>::build_char_type_sequence<boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > > >::element_char_type> >'
/usr/local/include/boost/mpl/deref.hpp:30:37:   required from 'struct boost::mpl::deref<boost::mpl::fusion_iterator<boost::fusion::transform_view_iterator<boost::fusion::mpl_iterator<boost::mpl::aux::filter_iter<boost::mpl::fusion_iterator<boost::fusion::cons_iterator<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> > > >, boost::mpl::fusion_iterator<boost::fusion::cons_iterator<boost::fusion::nil_> >, boost::mpl::protect<boost::mpl::bind1<boost::mpl::quote1<boost::spirit::repository::qi::is_kwd_parser, mpl_::void_>, mpl_::arg<-1> >, 0> > >, boost::spirit::repository::qi::detail::string_keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >, boost::mpl::filter_view<boost::mpl::v_item<mpl_::integral_c<int, 1>, boost::mpl::v_item<mpl_::integral_c<int, 0>, boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, 0>, 0>, boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>::is_kwd_parser_filter<mpl_::arg<-1> > >, boost::array<bool, 2ul>, boost::spirit::unused_type>::build_char_type_sequence<boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > > >::element_char_type> > >'
/usr/local/include/boost/mpl/aux_/preprocessed/gcc/fold_impl.hpp:67:85:   required from 'struct boost::mpl::aux::fold_impl<2, boost::mpl::fusion_iterator<boost::fusion::transform_view_iterator<boost::fusion::mpl_iterator<boost::mpl::aux::filter_iter<boost::mpl::fusion_iterator<boost::fusion::cons_iterator<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> > > >, boost::mpl::fusion_iterator<boost::fusion::cons_iterator<boost::fusion::nil_> >, boost::mpl::protect<boost::mpl::bind1<boost::mpl::quote1<boost::spirit::repository::qi::is_kwd_parser, mpl_::void_>, mpl_::arg<-1> >, 0> > >, boost::spirit::repository::qi::detail::string_keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >, boost::mpl::filter_view<boost::mpl::v_item<mpl_::integral_c<int, 1>, boost::mpl::v_item<mpl_::integral_c<int, 0>, boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, 0>, 0>, boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>::is_kwd_parser_filter<mpl_::arg<-1> > >, boost::array<bool, 2ul>, boost::spirit::unused_type>::build_char_type_sequence<boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > > >::element_char_type> >, boost::mpl::fusion_iterator<boost::fusion::transform_view_iterator<boost::fusion::mpl_iterator<boost::mpl::aux::filter_iter<boost::mpl::fusion_iterator<boost::fusion::cons_iterator<boost::fusion::nil_> >, boost::mpl::fusion_iterator<boost::fusion::cons_iterator<boost::fusion::nil_> >, boost::mpl::protect<boost::mpl::bind1<boost::mpl::quote1<boost::spirit::repository::qi::is_kwd_parser, mpl_::void_>, mpl_::arg<-1> >, 0> > >, boost::spirit::repository::qi::detail::string_keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >, boost::mpl::filter_view<boost::mpl::v_item<mpl_::integral_c<int, 1>, boost::mpl::v_item<mpl_::integral_c<int, 0>, boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, 0>, 0>, boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>::is_kwd_parser_filter<mpl_::arg<-1> > >, boost::array<bool, 2ul>, boost::spirit::unused_type>::build_char_type_sequence<boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > > >::element_char_type> >, boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::mpl::if_<boost::mpl::contains<mpl_::arg<1>, mpl_::arg<2> >, mpl_::arg<1>, boost::mpl::push_back<mpl_::arg<1>, mpl_::arg<2> > > >'
/usr/local/include/boost/mpl/fold.hpp:39:18:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/boost/spirit/repository/home/qi/operator/detail/keywords.hpp:219:26:   required from 'struct boost::spirit::repository::qi::detail::string_keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >, boost::mpl::filter_view<boost::mpl::v_item<mpl_::integral_c<int, 1>, boost::mpl::v_item<mpl_::integral_c<int, 0>, boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, 0>, 0>, boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>::is_kwd_parser_filter<mpl_::arg<-1> > >, boost::array<bool, 2ul>, boost::spirit::unused_type>'
/usr/local/include/boost/spirit/repository/home/qi/operator/keywords.hpp:390:30:   required from 'struct boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>'
/usr/local/include/boost/spirit/home/qi/detail/parse.hpp:84:42:   required from 'static bool boost::spirit::qi::detail::phrase_parse_impl<Expr, typename boost::enable_if<boost::spirit::traits::matches<boost::spirit::qi::domain, Expr> >::type>::call(Iterator&, Iterator, const Expr&, const Skipper&, boost::spirit::qi::skip_flag) [with Iterator = __gnu_cxx::__normal_iterator<char*, std::basic_string<char> >; Skipper = boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii> >, 0l>; Expr = boost::proto::exprns_::expr<boost::proto::tagns_::tag::divides, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::repository::tag::kwd, boost::fusion::vector1<const char (&)[2]> > >, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::double_>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&>, 2l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::repository::tag::kwd, boost::fusion::vector1<const char (&)[2]> > >, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::double_>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&>, 2l>&>, 2l>]'
/usr/local/include/boost/spirit/home/qi/parse.hpp:118:50:   required from 'bool boost::spirit::qi::phrase_parse(Iterator&, Iterator, const Expr&, const Skipper&, boost::spirit::qi::skip_flag) [with Iterator = __gnu_cxx::__normal_iterator<char*, std::basic_string<char> >; Expr = boost::proto::exprns_::expr<boost::proto::tagns_::tag::divides, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::repository::tag::kwd, boost::fusion::vector1<const char (&)[2]> > >, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::double_>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&>, 2l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::repository::tag::kwd, boost::fusion::vector1<const char (&)[2]> > >, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::double_>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&>, 2l>&>, 2l>; Skipper = boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii> >, 0l>]'
main.cpp:18:96:   required from 'bool difference(Iterator, Iterator, double&) [with Iterator = __gnu_cxx::__normal_iterator<char*, std::basic_string<char> >]'
main.cpp:27:72:   required from here
/usr/local/include/boost/fusion/view/transform_view/detail/value_of_impl.hpp:37:79: error: no type named 'type' in 'struct boost::mpl::apply<boost::fusion::detail::apply_transform_result<boost::spirit::repository::qi::detail::string_keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >, boost::mpl::filter_view<boost::mpl::v_item<mpl_::integral_c<int, 1>, boost::mpl::v_item<mpl_::integral_c<int, 0>, boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, 0>, 0>, boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>::is_kwd_parser_filter<mpl_::arg<-1> > >, boost::array<bool, 2ul>, boost::spirit::unused_type>::build_char_type_sequence<boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > > >::element_char_type>, boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, mpl_::na, mpl_::na, mpl_::na, mpl_::na>'
                 typedef typename mpl::apply<transform_type, value_type>::type type;
                                                                               ^
In file included from /usr/local/include/boost/proto/detail/deduce_domain.hpp:27:0,
                 from /usr/local/include/boost/proto/domain.hpp:19,
                 from /usr/local/include/boost/proto/traits.hpp:32,
                 from /usr/local/include/boost/proto/expr.hpp:27,
                 from /usr/local/include/boost/proto/core.hpp:17,
                 from /usr/local/include/boost/proto/proto.hpp:12,
                 from /usr/local/include/boost/spirit/home/support/meta_compiler.hpp:19,
                 from /usr/local/include/boost/spirit/home/qi/meta_compiler.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi/action/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from /usr/local/include/boost/spirit/include/qi.hpp:16,
                 from main.cpp:2:
/usr/local/include/boost/spirit/repository/home/qi/operator/detail/keywords.hpp: In instantiation of 'struct boost::spirit::repository::qi::detail::string_keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >, boost::mpl::filter_view<boost::mpl::v_item<mpl_::integral_c<int, 1>, boost::mpl::v_item<mpl_::integral_c<int, 0>, boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, 0>, 0>, boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>::is_kwd_parser_filter<mpl_::arg<-1> > >, boost::array<bool, 2ul>, boost::spirit::unused_type>::get_keyword_char_type<boost::fusion::transform_view<boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >, boost::spirit::repository::qi::detail::string_keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >, boost::mpl::filter_view<boost::mpl::v_item<mpl_::integral_c<int, 1>, boost::mpl::v_item<mpl_::integral_c<int, 0>, boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, 0>, 0>, boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>::is_kwd_parser_filter<mpl_::arg<-1> > >, boost::array<bool, 2ul>, boost::spirit::unused_type>::build_char_type_sequence<boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > > >::element_char_type, boost::fusion::void_> >':
/usr/local/include/boost/spirit/repository/home/qi/operator/detail/keywords.hpp:219:26:   required from 'struct boost::spirit::repository::qi::detail::string_keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >, boost::mpl::filter_view<boost::mpl::v_item<mpl_::integral_c<int, 1>, boost::mpl::v_item<mpl_::integral_c<int, 0>, boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, 0>, 0>, boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>::is_kwd_parser_filter<mpl_::arg<-1> > >, boost::array<bool, 2ul>, boost::spirit::unused_type>'
/usr/local/include/boost/spirit/repository/home/qi/operator/keywords.hpp:390:30:   required from 'struct boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>'
/usr/local/include/boost/spirit/home/qi/detail/parse.hpp:84:42:   required from 'static bool boost::spirit::qi::detail::phrase_parse_impl<Expr, typename boost::enable_if<boost::spirit::traits::matches<boost::spirit::qi::domain, Expr> >::type>::call(Iterator&, Iterator, const Expr&, const Skipper&, boost::spirit::qi::skip_flag) [with Iterator = __gnu_cxx::__normal_iterator<char*, std::basic_string<char> >; Skipper = boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii> >, 0l>; Expr = boost::proto::exprns_::expr<boost::proto::tagns_::tag::divides, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::repository::tag::kwd, boost::fusion::vector1<const char (&)[2]> > >, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::double_>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&>, 2l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::repository::tag::kwd, boost::fusion::vector1<const char (&)[2]> > >, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::double_>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&>, 2l>&>, 2l>]'
/usr/local/include/boost/spirit/home/qi/parse.hpp:118:50:   required from 'bool boost::spirit::qi::phrase_parse(Iterator&, Iterator, const Expr&, const Skipper&, boost::spirit::qi::skip_flag) [with Iterator = __gnu_cxx::__normal_iterator<char*, std::basic_string<char> >; Expr = boost::proto::exprns_::expr<boost::proto::tagns_::tag::divides, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::repository::tag::kwd, boost::fusion::vector1<const char (&)[2]> > >, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::double_>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&>, 2l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::repository::tag::kwd, boost::fusion::vector1<const char (&)[2]> > >, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::double_>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&>, 2l>&>, 2l>; Skipper = boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii> >, 0l>]'
main.cpp:18:96:   required from 'bool difference(Iterator, Iterator, double&) [with Iterator = __gnu_cxx::__normal_iterator<char*, std::basic_string<char> >]'
main.cpp:27:72:   required from here
/usr/local/include/boost/spirit/repository/home/qi/operator/detail/keywords.hpp:203:21: error: creating pointer to member of non-class type '<type error>'
                     BOOST_MPL_ASSERT_RELATION( mpl::size<no_duplicate_char_types>::value, ==, 1 );
                     ^
In file included from /usr/local/include/boost/fusion/view/transform_view/transform_view_iterator.hpp:18:0,
                 from /usr/local/include/boost/fusion/view/transform_view/transform_view.hpp:15,
                 from /usr/local/include/boost/fusion/algorithm/transformation/transform.hpp:11,
                 from /usr/local/include/boost/fusion/include/transform.hpp:11,
                 from /usr/local/include/boost/proto/fusion.hpp:24,
                 from /usr/local/include/boost/proto/core.hpp:21,
                 from /usr/local/include/boost/proto/proto.hpp:12,
                 from /usr/local/include/boost/spirit/home/support/meta_compiler.hpp:19,
                 from /usr/local/include/boost/spirit/home/qi/meta_compiler.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi/action/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from /usr/local/include/boost/spirit/include/qi.hpp:16,
                 from main.cpp:2:
/usr/local/include/boost/fusion/view/transform_view/detail/value_of_impl.hpp: In instantiation of 'struct boost::fusion::extension::value_of_impl<boost::fusion::transform_view_iterator_tag>::apply<boost::fusion::transform_view_iterator<boost::fusion::mpl_iterator<boost::mpl::aux::filter_iter<boost::mpl::fusion_iterator<boost::fusion::cons_iterator<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> > > >, boost::mpl::fusion_iterator<boost::fusion::cons_iterator<boost::fusion::nil_> >, boost::mpl::protect<boost::mpl::bind1<boost::mpl::quote1<boost::spirit::repository::qi::is_kwd_parser, mpl_::void_>, mpl_::arg<-1> >, 0> > >, boost::spirit::repository::qi::detail::string_keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >, boost::mpl::filter_view<boost::mpl::v_item<mpl_::integral_c<int, 1>, boost::mpl::v_item<mpl_::integral_c<int, 0>, boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, 0>, 0>, boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>::is_kwd_parser_filter<mpl_::arg<-1> > >, boost::array<bool, 2ul>, boost::spirit::unused_type>::build_case_type_sequence<boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > > >::element_case_type> >':
/usr/local/include/boost/fusion/iterator/value_of.hpp:51:16:   required from 'struct boost::fusion::result_of::value_of<boost::fusion::transform_view_iterator<boost::fusion::mpl_iterator<boost::mpl::aux::filter_iter<boost::mpl::fusion_iterator<boost::fusion::cons_iterator<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> > > >, boost::mpl::fusion_iterator<boost::fusion::cons_iterator<boost::fusion::nil_> >, boost::mpl::protect<boost::mpl::bind1<boost::mpl::quote1<boost::spirit::repository::qi::is_kwd_parser, mpl_::void_>, mpl_::arg<-1> >, 0> > >, boost::spirit::repository::qi::detail::string_keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >, boost::mpl::filter_view<boost::mpl::v_item<mpl_::integral_c<int, 1>, boost::mpl::v_item<mpl_::integral_c<int, 0>, boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, 0>, 0>, boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>::is_kwd_parser_filter<mpl_::arg<-1> > >, boost::array<bool, 2ul>, boost::spirit::unused_type>::build_case_type_sequence<boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > > >::element_case_type> >'
/usr/local/include/boost/fusion/iterator/mpl/fusion_iterator.hpp:47:70:   required from 'struct boost::mpl::fusion_iterator<boost::fusion::transform_view_iterator<boost::fusion::mpl_iterator<boost::mpl::aux::filter_iter<boost::mpl::fusion_iterator<boost::fusion::cons_iterator<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> > > >, boost::mpl::fusion_iterator<boost::fusion::cons_iterator<boost::fusion::nil_> >, boost::mpl::protect<boost::mpl::bind1<boost::mpl::quote1<boost::spirit::repository::qi::is_kwd_parser, mpl_::void_>, mpl_::arg<-1> >, 0> > >, boost::spirit::repository::qi::detail::string_keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >, boost::mpl::filter_view<boost::mpl::v_item<mpl_::integral_c<int, 1>, boost::mpl::v_item<mpl_::integral_c<int, 0>, boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, 0>, 0>, boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>::is_kwd_parser_filter<mpl_::arg<-1> > >, boost::array<bool, 2ul>, boost::spirit::unused_type>::build_case_type_sequence<boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > > >::element_case_type> >'
/usr/local/include/boost/mpl/deref.hpp:30:37:   required from 'struct boost::mpl::deref<boost::mpl::fusion_iterator<boost::fusion::transform_view_iterator<boost::fusion::mpl_iterator<boost::mpl::aux::filter_iter<boost::mpl::fusion_iterator<boost::fusion::cons_iterator<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> > > >, boost::mpl::fusion_iterator<boost::fusion::cons_iterator<boost::fusion::nil_> >, boost::mpl::protect<boost::mpl::bind1<boost::mpl::quote1<boost::spirit::repository::qi::is_kwd_parser, mpl_::void_>, mpl_::arg<-1> >, 0> > >, boost::spirit::repository::qi::detail::string_keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >, boost::mpl::filter_view<boost::mpl::v_item<mpl_::integral_c<int, 1>, boost::mpl::v_item<mpl_::integral_c<int, 0>, boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, 0>, 0>, boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>::is_kwd_parser_filter<mpl_::arg<-1> > >, boost::array<bool, 2ul>, boost::spirit::unused_type>::build_case_type_sequence<boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > > >::element_case_type> > >'
/usr/local/include/boost/mpl/aux_/preprocessed/gcc/fold_impl.hpp:67:85:   required from 'struct boost::mpl::aux::fold_impl<2, boost::mpl::fusion_iterator<boost::fusion::transform_view_iterator<boost::fusion::mpl_iterator<boost::mpl::aux::filter_iter<boost::mpl::fusion_iterator<boost::fusion::cons_iterator<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> > > >, boost::mpl::fusion_iterator<boost::fusion::cons_iterator<boost::fusion::nil_> >, boost::mpl::protect<boost::mpl::bind1<boost::mpl::quote1<boost::spirit::repository::qi::is_kwd_parser, mpl_::void_>, mpl_::arg<-1> >, 0> > >, boost::spirit::repository::qi::detail::string_keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >, boost::mpl::filter_view<boost::mpl::v_item<mpl_::integral_c<int, 1>, boost::mpl::v_item<mpl_::integral_c<int, 0>, boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, 0>, 0>, boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>::is_kwd_parser_filter<mpl_::arg<-1> > >, boost::array<bool, 2ul>, boost::spirit::unused_type>::build_case_type_sequence<boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > > >::element_case_type> >, boost::mpl::fusion_iterator<boost::fusion::transform_view_iterator<boost::fusion::mpl_iterator<boost::mpl::aux::filter_iter<boost::mpl::fusion_iterator<boost::fusion::cons_iterator<boost::fusion::nil_> >, boost::mpl::fusion_iterator<boost::fusion::cons_iterator<boost::fusion::nil_> >, boost::mpl::protect<boost::mpl::bind1<boost::mpl::quote1<boost::spirit::repository::qi::is_kwd_parser, mpl_::void_>, mpl_::arg<-1> >, 0> > >, boost::spirit::repository::qi::detail::string_keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >, boost::mpl::filter_view<boost::mpl::v_item<mpl_::integral_c<int, 1>, boost::mpl::v_item<mpl_::integral_c<int, 0>, boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, 0>, 0>, boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>::is_kwd_parser_filter<mpl_::arg<-1> > >, boost::array<bool, 2ul>, boost::spirit::unused_type>::build_case_type_sequence<boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > > >::element_case_type> >, mpl_::integral_c<long unsigned int, 0ul>, boost::mpl::protect<boost::mpl::aux::next_if<boost::mpl::equal_to<mpl_::arg<-1>, mpl_::bool_<true> > >, 0> >'
/usr/local/include/boost/mpl/fold.hpp:39:18:   required from 'struct boost::mpl::fold<boost::fusion::transform_view<boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >, boost::spirit::repository::qi::detail::string_keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >, boost::mpl::filter_view<boost::mpl::v_item<mpl_::integral_c<int, 1>, boost::mpl::v_item<mpl_::integral_c<int, 0>, boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, 0>, 0>, boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>::is_kwd_parser_filter<mpl_::arg<-1> > >, boost::array<bool, 2ul>, boost::spirit::unused_type>::build_case_type_sequence<boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > > >::element_case_type, boost::fusion::void_>, mpl_::integral_c<long unsigned int, 0ul>, boost::mpl::protect<boost::mpl::aux::next_if<boost::mpl::equal_to<mpl_::arg<-1>, mpl_::bool_<true> > >, 0> >'
/usr/local/include/boost/mpl/count_if.hpp:65:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/boost/spirit/repository/home/qi/operator/detail/keywords.hpp:299:85:   required from 'struct boost::spirit::repository::qi::detail::string_keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >, boost::mpl::filter_view<boost::mpl::v_item<mpl_::integral_c<int, 1>, boost::mpl::v_item<mpl_::integral_c<int, 0>, boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, 0>, 0>, boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>::is_kwd_parser_filter<mpl_::arg<-1> > >, boost::array<bool, 2ul>, boost::spirit::unused_type>'
/usr/local/include/boost/spirit/repository/home/qi/operator/keywords.hpp:390:30:   required from 'struct boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>'
/usr/local/include/boost/spirit/home/qi/detail/parse.hpp:84:42:   required from 'static bool boost::spirit::qi::detail::phrase_parse_impl<Expr, typename boost::enable_if<boost::spirit::traits::matches<boost::spirit::qi::domain, Expr> >::type>::call(Iterator&, Iterator, const Expr&, const Skipper&, boost::spirit::qi::skip_flag) [with Iterator = __gnu_cxx::__normal_iterator<char*, std::basic_string<char> >; Skipper = boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii> >, 0l>; Expr = boost::proto::exprns_::expr<boost::proto::tagns_::tag::divides, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::repository::tag::kwd, boost::fusion::vector1<const char (&)[2]> > >, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::double_>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&>, 2l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::repository::tag::kwd, boost::fusion::vector1<const char (&)[2]> > >, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::double_>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&>, 2l>&>, 2l>]'
/usr/local/include/boost/spirit/home/qi/parse.hpp:118:50:   required from 'bool boost::spirit::qi::phrase_parse(Iterator&, Iterator, const Expr&, const Skipper&, boost::spirit::qi::skip_flag) [with Iterator = __gnu_cxx::__normal_iterator<char*, std::basic_string<char> >; Expr = boost::proto::exprns_::expr<boost::proto::tagns_::tag::divides, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::repository::tag::kwd, boost::fusion::vector1<const char (&)[2]> > >, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::double_>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&>, 2l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::repository::tag::kwd, boost::fusion::vector1<const char (&)[2]> > >, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::double_>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&>, 2l>&>, 2l>; Skipper = boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii> >, 0l>]'
main.cpp:18:96:   required from 'bool difference(Iterator, Iterator, double&) [with Iterator = __gnu_cxx::__normal_iterator<char*, std::basic_string<char> >]'
main.cpp:27:72:   required from here
/usr/local/include/boost/fusion/view/transform_view/detail/value_of_impl.hpp:37:79: error: no type named 'type' in 'struct boost::mpl::apply<boost::fusion::detail::apply_transform_result<boost::spirit::repository::qi::detail::string_keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >, boost::mpl::filter_view<boost::mpl::v_item<mpl_::integral_c<int, 1>, boost::mpl::v_item<mpl_::integral_c<int, 0>, boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, 0>, 0>, boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>::is_kwd_parser_filter<mpl_::arg<-1> > >, boost::array<bool, 2ul>, boost::spirit::unused_type>::build_case_type_sequence<boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > > >::element_case_type>, boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, mpl_::na, mpl_::na, mpl_::na, mpl_::na>'
                 typedef typename mpl::apply<transform_type, value_type>::type type;
                                                                               ^
In file included from /usr/local/include/boost/spirit/repository/home/qi/operator/keywords.hpp:45:0,
                 from /usr/local/include/boost/spirit/repository/include/qi_keywords.hpp:17,
                 from main.cpp:5:
/usr/local/include/boost/spirit/repository/home/qi/operator/detail/keywords.hpp: In instantiation of 'struct boost::spirit::repository::qi::detail::string_keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >, boost::mpl::filter_view<boost::mpl::v_item<mpl_::integral_c<int, 1>, boost::mpl::v_item<mpl_::integral_c<int, 0>, boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, 0>, 0>, boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>::is_kwd_parser_filter<mpl_::arg<-1> > >, boost::array<bool, 2ul>, boost::spirit::unused_type>::get_nb_case_types<boost::fusion::transform_view<boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >, boost::spirit::repository::qi::detail::string_keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >, boost::mpl::filter_view<boost::mpl::v_item<mpl_::integral_c<int, 1>, boost::mpl::v_item<mpl_::integral_c<int, 0>, boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, 0>, 0>, boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>::is_kwd_parser_filter<mpl_::arg<-1> > >, boost::array<bool, 2ul>, boost::spirit::unused_type>::build_case_type_sequence<boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > > >::element_case_type, boost::fusion::void_>, mpl_::bool_<true> >':
/usr/local/include/boost/spirit/repository/home/qi/operator/detail/keywords.hpp:299:85:   required from 'struct boost::spirit::repository::qi::detail::string_keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >, boost::mpl::filter_view<boost::mpl::v_item<mpl_::integral_c<int, 1>, boost::mpl::v_item<mpl_::integral_c<int, 0>, boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, 0>, 0>, boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>::is_kwd_parser_filter<mpl_::arg<-1> > >, boost::array<bool, 2ul>, boost::spirit::unused_type>'
/usr/local/include/boost/spirit/repository/home/qi/operator/keywords.hpp:390:30:   required from 'struct boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>'
/usr/local/include/boost/spirit/home/qi/detail/parse.hpp:84:42:   required from 'static bool boost::spirit::qi::detail::phrase_parse_impl<Expr, typename boost::enable_if<boost::spirit::traits::matches<boost::spirit::qi::domain, Expr> >::type>::call(Iterator&, Iterator, const Expr&, const Skipper&, boost::spirit::qi::skip_flag) [with Iterator = __gnu_cxx::__normal_iterator<char*, std::basic_string<char> >; Skipper = boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii> >, 0l>; Expr = boost::proto::exprns_::expr<boost::proto::tagns_::tag::divides, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::repository::tag::kwd, boost::fusion::vector1<const char (&)[2]> > >, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::double_>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&>, 2l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::repository::tag::kwd, boost::fusion::vector1<const char (&)[2]> > >, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::double_>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&>, 2l>&>, 2l>]'
/usr/local/include/boost/spirit/home/qi/parse.hpp:118:50:   required from 'bool boost::spirit::qi::phrase_parse(Iterator&, Iterator, const Expr&, const Skipper&, boost::spirit::qi::skip_flag) [with Iterator = __gnu_cxx::__normal_iterator<char*, std::basic_string<char> >; Expr = boost::proto::exprns_::expr<boost::proto::tagns_::tag::divides, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::repository::tag::kwd, boost::fusion::vector1<const char (&)[2]> > >, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::double_>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&>, 2l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::repository::tag::kwd, boost::fusion::vector1<const char (&)[2]> > >, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::double_>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&>, 2l>&>, 2l>; Skipper = boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii> >, 0l>]'
main.cpp:18:96:   required from 'bool difference(Iterator, Iterator, double&) [with Iterator = __gnu_cxx::__normal_iterator<char*, std::basic_string<char> >]'
main.cpp:27:72:   required from here
/usr/local/include/boost/spirit/repository/home/qi/operator/detail/keywords.hpp:292:33: error: no type named 'type' in 'struct boost::mpl::count_if<boost::fusion::transform_view<boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >, boost::spirit::repository::qi::detail::string_keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >, boost::mpl::filter_view<boost::mpl::v_item<mpl_::integral_c<int, 1>, boost::mpl::v_item<mpl_::integral_c<int, 0>, boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, 0>, 0>, boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>::is_kwd_parser_filter<mpl_::arg<-1> > >, boost::array<bool, 2ul>, boost::spirit::unused_type>::build_case_type_sequence<boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > > >::element_case_type, boost::fusion::void_>, boost::mpl::equal_to<mpl_::arg<-1>, mpl_::bool_<true> > >'
                         >::type type;
                                 ^
/usr/local/include/boost/spirit/repository/home/qi/operator/detail/keywords.hpp: In instantiation of 'struct boost::spirit::repository::qi::detail::string_keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >, boost::mpl::filter_view<boost::mpl::v_item<mpl_::integral_c<int, 1>, boost::mpl::v_item<mpl_::integral_c<int, 0>, boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, 0>, 0>, boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>::is_kwd_parser_filter<mpl_::arg<-1> > >, boost::array<bool, 2ul>, boost::spirit::unused_type>::get_nb_case_types<boost::fusion::transform_view<boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >, boost::spirit::repository::qi::detail::string_keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >, boost::mpl::filter_view<boost::mpl::v_item<mpl_::integral_c<int, 1>, boost::mpl::v_item<mpl_::integral_c<int, 0>, boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, 0>, 0>, boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>::is_kwd_parser_filter<mpl_::arg<-1> > >, boost::array<bool, 2ul>, boost::spirit::unused_type>::build_case_type_sequence<boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > > >::element_case_type, boost::fusion::void_>, mpl_::bool_<false> >':
/usr/local/include/boost/spirit/repository/home/qi/operator/detail/keywords.hpp:300:86:   required from 'struct boost::spirit::repository::qi::detail::string_keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >, boost::mpl::filter_view<boost::mpl::v_item<mpl_::integral_c<int, 1>, boost::mpl::v_item<mpl_::integral_c<int, 0>, boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, 0>, 0>, boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>::is_kwd_parser_filter<mpl_::arg<-1> > >, boost::array<bool, 2ul>, boost::spirit::unused_type>'
/usr/local/include/boost/spirit/repository/home/qi/operator/keywords.hpp:390:30:   required from 'struct boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>'
/usr/local/include/boost/spirit/home/qi/detail/parse.hpp:84:42:   required from 'static bool boost::spirit::qi::detail::phrase_parse_impl<Expr, typename boost::enable_if<boost::spirit::traits::matches<boost::spirit::qi::domain, Expr> >::type>::call(Iterator&, Iterator, const Expr&, const Skipper&, boost::spirit::qi::skip_flag) [with Iterator = __gnu_cxx::__normal_iterator<char*, std::basic_string<char> >; Skipper = boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii> >, 0l>; Expr = boost::proto::exprns_::expr<boost::proto::tagns_::tag::divides, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::repository::tag::kwd, boost::fusion::vector1<const char (&)[2]> > >, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::double_>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&>, 2l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::repository::tag::kwd, boost::fusion::vector1<const char (&)[2]> > >, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::double_>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&>, 2l>&>, 2l>]'
/usr/local/include/boost/spirit/home/qi/parse.hpp:118:50:   required from 'bool boost::spirit::qi::phrase_parse(Iterator&, Iterator, const Expr&, const Skipper&, boost::spirit::qi::skip_flag) [with Iterator = __gnu_cxx::__normal_iterator<char*, std::basic_string<char> >; Expr = boost::proto::exprns_::expr<boost::proto::tagns_::tag::divides, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::repository::tag::kwd, boost::fusion::vector1<const char (&)[2]> > >, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::double_>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&>, 2l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::repository::tag::kwd, boost::fusion::vector1<const char (&)[2]> > >, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::double_>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&>, 2l>&>, 2l>; Skipper = boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii> >, 0l>]'
main.cpp:18:96:   required from 'bool difference(Iterator, Iterator, double&) [with Iterator = __gnu_cxx::__normal_iterator<char*, std::basic_string<char> >]'
main.cpp:27:72:   required from here
/usr/local/include/boost/spirit/repository/home/qi/operator/detail/keywords.hpp:292:33: error: no type named 'type' in 'struct boost::mpl::count_if<boost::fusion::transform_view<boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >, boost::spirit::repository::qi::detail::string_keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >, boost::mpl::filter_view<boost::mpl::v_item<mpl_::integral_c<int, 1>, boost::mpl::v_item<mpl_::integral_c<int, 0>, boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, 0>, 0>, boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>::is_kwd_parser_filter<mpl_::arg<-1> > >, boost::array<bool, 2ul>, boost::spirit::unused_type>::build_case_type_sequence<boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > > >::element_case_type, boost::fusion::void_>, boost::mpl::equal_to<mpl_::arg<-1>, mpl_::bool_<false> > >'
/usr/local/include/boost/spirit/repository/home/qi/operator/detail/keywords.hpp: In instantiation of 'boost::spirit::repository::qi::detail::string_keywords<Elements, StringKeywords, IndexList, FlagsType, Modifiers>::string_keywords(Elements&, FlagsType&) [with Elements = boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >; StringKeywords = boost::mpl::filter_view<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::repository::qi::is_kwd_parser<mpl_::arg<-1> > >; IndexList = boost::mpl::filter_view<boost::mpl::v_item<mpl_::integral_c<int, 1>, boost::mpl::v_item<mpl_::integral_c<int, 0>, boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, 0>, 0>, boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>::is_kwd_parser_filter<mpl_::arg<-1> > >; FlagsType = boost::array<bool, 2ul>; Modifiers = boost::spirit::unused_type]':
/usr/local/include/boost/spirit/repository/home/qi/operator/keywords.hpp:207:50:   required from 'boost::spirit::repository::qi::keywords<Elements, Modifiers>::keywords(const Elements&) [with Elements = boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >; Modifiers = boost::spirit::unused_type]'
/usr/local/include/boost/spirit/repository/home/qi/operator/keywords.hpp:406:35:   required from 'boost::spirit::qi::make_composite<boost::proto::tagns_::tag::divides, Elements, Modifiers>::result_type boost::spirit::qi::make_composite<boost::proto::tagns_::tag::divides, Elements, Modifiers>::operator()(Elements, boost::spirit::unused_type) const [with Elements = boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >; Modifiers = boost::spirit::unused_type; boost::spirit::qi::make_composite<boost::proto::tagns_::tag::divides, Elements, Modifiers>::result_type = boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>]'
/usr/local/include/boost/spirit/home/qi/meta_compiler.hpp:111:36:   required from 'typename boost::spirit::make_component<boost::spirit::qi::domain, Tag>::result<boost::spirit::make_component<boost::spirit::qi::domain, Tag>(Elements, Modifiers)>::type boost::spirit::make_component<boost::spirit::qi::domain, Tag>::operator()(const Elements&, const Modifiers&) const [with Elements = boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >; Modifiers = boost::spirit::unused_type; Tag = boost::proto::tagns_::tag::divides; typename boost::spirit::make_component<boost::spirit::qi::domain, Tag>::result<boost::spirit::make_component<boost::spirit::qi::domain, Tag>(Elements, Modifiers)>::type = boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>]'
/usr/local/include/boost/spirit/home/support/make_component.hpp:281:65:   required from 'boost::spirit::detail::make_binary<Domain, Tag, Grammar, true>::impl<Expr, State, Data>::result_type boost::spirit::detail::make_binary<Domain, Tag, Grammar, true>::impl<Expr, State, Data>::operator()(typename boost::spirit::detail::make_binary<Domain, Tag, Grammar, true>::impl<Expr, State, Data>::expr_param, typename boost::spirit::detail::make_binary<Domain, Tag, Grammar, true>::impl<Expr, State, Data>::state_param, typename boost::spirit::detail::make_binary<Domain, Tag, Grammar, true>::impl<Expr, State, Data>::data_param) const [with Expr = const boost::proto::exprns_::expr<boost::proto::tagns_::tag::divides, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::repository::tag::kwd, boost::fusion::vector1<const char (&)[2]> > >, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::double_>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&>, 2l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::repository::tag::kwd, boost::fusion::vector1<const char (&)[2]> > >, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::double_>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&>, 2l>&>, 2l>&; State = const mpl_::void_&; Data = boost::spirit::unused_type&; Domain = boost::spirit::qi::domain; Tag = boost::proto::tagns_::tag::divides; Grammar = boost::spirit::meta_compiler<boost::spirit::qi::domain>::meta_grammar; boost::spirit::detail::make_binary<Domain, Tag, Grammar, true>::impl<Expr, State, Data>::result_type = boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>; typename boost::spirit::detail::make_binary<Domain, Tag, Grammar, true>::impl<Expr, State, Data>::expr_param = const boost::proto::exprns_::expr<boost::proto::tagns_::tag::divides, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::repository::tag::kwd, boost::fusion::vector1<const char (&)[2]> > >, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::double_>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&>, 2l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::repository::tag::kwd, boost::fusion::vector1<const char (&)[2]> > >, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::double_>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&>, 2l>&>, 2l>&; typename boost::spirit::detail::make_binary<Domain, Tag, Grammar, true>::impl<Expr, State, Data>::state_param = const mpl_::void_&; typename boost::spirit::detail::make_binary<Domain, Tag, Grammar, true>::impl<Expr, State, Data>::data_param = boost::spirit::unused_type&]'
/usr/local/include/boost/proto/transform/impl.hpp:255:9:   required from 'typename boost::proto::detail::apply_transform<PrimitiveTransform(const Expr&, const State&, const Data&)>::result_type boost::proto::transform<PrimitiveTransform, X>::operator()(Expr&&, State&&, Data&&) const [with Expr = const boost::proto::exprns_::expr<boost::proto::tagns_::tag::divides, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::repository::tag::kwd, boost::fusion::vector1<const char (&)[2]> > >, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::double_>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&>, 2l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::repository::tag::kwd, boost::fusion::vector1<const char (&)[2]> > >, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::double_>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&>, 2l>&>, 2l>&; State = mpl_::void_; Data = boost::spirit::unused_type&; PrimitiveTransform = boost::proto::switch_<boost::spirit::meta_compiler<boost::spirit::qi::domain>::cases, boost::proto::tag_of<boost::proto::_>()>; X = void; typename boost::proto::detail::apply_transform<PrimitiveTransform(const Expr&, const State&, const Data&)>::result_type = boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>]'
/usr/local/include/boost/spirit/home/support/meta_compiler.hpp:242:62:   required from 'static typename boost::spirit::result_of::compile<Domain, Expr, Modifiers>::type boost::spirit::detail::compiler<Domain>::compile(const Expr&, Modifiers, mpl_::true_) [with Expr = boost::proto::exprns_::expr<boost::proto::tagns_::tag::divides, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::repository::tag::kwd, boost::fusion::vector1<const char (&)[2]> > >, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::double_>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&>, 2l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::repository::tag::kwd, boost::fusion::vector1<const char (&)[2]> > >, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::double_>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&>, 2l>&>, 2l>; Modifiers = boost::spirit::unused_type; Domain = boost::spirit::qi::domain; typename boost::spirit::result_of::compile<Domain, Expr, Modifiers>::type = boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>; mpl_::true_ = mpl_::bool_<true>]'
/usr/local/include/boost/spirit/home/support/meta_compiler.hpp:263:73:   required from 'typename boost::spirit::result_of::compile<Domain, Expr, boost::spirit::unused_type>::type boost::spirit::compile(const Expr&) [with Domain = boost::spirit::qi::domain; Expr = boost::proto::exprns_::expr<boost::proto::tagns_::tag::divides, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::repository::tag::kwd, boost::fusion::vector1<const char (&)[2]> > >, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::double_>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&>, 2l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::repository::tag::kwd, boost::fusion::vector1<const char (&)[2]> > >, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::double_>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&>, 2l>&>, 2l>; typename boost::spirit::result_of::compile<Domain, Expr, boost::spirit::unused_type>::type = boost::spirit::repository::qi::keywords<boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::cons<boost::spirit::repository::qi::kwd_parser<boost::spirit::qi::action<boost::spirit::qi::any_real_parser<double, boost::spirit::qi::real_policies<double> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, const char (&)[2], boost::spirit::repository::qi::kwd_pass_iterator<int>, boost::spirit::has_modifier<boost::spirit::unused_type, boost::spirit::tag::char_code_base<boost::spirit::tag::no_case> >, mpl_::bool_<false> >, boost::fusion::nil_> >, boost::spirit::unused_type>]'
/usr/local/include/boost/spirit/home/qi/detail/parse.hpp:84:42:   required from 'static bool boost::spirit::qi::detail::phrase_parse_impl<Expr, typename boost::enable_if<boost::spirit::traits::matches<boost::spirit::qi::domain, Expr> >::type>::call(Iterator&, Iterator, const Expr&, const Skipper&, boost::spirit::qi::skip_flag) [with Iterator = __gnu_cxx::__normal_iterator<char*, std::basic_string<char> >; Skipper = boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii> >, 0l>; Expr = boost::proto::exprns_::expr<boost::proto::tagns_::tag::divides, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::repository::tag::kwd, boost::fusion::vector1<const char (&)[2]> > >, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::double_>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&>, 2l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::repository::tag::kwd, boost::fusion::vector1<const char (&)[2]> > >, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::double_>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&>, 2l>&>, 2l>]'
/usr/local/include/boost/spirit/home/qi/parse.hpp:118:50:   required from 'bool boost::spirit::qi::phrase_parse(Iterator&, Iterator, const Expr&, const Skipper&, boost::spirit::qi::skip_flag) [with Iterator = __gnu_cxx::__normal_iterator<char*, std::basic_string<char> >; Expr = boost::proto::exprns_::expr<boost::proto::tagns_::tag::divides, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::repository::tag::kwd, boost::fusion::vector1<const char (&)[2]> > >, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::double_>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::plus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&>, 2l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::repository::tag::kwd, boost::fusion::vector1<const char (&)[2]> > >, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::double_>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::minus_assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<double> >, 0l> >, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&>, 2l>&>, 2l>; Skipper = boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii> >, 0l>]'
main.cpp:18:96:   required from 'bool difference(Iterator, Iterator, double&) [with Iterator = __gnu_cxx::__normal_iterator<char*, std::basic_string<char> >]'
main.cpp:27:72:   required from here
/usr/local/include/boost/spirit/repository/home/qi/operator/detail/keywords.hpp:430:99: error: using invalid field 'boost::spirit::repository::qi::detail::string_keywords<Elements, StringKeywords, IndexList, FlagsType, Modifiers>::lookup'
             string_keywords(Elements &elements,FlagsType &flags_init) : lookup(new keywords_type())
                                                                                                   ^
/usr/local/include/boost/spirit/repository/home/qi/operator/detail/keywords.hpp:434:66: error: using invalid field 'boost::spirit::repository::qi::detail::string_keywords<Elements, StringKeywords, IndexList, FlagsType, Modifiers>::lookup'
                 keyword_entry_adder f1(lookup,flags_init,elements);
                                                                  ^
