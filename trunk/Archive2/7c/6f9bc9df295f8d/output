In file included from /usr/local/include/c++/4.9.2/thread:39:0,
                 from main.cpp:1:
/usr/local/include/c++/4.9.2/functional: In instantiation of 'struct std::_Bind_simple<X::foo()::<lambda(X*, int, double)>(int, double)>':
/usr/local/include/c++/4.9.2/thread:137:47:   required from 'std::thread::thread(_Callable&&, _Args&& ...) [with _Callable = X::foo()::<lambda(X*, int, double)>&; _Args = {int, double}]'
main.cpp:9:41:   required from here
/usr/local/include/c++/4.9.2/functional:1665:61: error: no type named 'type' in 'class std::result_of<X::foo()::<lambda(X*, int, double)>(int, double)>'
       typedef typename result_of<_Callable(_Args...)>::type result_type;
                                                             ^
/usr/local/include/c++/4.9.2/functional:1695:9: error: no type named 'type' in 'class std::result_of<X::foo()::<lambda(X*, int, double)>(int, double)>'
         _M_invoke(_Index_tuple<_Indices...>)
         ^
