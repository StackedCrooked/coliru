clang version 3.4.2 (tags/RELEASE_342/final 216574)
Target: x86_64-unknown-linux-gnu
Thread model: posix
main.cpp:4:19: fatal error: recursive template instantiation exceeded maximum depth of 256
const int value = value<int>;
                  ^
main.cpp:4:19: note: in instantiation of variable template specialization 'value<int>' requested here
const int value = value<int>;
                  ^
main.cpp:4:19: note: in instantiation of variable template specialization 'value<int>' requested here
const int value = value<int>;
                  ^
main.cpp:4:19: note: in instantiation of variable template specialization 'value<int>' requested here
const int value = value<int>;
                  ^
main.cpp:4:19: note: in instantiation of variable template specialization 'value<int>' requested here
const int value = value<int>;
                  ^
main.cpp:4:19: note: in instantiation of variable template specialization 'value<int>' requested here
const int value = value<int>;
                  ^
main.cpp:4:19: note: (skipping 247 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)
main.cpp:4:19: note: in instantiation of variable template specialization 'value<int>' requested here
const int value = value<int>;
                  ^
main.cpp:4:19: note: in instantiation of variable template specialization 'value<int>' requested here
const int value = value<int>;
                  ^
main.cpp:4:19: note: in instantiation of variable template specialization 'value<int>' requested here
const int value = value<int>;
                  ^
main.cpp:4:19: note: in instantiation of variable template specialization 'value<int>' requested here
const int value = value<int>;
                  ^
main.cpp:4:19: note: in instantiation of variable template specialization 'value<int>' requested here
const int value = value<int>;
                  ^
main.cpp:4:19: note: use -ftemplate-depth=N to increase recursive template instantiation depth
1 error generated.
