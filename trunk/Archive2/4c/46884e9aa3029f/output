In file included from main.cpp:1:
In file included from /usr/include/c++/v1/random:1637:
/usr/include/c++/v1/type_traits:2761:19: error: invalid application of 'sizeof' to an incomplete type 'void'
    static_assert(sizeof(_Tp) > 0, "Type must be complete.");
                  ^~~~~~~~~~~
/usr/include/c++/v1/type_traits:2778:15: note: in instantiation of template class 'std::__1::__check_complete<void>' requested here
    : private __check_complete<_Rp>
              ^
/usr/include/c++/v1/type_traits:2947:15: note: in instantiation of template class 'std::__1::__check_complete<void (*)(int, int, int, const int &, int)>' requested here
    : private __check_complete<_Fp>
              ^
/usr/include/c++/v1/type_traits:2958:11: note: in instantiation of template class 'std::__1::__invokable_imp<void (*)(int, int, int, const int &, int), int &&, int &&, int &, const int &, int &>' requested here
          __invokable_imp<_Fp, _Args...>::value>
          ^
/usr/include/c++/v1/functional:1642:31: note: in instantiation of template class 'std::__1::__invokable<void (*)(int, int, int, const int &, int), int &&, int &&, int &, const int &, int &>' requested here
    static const bool value = __invokable<_Fp,
                              ^
/usr/include/c++/v1/functional:1654:18: note: in instantiation of template class 'std::__1::_is_valid_bind_return<void (*)(int, int, int, const int &, int), std::__1::tuple<std::__1::placeholders::__ph<2>, std::__1::placeholders::__ph<1>, int, std::__1::reference_wrapper<const int>, int>, std::__1::tuple<int &&, int &&, int &&> >' requested here
          bool = _is_valid_bind_return<_Fp, _BoundArgs, _TupleUj>::value>
                 ^
/usr/include/c++/v1/functional:1749:18: note: in instantiation of default argument for '__bind_return<void (*)(int, int, int, const int &, int), std::__1::tuple<std::__1::placeholders::__ph<2>, std::__1::placeholders::__ph<1>, int, std::__1::reference_wrapper<const int>, int>, std::__1::tuple<int &&, int &&, int &&> >' required here
        typename __bind_return<_Fd, _Td, tuple<_Args&&...> >::type
                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/v1/functional:1750:9: note: while substituting deduced template arguments into function template 'operator()' [with _Args = <int, int, int>]
        operator()(_Args&& ...__args)
        ^
In file included from main.cpp:1:
In file included from /usr/include/c++/v1/random:1641:
In file included from /usr/include/c++/v1/algorithm:627:
In file included from /usr/include/c++/v1/memory:599:
/usr/include/c++/v1/tuple:320:11: error: rvalue reference to type '__bind<[2 * ...]>' cannot bind to lvalue of type '__bind<[2 * ...]>'
        : value(__t.get())
          ^     ~~~~~~~~~
/usr/include/c++/v1/tuple:444:8: note: in instantiation of member function 'std::__1::__tuple_leaf<0, std::__1::__bind<std::__1::uniform_int_distribution<int> &, std::__1::linear_congruential_engine<unsigned long, 48271, 0, 2147483647> &> &&, false>::__tuple_leaf' requested here
struct __tuple_impl<__tuple_indices<_Indx...>, _Tp...>
       ^
/usr/include/c++/v1/functional:1278:26: note: in instantiation of member function 'std::__1::__function::__func<std::__1::__bind<std::__1::uniform_int_distribution<int> &, std::__1::linear_congruential_engine<unsigned long, 48271, 0, 2147483647> &>, std::__1::allocator<std::__1::__bind<std::__1::uniform_int_distribution<int> &, std::__1::linear_congruential_engine<unsigned long, 48271, 0, 2147483647> &> >, int ()>::__func' requested here
            ::new (__f_) _FF(_VSTD::move(__f));
                         ^
main.cpp:42:32: note: in instantiation of function template specialization 'std::__1::function<int ()>::function<std::__1::__bind<std::__1::uniform_int_distribution<int> &, std::__1::linear_congruential_engine<unsigned long, 48271, 0, 2147483647> &> >' requested here
    std::function<int()> rnd = std::bind(d, e);
                               ^
In file included from main.cpp:1:
In file included from /usr/include/c++/v1/random:1641:
In file included from /usr/include/c++/v1/algorithm:627:
In file included from /usr/include/c++/v1/memory:599:
/usr/include/c++/v1/tuple:321:10: error: static_assert failed "Can not copy a tuple with rvalue reference member"
        {static_assert(!is_rvalue_reference<_Hp>::value, "Can not copy a tuple with rvalue reference member");}
         ^             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/v1/tuple:320:11: error: rvalue reference to type 'allocator<[...]>' cannot bind to lvalue of type 'allocator<[...]>'
        : value(__t.get())
          ^     ~~~~~~~~~
/usr/include/c++/v1/tuple:444:8: note: in instantiation of member function 'std::__1::__tuple_leaf<0, std::__1::allocator<std::__1::__bind<std::__1::uniform_int_distribution<int> &, std::__1::linear_congruential_engine<unsigned long, 48271, 0, 2147483647> &> > &&, false>::__tuple_leaf' requested here
struct __tuple_impl<__tuple_indices<_Indx...>, _Tp...>
       ^
/usr/include/c++/v1/functional:1286:34: note: in instantiation of member function 'std::__1::__function::__func<std::__1::__bind<std::__1::uniform_int_distribution<int> &, std::__1::linear_congruential_engine<unsigned long, 48271, 0, 2147483647> &>, std::__1::allocator<std::__1::__bind<std::__1::uniform_int_distribution<int> &, std::__1::linear_congruential_engine<unsigned long, 48271, 0, 2147483647> &> >, int ()>::__func' requested here
            ::new (__hold.get()) _FF(_VSTD::move(__f), allocator<_Fp>(__a));
                                 ^
main.cpp:42:32: note: in instantiation of function template specialization 'std::__1::function<int ()>::function<std::__1::__bind<std::__1::uniform_int_distribution<int> &, std::__1::linear_congruential_engine<unsigned long, 48271, 0, 2147483647> &> >' requested here
    std::function<int()> rnd = std::bind(d, e);
                               ^
In file included from main.cpp:1:
In file included from /usr/include/c++/v1/random:1641:
In file included from /usr/include/c++/v1/algorithm:627:
In file included from /usr/include/c++/v1/memory:599:
/usr/include/c++/v1/tuple:321:10: error: static_assert failed "Can not copy a tuple with rvalue reference member"
        {static_assert(!is_rvalue_reference<_Hp>::value, "Can not copy a tuple with rvalue reference member");}
         ^             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
5 errors generated.
