main.cpp:10:19: error: static_assert expression is not an integral constant expression
    static_assert(l.size() == 3, "goo");
                  ^~~~~~~~~~~~~
main.cpp:15:4: note: in instantiation of function template specialization 'foo<int>' requested here
   foo({1,2,3});    
   ^
/usr/local/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.9.2/../../../../include/c++/4.9.2/initializer_list:71:38: note: read of non-constexpr variable 'l' is not allowed in a constant expression
      size() const noexcept { return _M_len; }
                                     ^
main.cpp:10:19: note: in call to '&l->size()'
    static_assert(l.size() == 3, "goo");
                  ^
main.cpp:8:30: note: declared here
void foo(initializer_list<T> l)
                             ^
1 error generated.
