main.cpp:58:51: error: ‘result_type’ does not name a type
     template<typename...> struct result { typedef result_type type; };
                                                   ^
main.cpp:61:5: error: ‘result_type’ does not name a type
     result_type operator()(A a, B b, C c) const
     ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/function_eval.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/function_eval.hpp:14,
                 from /usr/local/include/boost/phoenix/function/function.hpp:13,
                 from /usr/local/include/boost/phoenix/function.hpp:11,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:12,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/function_eval_10.hpp: In instantiation of ‘struct boost::phoenix::detail::function_eval::result<boost::phoenix::detail::function_eval(const boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>&, const boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>&, const boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>&, const boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>&, const boost::phoenix::vector2<boost::phoenix::vector1<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l> >*>&, const boost::phoenix::default_actions&>&)>’:
/usr/local/include/boost/phoenix/core/detail/preprocessed/function_eval_10.hpp:195:13:   required by substitution of ‘template<class F, class A0, class A1, class A2, class Context> typename boost::phoenix::detail::function_eval::result<boost::phoenix::detail::function_eval(F&, A0&, A1&, A2&, const Context&)>::type boost::phoenix::detail::function_eval::operator()(F&, A0&, A1&, A2&, const Context&) const [with F = const boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>; A0 = const boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>; A1 = const boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>; A2 = const boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>; Context = boost::phoenix::vector2<boost::phoenix::vector1<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l> >*>&, const boost::phoenix::default_actions&>]’
/usr/local/include/boost/utility/detail/result_of_iterate.hpp:140:51:   required from ‘struct boost::detail::cpp0x_result_of<boost::phoenix::detail::function_eval(const boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>&, const boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>&, const boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>&, const boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>&, boost::phoenix::vector2<boost::phoenix::vector1<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l> >*>&, const boost::phoenix::default_actions&>)>’
/usr/local/include/boost/utility/detail/result_of_iterate.hpp:42:8:   required from ‘struct boost::result_of<boost::phoenix::detail::function_eval(const boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>&, const boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>&, const boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>&, const boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>&, boost::phoenix::vector2<boost::phoenix::vector1<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l> >*>&, const boost::phoenix::default_actions&>)>’
/usr/local/include/boost/phoenix/core/detail/preprocessed/call_10.hpp:133:17:   required from ‘struct boost::phoenix::detail::call_impl<boost::phoenix::detail::function_eval, const boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>&, boost::phoenix::vector1<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l> >*>&, const boost::phoenix::default_actions&, 4l>’
/usr/local/include/boost/phoenix/core/call.hpp:60:16:   required from ‘struct boost::phoenix::call<boost::phoenix::detail::function_eval>::impl<const boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>&, boost::phoenix::vector1<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l> >*>&, const boost::phoenix::default_actions&>’
/usr/local/include/boost/proto/transform/when.hpp:186:16:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/boost/phoenix/core/meta_grammar.hpp:66:48:   required from ‘struct boost::phoenix::evaluator::impl<const boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>&, const boost::phoenix::vector2<boost::phoenix::vector1<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l> >*>&, boost::phoenix::default_actions>&, boost::proto::envns_::empty_env>’
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_result_of_10.hpp:26:17:   required from ‘struct boost::phoenix::result_of::nullary_actor_result<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l> >’
/usr/local/include/boost/mpl/eval_if.hpp:60:31:   required from ‘struct boost::mpl::eval_if_c<true, boost::phoenix::result_of::nullary_actor_result<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l> >, boost::mpl::identity<boost::phoenix::detail::error_expecting_arguments> >’
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_result_of_10.hpp:38:13:   required from ‘struct boost::phoenix::result_of::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>, void, void, void, void, void, void, void, void, void, void, void>’
/usr/local/include/boost/phoenix/core/actor.hpp:240:9:   required from ‘struct boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l> >’
main.cpp:76:48:   required from here
/usr/local/include/boost/phoenix/core/detail/preprocessed/function_eval_10.hpp:172:21: error: no type named ‘type’ in ‘struct boost::result_of<const {anonymous}::solve_impl(const int&, const int&, const int&)>’
                     type;
                     ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/call.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/call.hpp:6,
                 from /usr/local/include/boost/phoenix/core/call.hpp:65,
                 from /usr/local/include/boost/phoenix/core/nothing.hpp:13,
                 from /usr/local/include/boost/phoenix/core.hpp:20,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/call_10.hpp: In instantiation of ‘struct boost::phoenix::detail::call_impl<boost::phoenix::detail::function_eval, const boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>&, boost::phoenix::vector1<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l> >*>&, const boost::phoenix::default_actions&, 4l>’:
/usr/local/include/boost/phoenix/core/call.hpp:60:16:   required from ‘struct boost::phoenix::call<boost::phoenix::detail::function_eval>::impl<const boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>&, boost::phoenix::vector1<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l> >*>&, const boost::phoenix::default_actions&>’
/usr/local/include/boost/proto/transform/when.hpp:186:16:   required from ‘struct boost::proto::when<boost::phoenix::detail::rule::function_eval, boost::proto::external_transform>::impl<const boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>&, boost::phoenix::vector1<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l> >*>&, const boost::phoenix::default_actions&>’
/usr/local/include/boost/proto/matches.hpp:834:16:   required from ‘struct boost::proto::switch_<boost::phoenix::meta_grammar>::impl<const boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>&, boost::phoenix::vector1<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l> >*>&, const boost::phoenix::default_actions&>’
/usr/local/include/boost/phoenix/core/meta_grammar.hpp:66:48:   required from ‘struct boost::phoenix::evaluator::impl<const boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>&, const boost::phoenix::vector2<boost::phoenix::vector1<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l> >*>&, boost::phoenix::default_actions>&, boost::proto::envns_::empty_env>’
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_result_of_10.hpp:26:17:   required from ‘struct boost::phoenix::result_of::nullary_actor_result<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l> >’
/usr/local/include/boost/mpl/eval_if.hpp:60:31:   required from ‘struct boost::mpl::eval_if_c<true, boost::phoenix::result_of::nullary_actor_result<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l> >, boost::mpl::identity<boost::phoenix::detail::error_expecting_arguments> >’
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_result_of_10.hpp:38:13:   required from ‘struct boost::phoenix::result_of::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>, void, void, void, void, void, void, void, void, void, void, void>’
/usr/local/include/boost/phoenix/core/actor.hpp:240:9:   required from ‘struct boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l> >’
main.cpp:76:48:   required from here
/usr/local/include/boost/phoenix/core/detail/preprocessed/call_10.hpp:133:17: error: no type named ‘type’ in ‘struct boost::result_of<boost::phoenix::detail::function_eval(const boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>&, const boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>&, const boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>&, const boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>&, boost::phoenix::vector2<boost::phoenix::vector1<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l> >*>&, const boost::phoenix::default_actions&>)>’
                 result_type;
                 ^
main.cpp: In function ‘int main()’:
main.cpp:76:50: error: no match for call to ‘(const type {aka const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l> >}) ()’
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core.hpp:15:0,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/actor.hpp:161:12: note: candidates are:
     struct actor
            ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:19:197: note: template<class A0> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, A0&>::type boost::phoenix::actor<Expr>::operator()(A0&) const [with A0 = A0; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         template <typename This, typename A0> struct result<This(A0 &)> : result_of::actor<proto_base_expr, A0 &> {}; template <typename A0> typename result_of::actor<proto_base_expr, A0 &>::type operator()(A0 & a0) const { typedef vector2< const actor<Expr> *, A0 & > env_type; env_type env = {this, a0}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0> typename result_of::actor<proto_base_expr, A0 &>::type operator()(A0 & a0) { typedef vector2< const actor<Expr> *, A0 & > env_type; env_type env = {this, a0}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0> struct result<This(A0 const&)> : result_of::actor<proto_base_expr, A0 const&> {}; template <typename A0> typename result_of::actor<proto_base_expr, A0 const&>::type operator()(A0 const& a0) const { typedef vector2< const actor<Expr> *, A0 const& > env_type; env_type env = {this, a0}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0> typename result_of::actor<proto_base_expr, A0 const&>::type operator()(A0 const& a0) { typedef vector2< const actor<Expr> *, A0 const& > env_type; env_type env = {this, a0}; return phoenix::eval(*this, phoenix::context(env, default_actions())); }
                                                                                                                                                                                                     ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:19:197: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 1 argument, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:19:458: note: template<class A0> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, A0&>::type boost::phoenix::actor<Expr>::operator()(A0&) [with A0 = A0; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         template <typename This, typename A0> struct result<This(A0 &)> : result_of::actor<proto_base_expr, A0 &> {}; template <typename A0> typename result_of::actor<proto_base_expr, A0 &>::type operator()(A0 & a0) const { typedef vector2< const actor<Expr> *, A0 & > env_type; env_type env = {this, a0}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0> typename result_of::actor<proto_base_expr, A0 &>::type operator()(A0 & a0) { typedef vector2< const actor<Expr> *, A0 & > env_type; env_type env = {this, a0}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0> struct result<This(A0 const&)> : result_of::actor<proto_base_expr, A0 const&> {}; template <typename A0> typename result_of::actor<proto_base_expr, A0 const&>::type operator()(A0 const& a0) const { typedef vector2< const actor<Expr> *, A0 const& > env_type; env_type env = {this, a0}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0> typename result_of::actor<proto_base_expr, A0 const&>::type operator()(A0 const& a0) { typedef vector2< const actor<Expr> *, A0 const& > env_type; env_type env = {this, a0}; return phoenix::eval(*this, phoenix::context(env, default_actions())); }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:19:458: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 1 argument, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:19:838: note: template<class A0> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&>::type boost::phoenix::actor<Expr>::operator()(const A0&) const [with A0 = A0; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         template <typename This, typename A0> struct result<This(A0 &)> : result_of::actor<proto_base_expr, A0 &> {}; template <typename A0> typename result_of::actor<proto_base_expr, A0 &>::type operator()(A0 & a0) const { typedef vector2< const actor<Expr> *, A0 & > env_type; env_type env = {this, a0}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0> typename result_of::actor<proto_base_expr, A0 &>::type operator()(A0 & a0) { typedef vector2< const actor<Expr> *, A0 & > env_type; env_type env = {this, a0}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0> struct result<This(A0 const&)> : result_of::actor<proto_base_expr, A0 const&> {}; template <typename A0> typename result_of::actor<proto_base_expr, A0 const&>::type operator()(A0 const& a0) const { typedef vector2< const actor<Expr> *, A0 const& > env_type; env_type env = {this, a0}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0> typename result_of::actor<proto_base_expr, A0 const&>::type operator()(A0 const& a0) { typedef vector2< const actor<Expr> *, A0 const& > env_type; env_type env = {this, a0}; return phoenix::eval(*this, phoenix::context(env, default_actions())); }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:19:838: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 1 argument, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:19:1114: note: template<class A0> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&>::type boost::phoenix::actor<Expr>::operator()(const A0&) [with A0 = A0; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         template <typename This, typename A0> struct result<This(A0 &)> : result_of::actor<proto_base_expr, A0 &> {}; template <typename A0> typename result_of::actor<proto_base_expr, A0 &>::type operator()(A0 & a0) const { typedef vector2< const actor<Expr> *, A0 & > env_type; env_type env = {this, a0}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0> typename result_of::actor<proto_base_expr, A0 &>::type operator()(A0 & a0) { typedef vector2< const actor<Expr> *, A0 & > env_type; env_type env = {this, a0}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0> struct result<This(A0 const&)> : result_of::actor<proto_base_expr, A0 const&> {}; template <typename A0> typename result_of::actor<proto_base_expr, A0 const&>::type operator()(A0 const& a0) const { typedef vector2< const actor<Expr> *, A0 const& > env_type; env_type env = {this, a0}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0> typename result_of::actor<proto_base_expr, A0 const&>::type operator()(A0 const& a0) { typedef vector2< const actor<Expr> *, A0 const& > env_type; env_type env = {this, a0}; return phoenix::eval(*this, phoenix::context(env, default_actions())); }

/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:19:1114: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 1 argument, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:31:246: note: template<class A0, class A1> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&) const [with A0 = A0; A1 = A1; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         template <typename This, typename A0 , typename A1> struct result<This(A0 & , A1 &)> : result_of::actor<proto_base_expr, A0 & , A1 &> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 &>::type operator()(A0 & a0 , A1 & a1) const { typedef vector3< const actor<Expr> *, A0 & , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 &>::type operator()(A0 & a0 , A1 & a1) { typedef vector3< const actor<Expr> *, A0 & , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 & , A1 const&)> : result_of::actor<proto_base_expr, A0 & , A1 const&> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 const&>::type operator()(A0 & a0 , A1 const& a1) const { typedef vector3< const actor<Expr> *, A0 & , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 const&>::type operator()(A0 & a0 , A1 const& a1) { typedef vector3< const actor<Expr> *, A0 & , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 const& , A1 &)> : result_of::actor<proto_base_expr, A0 const& , A1 &> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 &>::type operator()(A0 const& a0 , A1 & a1) const { typedef vector3< const actor<Expr> *, A0 const& , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 &>::type operator()(A0 const& a0 , A1 & a1) { typedef vector3< const actor<Expr> *, A0 const& , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 const& , A1 const&)> : result_of::actor<proto_base_expr, A0 const& , A1 const&> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 const&>::type operator()(A0 const& a0 , A1 const& a1) const { typedef vector3< const actor<Expr> *, A0 const& , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 const&>::type operator()(A0 const& a0 , A1 const& a1) { typedef vector3< const actor<Expr> *, A0 const& , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); }
                                                                                                                                                                                                                                                      ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:31:246: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 2 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:31:550: note: template<class A0, class A1> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&) [with A0 = A0; A1 = A1; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         template <typename This, typename A0 , typename A1> struct result<This(A0 & , A1 &)> : result_of::actor<proto_base_expr, A0 & , A1 &> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 &>::type operator()(A0 & a0 , A1 & a1) const { typedef vector3< const actor<Expr> *, A0 & , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 &>::type operator()(A0 & a0 , A1 & a1) { typedef vector3< const actor<Expr> *, A0 & , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 & , A1 const&)> : result_of::actor<proto_base_expr, A0 & , A1 const&> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 const&>::type operator()(A0 & a0 , A1 const& a1) const { typedef vector3< const actor<Expr> *, A0 & , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 const&>::type operator()(A0 & a0 , A1 const& a1) { typedef vector3< const actor<Expr> *, A0 & , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 const& , A1 &)> : result_of::actor<proto_base_expr, A0 const& , A1 &> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 &>::type operator()(A0 const& a0 , A1 & a1) const { typedef vector3< const actor<Expr> *, A0 const& , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 &>::type operator()(A0 const& a0 , A1 & a1) { typedef vector3< const actor<Expr> *, A0 const& , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 const& , A1 const&)> : result_of::actor<proto_base_expr, A0 const& , A1 const&> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 const&>::type operator()(A0 const& a0 , A1 const& a1) const { typedef vector3< const actor<Expr> *, A0 const& , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 const&>::type operator()(A0 const& a0 , A1 const& a1) { typedef vector3< const actor<Expr> *, A0 const& , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); }

/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:31:550: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 2 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:31:1001: note: template<class A0, class A1> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, const A1&>::type boost::phoenix::actor<Expr>::operator()(A0&, const A1&) const [with A0 = A0; A1 = A1; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         template <typename This, typename A0 , typename A1> struct result<This(A0 & , A1 &)> : result_of::actor<proto_base_expr, A0 & , A1 &> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 &>::type operator()(A0 & a0 , A1 & a1) const { typedef vector3< const actor<Expr> *, A0 & , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 &>::type operator()(A0 & a0 , A1 & a1) { typedef vector3< const actor<Expr> *, A0 & , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 & , A1 const&)> : result_of::actor<proto_base_expr, A0 & , A1 const&> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 const&>::type operator()(A0 & a0 , A1 const& a1) const { typedef vector3< const actor<Expr> *, A0 & , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 const&>::type operator()(A0 & a0 , A1 const& a1) { typedef vector3< const actor<Expr> *, A0 & , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 const& , A1 &)> : result_of::actor<proto_base_expr, A0 const& , A1 &> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 &>::type operator()(A0 const& a0 , A1 & a1) const { typedef vector3< const actor<Expr> *, A0 const& , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 &>::type operator()(A0 const& a0 , A1 & a1) { typedef vector3< const actor<Expr> *, A0 const& , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 const& , A1 const&)> : result_of::actor<proto_base_expr, A0 const& , A1 const&> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 const&>::type operator()(A0 const& a0 , A1 const& a1) const { typedef vector3< const actor<Expr> *, A0 const& , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 const&>::type operator()(A0 const& a0 , A1 const& a1) { typedef vector3< const actor<Expr> *, A0 const& , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:31:1001: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 2 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:31:1320: note: template<class A0, class A1> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, const A1&>::type boost::phoenix::actor<Expr>::operator()(A0&, const A1&) [with A0 = A0; A1 = A1; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         template <typename This, typename A0 , typename A1> struct result<This(A0 & , A1 &)> : result_of::actor<proto_base_expr, A0 & , A1 &> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 &>::type operator()(A0 & a0 , A1 & a1) const { typedef vector3< const actor<Expr> *, A0 & , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 &>::type operator()(A0 & a0 , A1 & a1) { typedef vector3< const actor<Expr> *, A0 & , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 & , A1 const&)> : result_of::actor<proto_base_expr, A0 & , A1 const&> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 const&>::type operator()(A0 & a0 , A1 const& a1) const { typedef vector3< const actor<Expr> *, A0 & , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 const&>::type operator()(A0 & a0 , A1 const& a1) { typedef vector3< const actor<Expr> *, A0 & , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 const& , A1 &)> : result_of::actor<proto_base_expr, A0 const& , A1 &> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 &>::type operator()(A0 const& a0 , A1 & a1) const { typedef vector3< const actor<Expr> *, A0 const& , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 &>::type operator()(A0 const& a0 , A1 & a1) { typedef vector3< const actor<Expr> *, A0 const& , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 const& , A1 const&)> : result_of::actor<proto_base_expr, A0 const& , A1 const&> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 const&>::type operator()(A0 const& a0 , A1 const& a1) const { typedef vector3< const actor<Expr> *, A0 const& , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 const&>::type operator()(A0 const& a0 , A1 const& a1) { typedef vector3< const actor<Expr> *, A0 const& , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); }

/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:31:1320: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 2 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:31:1781: note: template<class A0, class A1> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, A1&>::type boost::phoenix::actor<Expr>::operator()(const A0&, A1&) const [with A0 = A0; A1 = A1; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         template <typename This, typename A0 , typename A1> struct result<This(A0 & , A1 &)> : result_of::actor<proto_base_expr, A0 & , A1 &> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 &>::type operator()(A0 & a0 , A1 & a1) const { typedef vector3< const actor<Expr> *, A0 & , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 &>::type operator()(A0 & a0 , A1 & a1) { typedef vector3< const actor<Expr> *, A0 & , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 & , A1 const&)> : result_of::actor<proto_base_expr, A0 & , A1 const&> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 const&>::type operator()(A0 & a0 , A1 const& a1) const { typedef vector3< const actor<Expr> *, A0 & , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 const&>::type operator()(A0 & a0 , A1 const& a1) { typedef vector3< const actor<Expr> *, A0 & , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 const& , A1 &)> : result_of::actor<proto_base_expr, A0 const& , A1 &> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 &>::type operator()(A0 const& a0 , A1 & a1) const { typedef vector3< const actor<Expr> *, A0 const& , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 &>::type operator()(A0 const& a0 , A1 & a1) { typedef vector3< const actor<Expr> *, A0 const& , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 const& , A1 const&)> : result_of::actor<proto_base_expr, A0 const& , A1 const&> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 const&>::type operator()(A0 const& a0 , A1 const& a1) const { typedef vector3< const actor<Expr> *, A0 const& , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 const&>::type operator()(A0 const& a0 , A1 const& a1) { typedef vector3< const actor<Expr> *, A0 const& , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); }

/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:31:1781: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 2 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:31:2100: note: template<class A0, class A1> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, A1&>::type boost::phoenix::actor<Expr>::operator()(const A0&, A1&) [with A0 = A0; A1 = A1; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         template <typename This, typename A0 , typename A1> struct result<This(A0 & , A1 &)> : result_of::actor<proto_base_expr, A0 & , A1 &> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 &>::type operator()(A0 & a0 , A1 & a1) const { typedef vector3< const actor<Expr> *, A0 & , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 &>::type operator()(A0 & a0 , A1 & a1) { typedef vector3< const actor<Expr> *, A0 & , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 & , A1 const&)> : result_of::actor<proto_base_expr, A0 & , A1 const&> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 const&>::type operator()(A0 & a0 , A1 const& a1) const { typedef vector3< const actor<Expr> *, A0 & , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 const&>::type operator()(A0 & a0 , A1 const& a1) { typedef vector3< const actor<Expr> *, A0 & , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 const& , A1 &)> : result_of::actor<proto_base_expr, A0 const& , A1 &> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 &>::type operator()(A0 const& a0 , A1 & a1) const { typedef vector3< const actor<Expr> *, A0 const& , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 &>::type operator()(A0 const& a0 , A1 & a1) { typedef vector3< const actor<Expr> *, A0 const& , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 const& , A1 const&)> : result_of::actor<proto_base_expr, A0 const& , A1 const&> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 const&>::type operator()(A0 const& a0 , A1 const& a1) const { typedef vector3< const actor<Expr> *, A0 const& , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 const&>::type operator()(A0 const& a0 , A1 const& a1) { typedef vector3< const actor<Expr> *, A0 const& , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); }

/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:31:2100: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 2 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:31:2576: note: template<class A0, class A1> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&) const [with A0 = A0; A1 = A1; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         template <typename This, typename A0 , typename A1> struct result<This(A0 & , A1 &)> : result_of::actor<proto_base_expr, A0 & , A1 &> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 &>::type operator()(A0 & a0 , A1 & a1) const { typedef vector3< const actor<Expr> *, A0 & , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 &>::type operator()(A0 & a0 , A1 & a1) { typedef vector3< const actor<Expr> *, A0 & , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 & , A1 const&)> : result_of::actor<proto_base_expr, A0 & , A1 const&> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 const&>::type operator()(A0 & a0 , A1 const& a1) const { typedef vector3< const actor<Expr> *, A0 & , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 const&>::type operator()(A0 & a0 , A1 const& a1) { typedef vector3< const actor<Expr> *, A0 & , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 const& , A1 &)> : result_of::actor<proto_base_expr, A0 const& , A1 &> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 &>::type operator()(A0 const& a0 , A1 & a1) const { typedef vector3< const actor<Expr> *, A0 const& , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 &>::type operator()(A0 const& a0 , A1 & a1) { typedef vector3< const actor<Expr> *, A0 const& , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 const& , A1 const&)> : result_of::actor<proto_base_expr, A0 const& , A1 const&> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 const&>::type operator()(A0 const& a0 , A1 const& a1) const { typedef vector3< const actor<Expr> *, A0 const& , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 const&>::type operator()(A0 const& a0 , A1 const& a1) { typedef vector3< const actor<Expr> *, A0 const& , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); }

/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:31:2576: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 2 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:31:2910: note: template<class A0, class A1> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&) [with A0 = A0; A1 = A1; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         template <typename This, typename A0 , typename A1> struct result<This(A0 & , A1 &)> : result_of::actor<proto_base_expr, A0 & , A1 &> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 &>::type operator()(A0 & a0 , A1 & a1) const { typedef vector3< const actor<Expr> *, A0 & , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 &>::type operator()(A0 & a0 , A1 & a1) { typedef vector3< const actor<Expr> *, A0 & , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 & , A1 const&)> : result_of::actor<proto_base_expr, A0 & , A1 const&> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 const&>::type operator()(A0 & a0 , A1 const& a1) const { typedef vector3< const actor<Expr> *, A0 & , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 const&>::type operator()(A0 & a0 , A1 const& a1) { typedef vector3< const actor<Expr> *, A0 & , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 const& , A1 &)> : result_of::actor<proto_base_expr, A0 const& , A1 &> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 &>::type operator()(A0 const& a0 , A1 & a1) const { typedef vector3< const actor<Expr> *, A0 const& , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 &>::type operator()(A0 const& a0 , A1 & a1) { typedef vector3< const actor<Expr> *, A0 const& , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 const& , A1 const&)> : result_of::actor<proto_base_expr, A0 const& , A1 const&> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 const&>::type operator()(A0 const& a0 , A1 const& a1) const { typedef vector3< const actor<Expr> *, A0 const& , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 const&>::type operator()(A0 const& a0 , A1 const& a1) { typedef vector3< const actor<Expr> *, A0 const& , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); }

/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:31:2910: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 2 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:49:9: note: template<class A0, class A1, class A2> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&, A2&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&, A2&) [with A0 = A0; A1 = A1; A2 = A2; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         operator()(A0 & a0 , A1 & a1 , A2 & a2)
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:49:9: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 3 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:62:9: note: template<class A0, class A1, class A2> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&, A2&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&, A2&) const [with A0 = A0; A1 = A1; A2 = A2; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         operator()(A0 & a0 , A1 & a1 , A2 & a2) const
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:62:9: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 3 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:75:9: note: template<class A0, class A1, class A2> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&, const A2&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&, const A2&) [with A0 = A0; A1 = A1; A2 = A2; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         operator()(A0 const& a0 , A1 const& a1 , A2 const& a2)
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:75:9: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 3 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:88:9: note: template<class A0, class A1, class A2> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&, const A2&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&, const A2&) const [with A0 = A0; A1 = A1; A2 = A2; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         operator()(A0 const& a0 , A1 const& a1 , A2 const& a2) const
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:88:9: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 3 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:116:9: note: template<class A0, class A1, class A2, class A3> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&, A2&, A3&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&, A2&, A3&) [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         operator()(A0 & a0 , A1 & a1 , A2 & a2 , A3 & a3)
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:116:9: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 4 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:129:9: note: template<class A0, class A1, class A2, class A3> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&, A2&, A3&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&, A2&, A3&) const [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         operator()(A0 & a0 , A1 & a1 , A2 & a2 , A3 & a3) const
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:129:9: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 4 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:142:9: note: template<class A0, class A1, class A2, class A3> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&, const A2&, const A3&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&, const A2&, const A3&) [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         operator()(A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3)
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:142:9: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 4 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:155:9: note: template<class A0, class A1, class A2, class A3> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&, const A2&, const A3&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&, const A2&, const A3&) const [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         operator()(A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3) const
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:155:9: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 4 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:183:9: note: template<class A0, class A1, class A2, class A3, class A4> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&, A2&, A3&, A4&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&, A2&, A3&, A4&) [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         operator()(A0 & a0 , A1 & a1 , A2 & a2 , A3 & a3 , A4 & a4)
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:183:9: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 5 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:196:9: note: template<class A0, class A1, class A2, class A3, class A4> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&, A2&, A3&, A4&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&, A2&, A3&, A4&) const [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         operator()(A0 & a0 , A1 & a1 , A2 & a2 , A3 & a3 , A4 & a4) const
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:196:9: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 5 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:209:9: note: template<class A0, class A1, class A2, class A3, class A4> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&, const A2&, const A3&, const A4&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&, const A2&, const A3&, const A4&) [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         operator()(A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4)
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:209:9: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 5 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:222:9: note: template<class A0, class A1, class A2, class A3, class A4> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&, const A2&, const A3&, const A4&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&, const A2&, const A3&, const A4&) const [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         operator()(A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4) const
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:222:9: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 5 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:250:9: note: template<class A0, class A1, class A2, class A3, class A4, class A5> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&, A2&, A3&, A4&, A5&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&, A2&, A3&, A4&, A5&) [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         operator()(A0 & a0 , A1 & a1 , A2 & a2 , A3 & a3 , A4 & a4 , A5 & a5)
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:250:9: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 6 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:263:9: note: template<class A0, class A1, class A2, class A3, class A4, class A5> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&, A2&, A3&, A4&, A5&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&, A2&, A3&, A4&, A5&) const [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         operator()(A0 & a0 , A1 & a1 , A2 & a2 , A3 & a3 , A4 & a4 , A5 & a5) const
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:263:9: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 6 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:276:9: note: template<class A0, class A1, class A2, class A3, class A4, class A5> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&, const A2&, const A3&, const A4&, const A5&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&, const A2&, const A3&, const A4&, const A5&) [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         operator()(A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5)
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:276:9: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 6 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:289:9: note: template<class A0, class A1, class A2, class A3, class A4, class A5> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&, const A2&, const A3&, const A4&, const A5&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&, const A2&, const A3&, const A4&, const A5&) const [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         operator()(A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5) const
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:289:9: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 6 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:317:9: note: template<class A0, class A1, class A2, class A3, class A4, class A5, class A6> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&, A2&, A3&, A4&, A5&, A6&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&, A2&, A3&, A4&, A5&, A6&) [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; A6 = A6; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         operator()(A0 & a0 , A1 & a1 , A2 & a2 , A3 & a3 , A4 & a4 , A5 & a5 , A6 & a6)
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:317:9: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 7 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:330:9: note: template<class A0, class A1, class A2, class A3, class A4, class A5, class A6> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&, A2&, A3&, A4&, A5&, A6&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&, A2&, A3&, A4&, A5&, A6&) const [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; A6 = A6; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         operator()(A0 & a0 , A1 & a1 , A2 & a2 , A3 & a3 , A4 & a4 , A5 & a5 , A6 & a6) const
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:330:9: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 7 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:343:9: note: template<class A0, class A1, class A2, class A3, class A4, class A5, class A6> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&, const A2&, const A3&, const A4&, const A5&, const A6&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&, const A2&, const A3&, const A4&, const A5&, const A6&) [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; A6 = A6; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         operator()(A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6)
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:343:9: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 7 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:356:9: note: template<class A0, class A1, class A2, class A3, class A4, class A5, class A6> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&, const A2&, const A3&, const A4&, const A5&, const A6&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&, const A2&, const A3&, const A4&, const A5&, const A6&) const [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; A6 = A6; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         operator()(A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6) const
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:356:9: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 7 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:384:9: note: template<class A0, class A1, class A2, class A3, class A4, class A5, class A6, class A7> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&, A2&, A3&, A4&, A5&, A6&, A7&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&, A2&, A3&, A4&, A5&, A6&, A7&) [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; A6 = A6; A7 = A7; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         operator()(A0 & a0 , A1 & a1 , A2 & a2 , A3 & a3 , A4 & a4 , A5 & a5 , A6 & a6 , A7 & a7)
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:384:9: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 8 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:397:9: note: template<class A0, class A1, class A2, class A3, class A4, class A5, class A6, class A7> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&, A2&, A3&, A4&, A5&, A6&, A7&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&, A2&, A3&, A4&, A5&, A6&, A7&) const [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; A6 = A6; A7 = A7; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         operator()(A0 & a0 , A1 & a1 , A2 & a2 , A3 & a3 , A4 & a4 , A5 & a5 , A6 & a6 , A7 & a7) const
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:397:9: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 8 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:410:9: note: template<class A0, class A1, class A2, class A3, class A4, class A5, class A6, class A7> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&, const A2&, const A3&, const A4&, const A5&, const A6&, const A7&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&, const A2&, const A3&, const A4&, const A5&, const A6&, const A7&) [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; A6 = A6; A7 = A7; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         operator()(A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7)
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:410:9: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 8 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:423:9: note: template<class A0, class A1, class A2, class A3, class A4, class A5, class A6, class A7> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&, const A2&, const A3&, const A4&, const A5&, const A6&, const A7&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&, const A2&, const A3&, const A4&, const A5&, const A6&, const A7&) const [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; A6 = A6; A7 = A7; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         operator()(A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7) const
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:423:9: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 8 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:451:9: note: template<class A0, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&, A2&, A3&, A4&, A5&, A6&, A7&, A8&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&, A2&, A3&, A4&, A5&, A6&, A7&, A8&) [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; A6 = A6; A7 = A7; A8 = A8; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         operator()(A0 & a0 , A1 & a1 , A2 & a2 , A3 & a3 , A4 & a4 , A5 & a5 , A6 & a6 , A7 & a7 , A8 & a8)
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:451:9: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 9 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:464:9: note: template<class A0, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&, A2&, A3&, A4&, A5&, A6&, A7&, A8&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&, A2&, A3&, A4&, A5&, A6&, A7&, A8&) const [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; A6 = A6; A7 = A7; A8 = A8; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         operator()(A0 & a0 , A1 & a1 , A2 & a2 , A3 & a3 , A4 & a4 , A5 & a5 , A6 & a6 , A7 & a7 , A8 & a8) const
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:464:9: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 9 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:477:9: note: template<class A0, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&, const A2&, const A3&, const A4&, const A5&, const A6&, const A7&, const A8&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&, const A2&, const A3&, const A4&, const A5&, const A6&, const A7&, const A8&) [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; A6 = A6; A7 = A7; A8 = A8; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         operator()(A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8)
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:477:9: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 9 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:490:9: note: template<class A0, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&, const A2&, const A3&, const A4&, const A5&, const A6&, const A7&, const A8&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&, const A2&, const A3&, const A4&, const A5&, const A6&, const A7&, const A8&) const [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; A6 = A6; A7 = A7; A8 = A8; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         operator()(A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8) const
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:490:9: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 9 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:518:9: note: template<class A0, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8, class A9> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&, A2&, A3&, A4&, A5&, A6&, A7&, A8&, A9&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&, A2&, A3&, A4&, A5&, A6&, A7&, A8&, A9&) [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; A6 = A6; A7 = A7; A8 = A8; A9 = A9; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         operator()(A0 & a0 , A1 & a1 , A2 & a2 , A3 & a3 , A4 & a4 , A5 & a5 , A6 & a6 , A7 & a7 , A8 & a8 , A9 & a9)
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:518:9: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 10 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:531:9: note: template<class A0, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8, class A9> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&, A2&, A3&, A4&, A5&, A6&, A7&, A8&, A9&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&, A2&, A3&, A4&, A5&, A6&, A7&, A8&, A9&) const [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; A6 = A6; A7 = A7; A8 = A8; A9 = A9; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         operator()(A0 & a0 , A1 & a1 , A2 & a2 , A3 & a3 , A4 & a4 , A5 & a5 , A6 & a6 , A7 & a7 , A8 & a8 , A9 & a9) const
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:531:9: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 10 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:544:9: note: template<class A0, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8, class A9> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&, const A2&, const A3&, const A4&, const A5&, const A6&, const A7&, const A8&, const A9&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&, const A2&, const A3&, const A4&, const A5&, const A6&, const A7&, const A8&, const A9&) [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; A6 = A6; A7 = A7; A8 = A8; A9 = A9; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         operator()(A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9)
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:544:9: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 10 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:272,
                 from /usr/local/include/boost/phoenix/core.hpp:15,
                 from /usr/local/include/boost/phoenix/phoenix.hpp:11,
                 from main.cpp:2:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:557:9: note: template<class A0, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8, class A9> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<Expr>::value> >::value, boost::proto::terminal<T>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&, const A2&, const A3&, const A4&, const A5&, const A6&, const A7&, const A8&, const A9&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&, const A2&, const A3&, const A4&, const A5&, const A6&, const A7&, const A8&, const A9&) const [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; A6 = A6; A7 = A7; A8 = A8; A9 = A9; Expr = boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list4<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<{anonymous}::solve_impl>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l>, boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<int>, 0l> >, 4l>]
         operator()(A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9) const
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:557:9: note:   template argument deduction/substitution failed:
main.cpp:76:50: note:   candidate expects 10 arguments, 0 provided
     auto p = solve_quadratic_equation(1, -1, -2)();
                                                  ^
1
