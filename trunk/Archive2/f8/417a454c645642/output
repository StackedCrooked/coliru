In file included from /usr/local/include/boost/geometry/core/closure.hpp:22:0,
                 from /usr/local/include/boost/geometry/geometry.hpp:19,
                 from /usr/local/include/boost/geometry.hpp:17,
                 from main.cpp:1:
/usr/local/include/boost/geometry/algorithms/not_implemented.hpp: In instantiation of 'struct boost::geometry::nyi::not_implemented_error<boost::geometry::info::BOX, boost::geometry::info::BOX, void>':
/usr/local/include/boost/geometry/algorithms/not_implemented.hpp:102:8:   required from 'struct boost::geometry::not_implemented<boost::geometry::box_tag, boost::geometry::box_tag, void>'
/usr/local/include/boost/geometry/algorithms/detail/relate/relate.hpp:120:8:   required from 'struct boost::geometry::detail_dispatch::relate::relate<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::box_tag, boost::geometry::box_tag, 2, 2, false>'
/usr/local/include/boost/geometry/algorithms/detail/relate/relate.hpp:197:23:   required from 'const bool boost::geometry::detail::relate::interruption_enabled<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > > >::value'
/usr/local/include/boost/geometry/algorithms/detail/relate/relate.hpp:271:11:   required from 'struct boost::geometry::detail::relate::result_handler_type<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::mpl::vector<boost::geometry::detail::relate::static_mask<'T', '*', 'F', '*', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', 'T', 'F', '*', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', '*', 'F', 'T', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', '*', 'F', '*', 'T', 'F', '*', '*', '*'> >, true>'
/usr/local/include/boost/geometry/algorithms/detail/relate/relate.hpp:282:1:   required by substitution of 'template<class MatrixOrMask, class Geometry1, class Geometry2> typename boost::geometry::detail::relate::result_handler_type<Geometry1, Geometry2, MatrixOrMask>::type::result_type boost::geometry::detail::relate::relate(const Geometry1&, const Geometry2&, const MatrixOrMask&) [with MatrixOrMask = boost::mpl::vector<boost::geometry::detail::relate::static_mask<'T', '*', 'F', '*', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', 'T', 'F', '*', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', '*', 'F', 'T', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', '*', 'F', '*', 'T', 'F', '*', '*', '*'> >; Geometry1 = boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >; Geometry2 = boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >]'
/usr/local/include/boost/geometry/strategies/agnostic/relate.hpp:29:71:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/boost/variant/variant.hpp:2271:52:   required from 'typename Visitor::result_type boost::variant<T0, TN>::apply_visitor(Visitor&) [with Visitor = boost::geometry::index::detail::rtree::visitors::remove<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::detail::rtree::options<boost::geometry::index::rstar<16ul>, boost::geometry::index::detail::rtree::insert_reinsert_tag, boost::geometry::index::detail::rtree::choose_by_overlap_diff_tag, boost::geometry::index::detail::rtree::split_default_tag, boost::geometry::index::detail::rtree::rstar_tag, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::translator<boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> > >, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::allocators<std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::node_variant_static_tag> >; T0_ = boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::allocators<std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>; TN = {boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul, 4ul, 4ul, 32ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::allocators<std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul, 4ul, 4ul, 32ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>}; typename Visitor::result_type = void]'
/usr/local/include/boost/variant/detail/apply_visitor_unary.hpp:60:43:   required from 'typename Visitor::result_type boost::apply_visitor(Visitor&, Visitable&) [with Visitor = boost::geometry::index::detail::rtree::visitors::remove<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::detail::rtree::options<boost::geometry::index::rstar<16ul>, boost::geometry::index::detail::rtree::insert_reinsert_tag, boost::geometry::index::detail::rtree::choose_by_overlap_diff_tag, boost::geometry::index::detail::rtree::split_default_tag, boost::geometry::index::detail::rtree::rstar_tag, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::translator<boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> > >, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::allocators<std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::node_variant_static_tag> >; Visitable = boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::allocators<std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul, 4ul, 4ul, 32ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::allocators<std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul, 4ul, 4ul, 32ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >; typename Visitor::result_type = void]'
/usr/local/include/boost/geometry/index/detail/rtree/node/variant_visitor.hpp:49:30:   required from 'void boost::geometry::index::detail::rtree::apply_visitor(Visitor&, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<Value, Parameters, Box, Allocators, Tag>, boost::geometry::index::detail::rtree::variant_internal_node<Value, Parameters, Box, Allocators, Tag> >&) [with Visitor = boost::geometry::index::detail::rtree::visitors::remove<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::detail::rtree::options<boost::geometry::index::rstar<16ul>, boost::geometry::index::detail::rtree::insert_reinsert_tag, boost::geometry::index::detail::rtree::choose_by_overlap_diff_tag, boost::geometry::index::detail::rtree::split_default_tag, boost::geometry::index::detail::rtree::rstar_tag, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::translator<boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> > >, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::allocators<std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::node_variant_static_tag> >; Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>; Parameters = boost::geometry::index::rstar<16ul>; Box = boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >; Allocators = boost::geometry::index::detail::rtree::allocators<std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::node_variant_static_tag>; Tag = boost::geometry::index::detail::rtree::node_variant_static_tag]'
/usr/local/include/boost/geometry/index/rtree.hpp:1280:63:   required from 'boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::size_type boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::raw_remove(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>; Parameters = boost::geometry::index::rstar<16ul>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >; Allocator = std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >; boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::size_type = long unsigned int; boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>]'
/usr/local/include/boost/geometry/index/rtree.hpp:640:38:   required from 'boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::size_type boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::remove(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>; Parameters = boost::geometry::index::rstar<16ul>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >; Allocator = std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >; boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::size_type = long unsigned int; boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>]'
main.cpp:19:19:   required from here
/usr/local/include/boost/geometry/algorithms/not_implemented.hpp:63:5: error: no matching function for call to 'assertion_failed(mpl_::failed************ (boost::geometry::nyi::not_implemented_error<boost::geometry::info::BOX, boost::geometry::info::BOX, void>::THIS_OPERATION_IS_NOT_OR_NOT_YET_IMPLEMENTED::************)(mpl_::assert_::types<boost::geometry::info::BOX, boost::geometry::info::BOX, void, mpl_::na>))'
     BOOST_MPL_ASSERT_MSG
     ^
/usr/local/include/boost/geometry/algorithms/not_implemented.hpp:63:5: note: candidate is:
/usr/local/include/boost/mpl/assert.hpp:83:5: note: template<bool C> int mpl_::assertion_failed(typename mpl_::assert<C>::type)
 int assertion_failed( typename assert<C>::type );
     ^
/usr/local/include/boost/mpl/assert.hpp:83:5: note:   template argument deduction/substitution failed:
/usr/local/include/boost/geometry/algorithms/not_implemented.hpp:63:5: note:   cannot convert 'boost::geometry::nyi::not_implemented_error<Term1, Term2, Term3>::THIS_OPERATION_IS_NOT_OR_NOT_YET_IMPLEMENTED70::assert_arg<boost::geometry::info::BOX, boost::geometry::info::BOX, void>()' (type 'mpl_::failed************ (boost::geometry::nyi::not_implemented_error<boost::geometry::info::BOX, boost::geometry::info::BOX, void>::THIS_OPERATION_IS_NOT_OR_NOT_YET_IMPLEMENTED::************)(mpl_::assert_::types<boost::geometry::info::BOX, boost::geometry::info::BOX, void, mpl_::na>)') to type 'mpl_::assert<false>::type {aka mpl_::assert<false>}'
     BOOST_MPL_ASSERT_MSG
     ^
In file included from /usr/local/include/boost/geometry/strategies/agnostic/relate.hpp:14:0,
                 from /usr/local/include/boost/geometry/strategies/strategies.hpp:74,
                 from /usr/local/include/boost/geometry/geometry.hpp:43,
                 from /usr/local/include/boost/geometry.hpp:17,
                 from main.cpp:1:
/usr/local/include/boost/geometry/algorithms/detail/relate/relate.hpp: In instantiation of 'const bool boost::geometry::detail::relate::interruption_enabled<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > > >::value':
/usr/local/include/boost/geometry/algorithms/detail/relate/relate.hpp:271:11:   required from 'struct boost::geometry::detail::relate::result_handler_type<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::mpl::vector<boost::geometry::detail::relate::static_mask<'T', '*', 'F', '*', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', 'T', 'F', '*', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', '*', 'F', 'T', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', '*', 'F', '*', 'T', 'F', '*', '*', '*'> >, true>'
/usr/local/include/boost/geometry/algorithms/detail/relate/relate.hpp:282:1:   required by substitution of 'template<class MatrixOrMask, class Geometry1, class Geometry2> typename boost::geometry::detail::relate::result_handler_type<Geometry1, Geometry2, MatrixOrMask>::type::result_type boost::geometry::detail::relate::relate(const Geometry1&, const Geometry2&, const MatrixOrMask&) [with MatrixOrMask = boost::mpl::vector<boost::geometry::detail::relate::static_mask<'T', '*', 'F', '*', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', 'T', 'F', '*', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', '*', 'F', 'T', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', '*', 'F', '*', 'T', 'F', '*', '*', '*'> >; Geometry1 = boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >; Geometry2 = boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >]'
/usr/local/include/boost/geometry/strategies/agnostic/relate.hpp:29:71:   required from 'static bool boost::geometry::strategy::relate::relate<StaticMask>::apply(const Geometry1&, const Geometry2&) [with Geometry1 = boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >; Geometry2 = boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >; StaticMask = boost::mpl::vector<boost::geometry::detail::relate::static_mask<'T', '*', 'F', '*', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', 'T', 'F', '*', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', '*', 'F', 'T', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', '*', 'F', '*', 'T', 'F', '*', '*', '*'> >]'
/usr/local/include/boost/geometry/algorithms/covered_by.hpp:98:41:   required from 'static bool boost::geometry::dispatch::covered_by<Box1, Box2, boost::geometry::box_tag, boost::geometry::box_tag>::apply(const Box1&, const Box2&, const Strategy&) [with Strategy = boost::geometry::strategy::relate::relate<boost::mpl::vector<boost::geometry::detail::relate::static_mask<'T', '*', 'F', '*', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', 'T', 'F', '*', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', '*', 'F', 'T', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', '*', 'F', '*', 'T', 'F', '*', '*', '*'> > >; Box1 = boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >; Box2 = boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >]'
/usr/local/include/boost/geometry/algorithms/covered_by.hpp:276:74:   required from 'static bool boost::geometry::resolve_strategy::covered_by::apply(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >; Geometry2 = boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >; Strategy = boost::geometry::strategy::relate::relate<boost::mpl::vector<boost::geometry::detail::relate::static_mask<'T', '*', 'F', '*', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', 'T', 'F', '*', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', '*', 'F', 'T', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', '*', 'F', '*', 'T', 'F', '*', '*', '*'> > >]'
/usr/local/include/boost/geometry/algorithms/covered_by.hpp:305:71:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/boost/variant/variant.hpp:2271:52:   required from 'typename Visitor::result_type boost::variant<T0, TN>::apply_visitor(Visitor&) [with Visitor = boost::geometry::index::detail::rtree::visitors::remove<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::detail::rtree::options<boost::geometry::index::rstar<16ul>, boost::geometry::index::detail::rtree::insert_reinsert_tag, boost::geometry::index::detail::rtree::choose_by_overlap_diff_tag, boost::geometry::index::detail::rtree::split_default_tag, boost::geometry::index::detail::rtree::rstar_tag, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::translator<boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> > >, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::allocators<std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::node_variant_static_tag> >; T0_ = boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::allocators<std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>; TN = {boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul, 4ul, 4ul, 32ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::allocators<std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul, 4ul, 4ul, 32ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>}; typename Visitor::result_type = void]'
/usr/local/include/boost/variant/detail/apply_visitor_unary.hpp:60:43:   required from 'typename Visitor::result_type boost::apply_visitor(Visitor&, Visitable&) [with Visitor = boost::geometry::index::detail::rtree::visitors::remove<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::detail::rtree::options<boost::geometry::index::rstar<16ul>, boost::geometry::index::detail::rtree::insert_reinsert_tag, boost::geometry::index::detail::rtree::choose_by_overlap_diff_tag, boost::geometry::index::detail::rtree::split_default_tag, boost::geometry::index::detail::rtree::rstar_tag, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::translator<boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> > >, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::allocators<std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::node_variant_static_tag> >; Visitable = boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::allocators<std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul, 4ul, 4ul, 32ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::allocators<std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul, 4ul, 4ul, 32ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >; typename Visitor::result_type = void]'
/usr/local/include/boost/geometry/index/detail/rtree/node/variant_visitor.hpp:49:30:   required from 'void boost::geometry::index::detail::rtree::apply_visitor(Visitor&, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<Value, Parameters, Box, Allocators, Tag>, boost::geometry::index::detail::rtree::variant_internal_node<Value, Parameters, Box, Allocators, Tag> >&) [with Visitor = boost::geometry::index::detail::rtree::visitors::remove<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::detail::rtree::options<boost::geometry::index::rstar<16ul>, boost::geometry::index::detail::rtree::insert_reinsert_tag, boost::geometry::index::detail::rtree::choose_by_overlap_diff_tag, boost::geometry::index::detail::rtree::split_default_tag, boost::geometry::index::detail::rtree::rstar_tag, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::translator<boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> > >, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::allocators<std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::node_variant_static_tag> >; Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>; Parameters = boost::geometry::index::rstar<16ul>; Box = boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >; Allocators = boost::geometry::index::detail::rtree::allocators<std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::node_variant_static_tag>; Tag = boost::geometry::index::detail::rtree::node_variant_static_tag]'
/usr/local/include/boost/geometry/index/rtree.hpp:1280:63:   required from 'boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::size_type boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::raw_remove(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>; Parameters = boost::geometry::index::rstar<16ul>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >; Allocator = std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >; boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::size_type = long unsigned int; boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>]'
/usr/local/include/boost/geometry/index/rtree.hpp:640:38:   required from 'boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::size_type boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::remove(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>; Parameters = boost::geometry::index::rstar<16ul>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >; Allocator = std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >; boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::size_type = long unsigned int; boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>]'
main.cpp:19:19:   required from here
/usr/local/include/boost/geometry/algorithms/detail/relate/relate.hpp:197:23: error: 'interruption_enabled' is not a member of 'boost::geometry::detail_dispatch::relate::relate<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::box_tag, boost::geometry::box_tag, 2, 2, false>'
     static const bool value =
                       ^
In file included from /usr/local/include/boost/geometry/strategies/strategies.hpp:74:0,
                 from /usr/local/include/boost/geometry/geometry.hpp:43,
                 from /usr/local/include/boost/geometry.hpp:17,
                 from main.cpp:1:
/usr/local/include/boost/geometry/strategies/agnostic/relate.hpp: In instantiation of 'static bool boost::geometry::strategy::relate::relate<StaticMask>::apply(const Geometry1&, const Geometry2&) [with Geometry1 = boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >; Geometry2 = boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >; StaticMask = boost::mpl::vector<boost::geometry::detail::relate::static_mask<'T', '*', 'F', '*', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', 'T', 'F', '*', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', '*', 'F', 'T', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', '*', 'F', '*', 'T', 'F', '*', '*', '*'> >]':
/usr/local/include/boost/geometry/algorithms/covered_by.hpp:98:41:   required from 'static bool boost::geometry::dispatch::covered_by<Box1, Box2, boost::geometry::box_tag, boost::geometry::box_tag>::apply(const Box1&, const Box2&, const Strategy&) [with Strategy = boost::geometry::strategy::relate::relate<boost::mpl::vector<boost::geometry::detail::relate::static_mask<'T', '*', 'F', '*', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', 'T', 'F', '*', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', '*', 'F', 'T', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', '*', 'F', '*', 'T', 'F', '*', '*', '*'> > >; Box1 = boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >; Box2 = boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >]'
/usr/local/include/boost/geometry/algorithms/covered_by.hpp:276:74:   required from 'static bool boost::geometry::resolve_strategy::covered_by::apply(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >; Geometry2 = boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >; Strategy = boost::geometry::strategy::relate::relate<boost::mpl::vector<boost::geometry::detail::relate::static_mask<'T', '*', 'F', '*', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', 'T', 'F', '*', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', '*', 'F', 'T', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', '*', 'F', '*', 'T', 'F', '*', '*', '*'> > >]'
/usr/local/include/boost/geometry/algorithms/covered_by.hpp:305:71:   required from 'static bool boost::geometry::resolve_strategy::covered_by::apply(const Geometry1&, const Geometry2&, boost::geometry::default_strategy) [with Geometry1 = boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >; Geometry2 = boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >]'
/usr/local/include/boost/geometry/algorithms/covered_by.hpp:323:70:   required from 'static bool boost::geometry::resolve_variant::covered_by<Geometry1, Geometry2>::apply(const Geometry1&, const Geometry2&, const Strategy&) [with Strategy = boost::geometry::default_strategy; Geometry1 = boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >; Geometry2 = boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >]'
/usr/local/include/boost/geometry/algorithms/covered_by.hpp:444:75:   required from 'bool boost::geometry::covered_by(const Geometry1&, const Geometry2&) [with Geometry1 = boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >; Geometry2 = boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >]'
/usr/local/include/boost/geometry/index/detail/rtree/visitors/remove.hpp:76:53:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/boost/variant/variant.hpp:2271:52:   required from 'typename Visitor::result_type boost::variant<T0, TN>::apply_visitor(Visitor&) [with Visitor = boost::geometry::index::detail::rtree::visitors::remove<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::detail::rtree::options<boost::geometry::index::rstar<16ul>, boost::geometry::index::detail::rtree::insert_reinsert_tag, boost::geometry::index::detail::rtree::choose_by_overlap_diff_tag, boost::geometry::index::detail::rtree::split_default_tag, boost::geometry::index::detail::rtree::rstar_tag, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::translator<boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> > >, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::allocators<std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::node_variant_static_tag> >; T0_ = boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::allocators<std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>; TN = {boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul, 4ul, 4ul, 32ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::allocators<std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul, 4ul, 4ul, 32ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>}; typename Visitor::result_type = void]'
/usr/local/include/boost/variant/detail/apply_visitor_unary.hpp:60:43:   required from 'typename Visitor::result_type boost::apply_visitor(Visitor&, Visitable&) [with Visitor = boost::geometry::index::detail::rtree::visitors::remove<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::detail::rtree::options<boost::geometry::index::rstar<16ul>, boost::geometry::index::detail::rtree::insert_reinsert_tag, boost::geometry::index::detail::rtree::choose_by_overlap_diff_tag, boost::geometry::index::detail::rtree::split_default_tag, boost::geometry::index::detail::rtree::rstar_tag, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::translator<boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> > >, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::allocators<std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::node_variant_static_tag> >; Visitable = boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::allocators<std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul, 4ul, 4ul, 32ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::allocators<std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul, 4ul, 4ul, 32ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >; typename Visitor::result_type = void]'
/usr/local/include/boost/geometry/index/detail/rtree/node/variant_visitor.hpp:49:30:   required from 'void boost::geometry::index::detail::rtree::apply_visitor(Visitor&, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<Value, Parameters, Box, Allocators, Tag>, boost::geometry::index::detail::rtree::variant_internal_node<Value, Parameters, Box, Allocators, Tag> >&) [with Visitor = boost::geometry::index::detail::rtree::visitors::remove<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::detail::rtree::options<boost::geometry::index::rstar<16ul>, boost::geometry::index::detail::rtree::insert_reinsert_tag, boost::geometry::index::detail::rtree::choose_by_overlap_diff_tag, boost::geometry::index::detail::rtree::split_default_tag, boost::geometry::index::detail::rtree::rstar_tag, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::translator<boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> > >, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::allocators<std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::node_variant_static_tag> >; Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>; Parameters = boost::geometry::index::rstar<16ul>; Box = boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >; Allocators = boost::geometry::index::detail::rtree::allocators<std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::node_variant_static_tag>; Tag = boost::geometry::index::detail::rtree::node_variant_static_tag]'
/usr/local/include/boost/geometry/index/rtree.hpp:1280:63:   required from 'boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::size_type boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::raw_remove(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>; Parameters = boost::geometry::index::rstar<16ul>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >; Allocator = std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >; boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::size_type = long unsigned int; boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>]'
/usr/local/include/boost/geometry/index/rtree.hpp:640:38:   required from 'boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::size_type boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::remove(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>; Parameters = boost::geometry::index::rstar<16ul>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >; Allocator = std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >; boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::size_type = long unsigned int; boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>]'
main.cpp:19:19:   required from here
/usr/local/include/boost/geometry/strategies/agnostic/relate.hpp:29:71: error: no matching function for call to 'relate(const boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >&, const boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >&)'
         return detail::relate::relate<StaticMask>(geometry1, geometry2);
                                                                       ^
/usr/local/include/boost/geometry/strategies/agnostic/relate.hpp:29:71: note: candidate is:
In file included from /usr/local/include/boost/geometry/strategies/agnostic/relate.hpp:14:0,
                 from /usr/local/include/boost/geometry/strategies/strategies.hpp:74,
                 from /usr/local/include/boost/geometry/geometry.hpp:43,
                 from /usr/local/include/boost/geometry.hpp:17,
                 from main.cpp:1:
/usr/local/include/boost/geometry/algorithms/detail/relate/relate.hpp:282:1: note: template<class MatrixOrMask, class Geometry1, class Geometry2> typename boost::geometry::detail::relate::result_handler_type<Geometry1, Geometry2, MatrixOrMask>::type::result_type boost::geometry::detail::relate::relate(const Geometry1&, const Geometry2&, const MatrixOrMask&)
 relate(Geometry1 const& geometry1,
 ^
/usr/local/include/boost/geometry/algorithms/detail/relate/relate.hpp:282:1: note:   substitution of deduced template arguments resulted in errors seen above
In file included from /usr/local/include/boost/geometry/algorithms/within.hpp:45:0,
                 from /usr/local/include/boost/geometry/algorithms/covered_by.hpp:30,
                 from /usr/local/include/boost/geometry/algorithms/detail/disjoint/areal_areal.hpp:26,
                 from /usr/local/include/boost/geometry/algorithms/detail/disjoint/implementation.hpp:25,
                 from /usr/local/include/boost/geometry/algorithms/disjoint.hpp:25,
                 from /usr/local/include/boost/geometry/io/wkt/write.hpp:30,
                 from /usr/local/include/boost/geometry/io/wkt/wkt.hpp:18,
                 from /usr/local/include/boost/geometry/strategies/cartesian/buffer_end_round.hpp:20,
                 from /usr/local/include/boost/geometry/strategies/strategies.hpp:39,
                 from /usr/local/include/boost/geometry/geometry.hpp:43,
                 from /usr/local/include/boost/geometry.hpp:17,
                 from main.cpp:1:
/usr/local/include/boost/geometry/strategies/concepts/within_concept.hpp: In instantiation of 'boost::geometry::concept::WithinStrategyBoxBox<Strategy>::~WithinStrategyBoxBox() [with Strategy = boost::geometry::strategy::relate::relate<boost::mpl::vector<boost::geometry::detail::relate::static_mask<'T', '*', 'F', '*', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', 'T', 'F', '*', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', '*', 'F', 'T', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', '*', 'F', '*', 'T', 'F', '*', '*', '*'> > >]':
/usr/local/include/boost/concept/detail/general.hpp:38:28:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::geometry::concept::WithinStrategyBoxBox<boost::geometry::strategy::relate::relate<boost::mpl::vector<boost::geometry::detail::relate::static_mask<'T', '*', 'F', '*', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', 'T', 'F', '*', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', '*', 'F', 'T', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', '*', 'F', '*', 'T', 'F', '*', '*', '*'> > > >]'
/usr/local/include/boost/geometry/strategies/concepts/within_concept.hpp:268:5:   required from 'struct boost::geometry::concept::within::dispatch::check_within<boost::geometry::box_tag, boost::geometry::box_tag, boost::geometry::areal_tag, boost::geometry::strategy::relate::relate<boost::mpl::vector<boost::geometry::detail::relate::static_mask<'T', '*', 'F', '*', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', 'T', 'F', '*', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', '*', 'F', 'T', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', '*', 'F', '*', 'T', 'F', '*', '*', '*'> > > >'
/usr/local/include/boost/geometry/strategies/concepts/within_concept.hpp:283:70:   required from 'void boost::geometry::concept::within::check() [with FirstTag = boost::geometry::box_tag; SecondTag = boost::geometry::box_tag; CastedTag = boost::geometry::areal_tag; Strategy = boost::geometry::strategy::relate::relate<boost::mpl::vector<boost::geometry::detail::relate::static_mask<'T', '*', 'F', '*', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', 'T', 'F', '*', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', '*', 'F', 'T', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', '*', 'F', '*', 'T', 'F', '*', '*', '*'> > >]'
/usr/local/include/boost/geometry/algorithms/covered_by.hpp:269:15:   required from 'static bool boost::geometry::resolve_strategy::covered_by::apply(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >; Geometry2 = boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >; Strategy = boost::geometry::strategy::relate::relate<boost::mpl::vector<boost::geometry::detail::relate::static_mask<'T', '*', 'F', '*', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', 'T', 'F', '*', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', '*', 'F', 'T', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', '*', 'F', '*', 'T', 'F', '*', '*', '*'> > >]'
/usr/local/include/boost/geometry/algorithms/covered_by.hpp:305:71:   required from 'static bool boost::geometry::resolve_strategy::covered_by::apply(const Geometry1&, const Geometry2&, boost::geometry::default_strategy) [with Geometry1 = boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >; Geometry2 = boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >]'
/usr/local/include/boost/geometry/algorithms/covered_by.hpp:323:70:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/boost/variant/variant.hpp:2271:52:   required from 'typename Visitor::result_type boost::variant<T0, TN>::apply_visitor(Visitor&) [with Visitor = boost::geometry::index::detail::rtree::visitors::remove<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::detail::rtree::options<boost::geometry::index::rstar<16ul>, boost::geometry::index::detail::rtree::insert_reinsert_tag, boost::geometry::index::detail::rtree::choose_by_overlap_diff_tag, boost::geometry::index::detail::rtree::split_default_tag, boost::geometry::index::detail::rtree::rstar_tag, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::translator<boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> > >, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::allocators<std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::node_variant_static_tag> >; T0_ = boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::allocators<std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>; TN = {boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul, 4ul, 4ul, 32ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::allocators<std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul, 4ul, 4ul, 32ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>}; typename Visitor::result_type = void]'
/usr/local/include/boost/variant/detail/apply_visitor_unary.hpp:60:43:   required from 'typename Visitor::result_type boost::apply_visitor(Visitor&, Visitable&) [with Visitor = boost::geometry::index::detail::rtree::visitors::remove<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::detail::rtree::options<boost::geometry::index::rstar<16ul>, boost::geometry::index::detail::rtree::insert_reinsert_tag, boost::geometry::index::detail::rtree::choose_by_overlap_diff_tag, boost::geometry::index::detail::rtree::split_default_tag, boost::geometry::index::detail::rtree::rstar_tag, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::translator<boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> > >, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::allocators<std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::node_variant_static_tag> >; Visitable = boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::allocators<std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul, 4ul, 4ul, 32ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::allocators<std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul, 4ul, 4ul, 32ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >; typename Visitor::result_type = void]'
/usr/local/include/boost/geometry/index/detail/rtree/node/variant_visitor.hpp:49:30:   required from 'void boost::geometry::index::detail::rtree::apply_visitor(Visitor&, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<Value, Parameters, Box, Allocators, Tag>, boost::geometry::index::detail::rtree::variant_internal_node<Value, Parameters, Box, Allocators, Tag> >&) [with Visitor = boost::geometry::index::detail::rtree::visitors::remove<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::detail::rtree::options<boost::geometry::index::rstar<16ul>, boost::geometry::index::detail::rtree::insert_reinsert_tag, boost::geometry::index::detail::rtree::choose_by_overlap_diff_tag, boost::geometry::index::detail::rtree::split_default_tag, boost::geometry::index::detail::rtree::rstar_tag, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::translator<boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> > >, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::allocators<std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::node_variant_static_tag> >; Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>; Parameters = boost::geometry::index::rstar<16ul>; Box = boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >; Allocators = boost::geometry::index::detail::rtree::allocators<std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>, boost::geometry::index::rstar<16ul>, boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, boost::geometry::index::detail::rtree::node_variant_static_tag>; Tag = boost::geometry::index::detail::rtree::node_variant_static_tag]'
/usr/local/include/boost/geometry/index/rtree.hpp:1280:63:   required from 'boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::size_type boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::raw_remove(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>; Parameters = boost::geometry::index::rstar<16ul>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >; Allocator = std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >; boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::size_type = long unsigned int; boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>]'
/usr/local/include/boost/geometry/index/rtree.hpp:640:38:   required from 'boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::size_type boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::remove(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>; Parameters = boost::geometry::index::rstar<16ul>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >; Allocator = std::allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int> >; boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::size_type = long unsigned int; boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<float, 2ul, boost::geometry::cs::spherical_equatorial<boost::geometry::degree> > >, int>]'
main.cpp:19:19:   required from here
/usr/local/include/boost/geometry/strategies/concepts/within_concept.hpp:234:40: error: no matching function for call to 'boost::geometry::concept::WithinStrategyBoxBox<boost::geometry::strategy::relate::relate<boost::mpl::vector<boost::geometry::detail::relate::static_mask<'T', '*', 'F', '*', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', 'T', 'F', '*', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', '*', 'F', 'T', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', '*', 'F', '*', 'T', 'F', '*', '*', '*'> > > >::checker::apply(<unresolved overloaded function type>)'
         checker::apply(&Strategy::apply);
                                        ^
/usr/local/include/boost/geometry/strategies/concepts/within_concept.hpp:234:40: note: candidate is:
/usr/local/include/boost/geometry/strategies/concepts/within_concept.hpp:183:21: note: template<class ApplyMethod> static void boost::geometry::concept::WithinStrategyBoxBox<Strategy>::checker::apply(const ApplyMethod&) [with ApplyMethod = ApplyMethod; Strategy = boost::geometry::strategy::relate::relate<boost::mpl::vector<boost::geometry::detail::relate::static_mask<'T', '*', 'F', '*', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', 'T', 'F', '*', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', '*', 'F', 'T', '*', 'F', '*', '*', '*'>, boost::geometry::detail::relate::static_mask<'*', '*', 'F', '*', 'T', 'F', '*', '*', '*'> > >]
         static void apply(ApplyMethod const&)
                     ^
/usr/local/include/boost/geometry/strategies/concepts/within_concept.hpp:183:21: note:   template argument deduction/substitution failed:
/usr/local/include/boost/geometry/strategies/concepts/within_concept.hpp:234:40: note:   couldn't deduce template parameter 'ApplyMethod'
         checker::apply(&Strategy::apply);
                                        ^
