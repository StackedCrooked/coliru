In file included from /usr/local/include/c++/4.9.0/cstdint:35:0,
                 from main.cpp:1:
/usr/local/include/c++/4.9.0/bits/c++0x_warning.h:32:2: error: #error This file requires compiler and library support for the ISO C++ 2011 standard. This support is currently experimental, and must be enabled with the -std=c++11 or -std=gnu++11 compiler options.
 #error This file requires compiler and library support for the \
  ^
main.cpp:14:9: warning: identifier ‘nullptr’ is a keyword in C++11 [-Wc++0x-compat]
         : Value(v, static_cast<T*>(nullptr)) 
         ^
main.cpp:6:18: error: expected ‘)’ before ‘,’ token
     Value(int16_t, int16_t*)         { std::cout << __PRETTY_FUNCTION__; } 
                  ^
main.cpp:7:15: error: expected ‘)’ before ‘,’ token
  Value(int32_t, int32_t*)         { std::cout << __PRETTY_FUNCTION__; } 
               ^
main.cpp:8:15: error: expected ‘)’ before ‘,’ token
  Value(int64_t, int64_t*)         { std::cout << __PRETTY_FUNCTION__; } 
               ^
main.cpp: In constructor ‘Value::Value(T)’:
main.cpp:14:36: error: ‘nullptr’ was not declared in this scope
         : Value(v, static_cast<T*>(nullptr)) 
                                    ^
main.cpp:14:44: warning: delegating constructors only available with -std=c++11 or -std=gnu++11
         : Value(v, static_cast<T*>(nullptr)) 
                                            ^
main.cpp: In function ‘int main()’:
main.cpp:20:11: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11
     Value { 0 };
           ^
main.cpp:21:11: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11
     Value { 0l };
           ^
main.cpp:22:11: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11
     Value { 0.f };
           ^
main.cpp:23:11: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11
     Value { 0. };
           ^
main.cpp:24:11: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11
     Value { 0.l };
           ^
