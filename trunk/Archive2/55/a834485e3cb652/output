; ModuleID = 'main.cpp'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@a = global <4 x float> zeroinitializer, align 16
@b = global <4 x float> zeroinitializer, align 16

; Function Attrs: nounwind readnone uwtable
define float @_Z3chkDv4_fS_(<4 x float> %a, <4 x float> %b) #0 {
  %1 = fmul <4 x float> %a, %b
  %2 = extractelement <4 x float> %1, i32 0
  %3 = extractelement <4 x float> %1, i32 1
  %4 = fadd float %2, %3
  %5 = extractelement <4 x float> %1, i32 2
  %6 = fadd float %5, %4
  ret float %6
}

; Function Attrs: nounwind readonly uwtable
define i32 @main() #1 {
  %1 = load <4 x float>* @a, align 16, !tbaa !1
  %2 = load <4 x float>* @b, align 16, !tbaa !1
  %3 = tail call <4 x float> @llvm.x86.sse41.dpps(<4 x float> %1, <4 x float> %2, i32 113)
  %4 = tail call i32 @llvm.x86.sse.movmsk.ps(<4 x float> %3) #3
  ret i32 %4
}

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.x86.sse41.dpps(<4 x float>, <4 x float>, i32) #2

; Function Attrs: nounwind readnone
declare i32 @llvm.x86.sse.movmsk.ps(<4 x float>) #2

attributes #0 = { nounwind readnone uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.4 (tags/RELEASE_34/final 206911)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"omnipotent char", metadata !3, i64 0}
!3 = metadata !{metadata !"Simple C/C++ TBAA"}
	.file	"main.cpp"
	.text
	.globl	_Z3chkDv4_fS_
	.align	16, 0x90
	.type	_Z3chkDv4_fS_,@function
_Z3chkDv4_fS_:                          # @_Z3chkDv4_fS_
	.cfi_startproc
# BB#0:
	vmulps	%xmm1, %xmm0, %xmm0
	vpshufd	$1, %xmm0, %xmm1        # xmm1 = xmm0[1,0,0,0]
	vaddss	%xmm1, %xmm0, %xmm1
	vmovhlps	%xmm0, %xmm0, %xmm0 # xmm0 = xmm0[1,1]
	vaddss	%xmm1, %xmm0, %xmm0
	ret
.Ltmp0:
	.size	_Z3chkDv4_fS_, .Ltmp0-_Z3chkDv4_fS_
	.cfi_endproc

	.globl	main
	.align	16, 0x90
	.type	main,@function
main:                                   # @main
	.cfi_startproc
# BB#0:
	vmovaps	a(%rip), %xmm0
	vdpps	$113, b(%rip), %xmm0, %xmm0
	vmovmskps	%xmm0, %eax
	ret
.Ltmp1:
	.size	main, .Ltmp1-main
	.cfi_endproc

	.type	a,@object               # @a
	.bss
	.globl	a
	.align	16
a:
	.zero	16
	.size	a, 16

	.type	b,@object               # @b
	.globl	b
	.align	16
b:
	.zero	16
	.size	b, 16


	.ident	"clang version 3.4 (tags/RELEASE_34/final 206911)"
	.section	".note.GNU-stack","",@progbits
