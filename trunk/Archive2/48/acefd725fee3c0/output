In file included from main.cpp:7:
In file included from /usr/local/include/boost/bind.hpp:22:
/usr/local/include/boost/bind/bind.hpp:1171:67: error: invalid argument type 'const Age' to unary expression
    template<class V> bool operator()(V const & v) const { return !v; }
                                                                  ^~
/usr/local/include/boost/bind/bind.hpp:243:16: note: in instantiation of function template specialization 'boost::_bi::logical_not::operator()<Age>' requested here
        return unwrapper<F>::unwrap(f, 0)(a[base_type::a1_]);
               ^
/usr/local/include/boost/bind/bind_template.hpp:318:27: note: in instantiation of function template specialization 'boost::_bi::list1<boost::_bi::bind_t<Age, boost::_mfi::mf0<Age, Person>, boost::_bi::list1<boost::arg<1> > > >::operator()<bool, boost::_bi::logical_not, const boost::_bi::list1<Person &> >' requested here
        BOOST_BIND_RETURN l_(type<result_type>(), f_, a, 0);
                          ^
/usr/local/include/boost/bind/bind.hpp:237:126: note: in instantiation of function template specialization 'boost::_bi::bind_t<bool, boost::_bi::logical_not, boost::_bi::list1<boost::_bi::bind_t<Age, boost::_mfi::mf0<Age, Person>, boost::_bi::list1<boost::arg<1> > > > >::eval<const boost::_bi::list1<Person &> >' requested here
    template<class R, class F, class L> typename result_traits<R, F>::type operator[] (bind_t<R, F, L> & b) const { return b.eval(*this); }
                                                                                                                             ^
/usr/local/include/boost/bind/bind.hpp:303:43: note: in instantiation of function template specialization 'boost::_bi::list1<Person &>::operator[]<bool, boost::_bi::logical_not, boost::_bi::list1<boost::_bi::bind_t<Age, boost::_mfi::mf0<Age, Person>, boost::_bi::list1<boost::arg<1> > > > >' requested here
        return unwrapper<F>::unwrap(f, 0)(a[base_type::a1_], a[base_type::a2_]);
                                          ^
/usr/local/include/boost/bind/bind_template.hpp:32:27: note: in instantiation of function template specialization 'boost::_bi::list2<boost::_bi::bind_t<bool, boost::_bi::logical_not, boost::_bi::list1<boost::_bi::bind_t<Age, boost::_mfi::mf0<Age, Person>, boost::_bi::list1<boost::arg<1> > > > >, boost::_bi::value<int> >::operator()<bool, boost::_bi::equal, boost::_bi::list1<Person &> >' requested here
        BOOST_BIND_RETURN l_(type<result_type>(), f_, a, 0);
                          ^
/usr/local/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.9.2/../../../../include/c++/4.9.2/bits/predefined_ops.h:231:16: note: in instantiation of function template specialization 'boost::_bi::bind_t<bool, boost::_bi::equal, boost::_bi::list2<boost::_bi::bind_t<bool, boost::_bi::logical_not, boost::_bi::list1<boost::_bi::bind_t<Age, boost::_mfi::mf0<Age, Person>, boost::_bi::list1<boost::arg<1> > > > >, boost::_bi::value<int> > >::operator()<Person>' requested here
        { return bool(_M_pred(*__it)); }
                      ^
/usr/local/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.9.2/../../../../include/c++/4.9.2/bits/stl_algo.h:643:7: note: in instantiation of function template specialization '__gnu_cxx::__ops::_Iter_pred<boost::_bi::bind_t<bool, boost::_bi::equal, boost::_bi::list2<boost::_bi::bind_t<bool, boost::_bi::logical_not, boost::_bi::list1<boost::_bi::bind_t<Age, boost::_mfi::mf0<Age, Person>, boost::_bi::list1<boost::arg<1> > > > >, boost::_bi::value<int> > > >::operator()<__gnu_cxx::__normal_iterator<Person *, std::vector<Person, std::allocator<Person> > > >' requested here
        if (!__pred(__first))
             ^
/usr/local/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.9.2/../../../../include/c++/4.9.2/bits/stl_algo.h:711:19: note: in instantiation of function template specialization 'std::__remove_copy_if<__gnu_cxx::__normal_iterator<Person *, std::vector<Person, std::allocator<Person> > >, std::back_insert_iterator<std::vector<Person, std::allocator<Person> > >, __gnu_cxx::__ops::_Iter_pred<boost::_bi::bind_t<bool, boost::_bi::equal, boost::_bi::list2<boost::_bi::bind_t<bool, boost::_bi::logical_not, boost::_bi::list1<boost::_bi::bind_t<Age, boost::_mfi::mf0<Age, Person>, boost::_bi::list1<boost::arg<1> > > > >, boost::_bi::value<int> > > > >' requested here
      return std::__remove_copy_if(__first, __last, __result,
                  ^
main.cpp:51:8: note: in instantiation of function template specialization 'std::remove_copy_if<__gnu_cxx::__normal_iterator<Person *, std::vector<Person, std::allocator<Person> > >, std::back_insert_iterator<std::vector<Person, std::allocator<Person> > >, boost::_bi::bind_t<bool, boost::_bi::equal, boost::_bi::list2<boost::_bi::bind_t<bool, boost::_bi::logical_not, boost::_bi::list1<boost::_bi::bind_t<Age, boost::_mfi::mf0<Age, Person>, boost::_bi::list1<boost::arg<1> > > > >, boost::_bi::value<int> > > >' requested here
  std::remove_copy_if(v.begin(), v.end(), std::back_inserter(ageof35),!boost::bind(&Person::GetAge,_1)==35);
       ^
1 error generated.
