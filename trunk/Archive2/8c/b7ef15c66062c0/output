<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN"
   "http://www.w3.org/TR/html4/strict.dtd">

<html>
<head>
  <title></title>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <style type="text/css">
td.linenos { background-color: #f0f0f0; padding-right: 10px; }
span.lineno { background-color: #f0f0f0; padding: 0 5px 0 5px; }
pre { line-height: 125%; }
body .hll { background-color: #ffffcc }
body  { background: #f8f8f8; }
body .c { color: #408080; font-style: italic } /* Comment */
body .err { border: 1px solid #FF0000 } /* Error */
body .k { color: #008000; font-weight: bold } /* Keyword */
body .o { color: #666666 } /* Operator */
body .cm { color: #408080; font-style: italic } /* Comment.Multiline */
body .cp { color: #BC7A00 } /* Comment.Preproc */
body .c1 { color: #408080; font-style: italic } /* Comment.Single */
body .cs { color: #408080; font-style: italic } /* Comment.Special */
body .gd { color: #A00000 } /* Generic.Deleted */
body .ge { font-style: italic } /* Generic.Emph */
body .gr { color: #FF0000 } /* Generic.Error */
body .gh { color: #000080; font-weight: bold } /* Generic.Heading */
body .gi { color: #00A000 } /* Generic.Inserted */
body .go { color: #808080 } /* Generic.Output */
body .gp { color: #000080; font-weight: bold } /* Generic.Prompt */
body .gs { font-weight: bold } /* Generic.Strong */
body .gu { color: #800080; font-weight: bold } /* Generic.Subheading */
body .gt { color: #0040D0 } /* Generic.Traceback */
body .kc { color: #008000; font-weight: bold } /* Keyword.Constant */
body .kd { color: #008000; font-weight: bold } /* Keyword.Declaration */
body .kn { color: #008000; font-weight: bold } /* Keyword.Namespace */
body .kp { color: #008000 } /* Keyword.Pseudo */
body .kr { color: #008000; font-weight: bold } /* Keyword.Reserved */
body .kt { color: #B00040 } /* Keyword.Type */
body .m { color: #666666 } /* Literal.Number */
body .s { color: #BA2121 } /* Literal.String */
body .na { color: #7D9029 } /* Name.Attribute */
body .nb { color: #008000 } /* Name.Builtin */
body .nc { color: #0000FF; font-weight: bold } /* Name.Class */
body .no { color: #880000 } /* Name.Constant */
body .nd { color: #AA22FF } /* Name.Decorator */
body .ni { color: #999999; font-weight: bold } /* Name.Entity */
body .ne { color: #D2413A; font-weight: bold } /* Name.Exception */
body .nf { color: #0000FF } /* Name.Function */
body .nl { color: #A0A000 } /* Name.Label */
body .nn { color: #0000FF; font-weight: bold } /* Name.Namespace */
body .nt { color: #008000; font-weight: bold } /* Name.Tag */
body .nv { color: #19177C } /* Name.Variable */
body .ow { color: #AA22FF; font-weight: bold } /* Operator.Word */
body .w { color: #bbbbbb } /* Text.Whitespace */
body .mf { color: #666666 } /* Literal.Number.Float */
body .mh { color: #666666 } /* Literal.Number.Hex */
body .mi { color: #666666 } /* Literal.Number.Integer */
body .mo { color: #666666 } /* Literal.Number.Oct */
body .sb { color: #BA2121 } /* Literal.String.Backtick */
body .sc { color: #BA2121 } /* Literal.String.Char */
body .sd { color: #BA2121; font-style: italic } /* Literal.String.Doc */
body .s2 { color: #BA2121 } /* Literal.String.Double */
body .se { color: #BB6622; font-weight: bold } /* Literal.String.Escape */
body .sh { color: #BA2121 } /* Literal.String.Heredoc */
body .si { color: #BB6688; font-weight: bold } /* Literal.String.Interpol */
body .sx { color: #008000 } /* Literal.String.Other */
body .sr { color: #BB6688 } /* Literal.String.Regex */
body .s1 { color: #BA2121 } /* Literal.String.Single */
body .ss { color: #19177C } /* Literal.String.Symbol */
body .bp { color: #008000 } /* Name.Builtin.Pseudo */
body .vc { color: #19177C } /* Name.Variable.Class */
body .vg { color: #19177C } /* Name.Variable.Global */
body .vi { color: #19177C } /* Name.Variable.Instance */
body .il { color: #666666 } /* Literal.Number.Integer.Long */

  </style>
</head>
<body>
<h2></h2>

<div class="highlight"><pre>	.file	&quot;main.cpp&quot;						.file	&quot;main.cpp&quot;
	.section	.rodata				      |		.section	.text._ZN14bound_functionIvIEE4callEv
	.type	_ZStL19piecewise_construct, @object	      |		.p2align 4,,15
	.size	_ZStL19piecewise_construct, 1		      |		.weak	_ZN14bound_functionIvIEE4callEv
_ZStL19piecewise_construct:				      |		.type	_ZN14bound_functionIvIEE4callEv, @function
	.zero	1					      |	_ZN14bound_functionIvIEE4callEv:
	.type	_ZStL13allocator_arg, @object		      |	.LFB1756:
	.size	_ZStL13allocator_arg, 1			      &lt;
_ZStL13allocator_arg:					      &lt;
	.zero	1					      &lt;
	.type	_ZStL6ignore, @object			      &lt;
	.size	_ZStL6ignore, 1				      &lt;
_ZStL6ignore:						      &lt;
	.zero	1					      &lt;
	.section	.text._ZNSt9_Any_data9_M_accessEv,&quot;ax &lt;
	.align 2					      &lt;
	.weak	_ZNSt9_Any_data9_M_accessEv		      &lt;
	.type	_ZNSt9_Any_data9_M_accessEv, @function	      &lt;
_ZNSt9_Any_data9_M_accessEv:				      &lt;
.LFB1062:						      &lt;
	.cfi_startproc							.cfi_startproc
	pushq	%rbp					      |	#APP
							      &gt;	# 41 &quot;main.cpp&quot; 1
							      &gt;		movq %r15, %rdi
							      &gt;	# 0 &quot;&quot; 2
							      &gt;	#NO_APP
							      &gt;		cmpq	$0, 16(%rdi)
							      &gt;		je	.L5
							      &gt;		movq	24(%rdi), %rax
							      &gt;		jmp	*%rax
							      &gt;	.L5:
							      &gt;		pushq	%rax
	.cfi_def_cfa_offset 16						.cfi_def_cfa_offset 16
	.cfi_offset 6, -16				      |		call	_ZSt25__throw_bad_function_callv
	movq	%rsp, %rbp				      &lt;
	.cfi_def_cfa_register 6				      &lt;
	movq	%rdi, -8(%rbp)				      &lt;
	movq	-8(%rbp), %rax				      &lt;
	popq	%rbp					      &lt;
	.cfi_def_cfa 7, 8				      &lt;
	ret						      &lt;
	.cfi_endproc							.cfi_endproc
.LFE1062:						      |	.LFE1756:
	.size	_ZNSt9_Any_data9_M_accessEv, .-_ZNSt9_Any_dat |		.size	_ZN14bound_functionIvIEE4callEv, .-_ZN14bound
	.section	.text._ZNKSt9_Any_data9_M_accessEv,&quot;a |		.weak	_ZN14bound_functionIvJEE4callEv
	.align 2					      |		.set	_ZN14bound_functionIvJEE4callEv,_ZN14bound_fu
	.weak	_ZNKSt9_Any_data9_M_accessEv		      |		.section	.text.unlikely,&quot;ax&quot;,@progbits
	.type	_ZNKSt9_Any_data9_M_accessEv, @function	      |		.type	_ZStlsISt11char_traitsIcEERSt13basic_ostreamI
_ZNKSt9_Any_data9_M_accessEv:				      |	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.part.
.LFB1063:						      |	.LFB1830:
	.cfi_startproc					      |		.cfi_startproc
	pushq	%rbp					      |		pushq	%rdx
	.cfi_def_cfa_offset 16				      |		.cfi_def_cfa_offset 16
	.cfi_offset 6, -16				      |		movq	(%rdi), %rax
	movq	%rsp, %rbp				      |		addq	-24(%rax), %rdi
	.cfi_def_cfa_register 6				      |		movl	32(%rdi), %esi
	movq	%rdi, -8(%rbp)				      |		orl	$1, %esi
	movq	-8(%rbp), %rax				      |		call	_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt
	popq	%rbp					      |		popq	%rcx
	.cfi_def_cfa 7, 8				      |		.cfi_def_cfa_offset 8
	ret								ret
	.cfi_endproc							.cfi_endproc
.LFE1063:						      |	.LFE1830:
	.size	_ZNKSt9_Any_data9_M_accessEv, .-_ZNKSt9_Any_d |		.size	_ZStlsISt11char_traitsIcEERSt13basic_ostreamI
	.section	.text._ZNSt14_Function_baseC2Ev,&quot;axG&quot; |		.text
	.align 2					      |		.p2align 4,,15
	.weak	_ZNSt14_Function_baseC2Ev		      |		.type	_ZNSt14_Function_base13_Base_managerIZ4mainEU
	.type	_ZNSt14_Function_baseC2Ev, @function	      |	_ZNSt14_Function_base13_Base_managerIZ4mainEUlvE_E10_M_manage
_ZNSt14_Function_baseC2Ev:				      |	.LFB1789:
.LFB1088:						      &lt;
	.cfi_startproc							.cfi_startproc
	pushq	%rbp							pushq	%rbp
	.cfi_def_cfa_offset 16						.cfi_def_cfa_offset 16
	.cfi_offset 6, -16						.cfi_offset 6, -16
	movq	%rsp, %rbp				      |		pushq	%rbx
	.cfi_def_cfa_register 6				      |		.cfi_def_cfa_offset 24
	movq	%rdi, -8(%rbp)				      |		.cfi_offset 3, -24
	movq	-8(%rbp), %rax				      |		movq	%rdi, %rbx
	movq	$0, 16(%rax)				      |		subq	$8, %rsp
							      &gt;		.cfi_def_cfa_offset 32
							      &gt;		cmpl	$1, %edx
							      &gt;		je	.L10
							      &gt;		jle	.L16
							      &gt;		cmpl	$2, %edx
							      &gt;		je	.L13
							      &gt;		cmpl	$3, %edx
							      &gt;		.p2align 4,,5
							      &gt;		jne	.L9
							      &gt;		movq	(%rdi), %rdi
							      &gt;		call	_ZdlPv
							      &gt;	.L9:
							      &gt;		addq	$8, %rsp
							      &gt;		.cfi_remember_state
							      &gt;		.cfi_def_cfa_offset 24
							      &gt;		xorl	%eax, %eax
							      &gt;		popq	%rbx
							      &gt;		.cfi_def_cfa_offset 16
	popq	%rbp							popq	%rbp
	.cfi_def_cfa 7, 8				      |		.cfi_def_cfa_offset 8
	ret								ret
	.cfi_endproc					      |		.p2align 4,,10
.LFE1088:						      |		.p2align 3
	.size	_ZNSt14_Function_baseC2Ev, .-_ZNSt14_Function |	.L13:
	.weak	_ZNSt14_Function_baseC1Ev		      |		.cfi_restore_state
	.set	_ZNSt14_Function_baseC1Ev,_ZNSt14_Function_ba |		movq	(%rsi), %rbp
	.section	.text._ZNSt14_Function_baseD2Ev,&quot;axG&quot; |		movl	$8, %edi
	.align 2					      |		call	_Znwm
	.weak	_ZNSt14_Function_baseD2Ev		      |		movq	0(%rbp), %rdx
	.type	_ZNSt14_Function_baseD2Ev, @function	      |		movq	%rdx, (%rax)
_ZNSt14_Function_baseD2Ev:				      |		movq	%rax, (%rbx)
.LFB1091:						      |		addq	$8, %rsp
	.cfi_startproc					      |		.cfi_remember_state
	.cfi_personality 0x3,__gxx_personality_v0	      |		.cfi_def_cfa_offset 24
	.cfi_lsda 0x3,.LLSDA1091			      |		popq	%rbx
	pushq	%rbp					      &lt;
	.cfi_def_cfa_offset 16						.cfi_def_cfa_offset 16
	.cfi_offset 6, -16				      |		xorl	%eax, %eax
	movq	%rsp, %rbp				      |		popq	%rbp
	.cfi_def_cfa_register 6				      |		.cfi_def_cfa_offset 8
	subq	$16, %rsp				      &lt;
	movq	%rdi, -8(%rbp)				      &lt;
	movq	-8(%rbp), %rax				      &lt;
	movq	16(%rax), %rax				      &lt;
	testq	%rax, %rax				      &lt;
	je	.L6					      &lt;
	movq	-8(%rbp), %rax				      &lt;
	movq	16(%rax), %rax				      &lt;
	movq	-8(%rbp), %rsi				      &lt;
	movq	-8(%rbp), %rcx				      &lt;
	movl	$3, %edx				      &lt;
	movq	%rcx, %rdi				      &lt;
	call	*%rax					      &lt;
.L6:							      &lt;
	leave						      &lt;
	.cfi_def_cfa 7, 8				      &lt;
	ret								ret
	.cfi_endproc					      |		.p2align 4,,10
.LFE1091:						      |		.p2align 3
	.globl	__gxx_personality_v0			      |	.L16:
	.section	.gcc_except_table._ZNSt14_Function_ba |		.cfi_restore_state
.LLSDA1091:						      |		testl	%edx, %edx
	.byte	0xff					      |		jne	.L9
	.byte	0xff					      |		movq	$_ZTIZ4mainEUlvE_, (%rdi)
	.byte	0x1					      |		addq	$8, %rsp
	.uleb128 .LLSDACSE1091-.LLSDACSB1091		      |		.cfi_remember_state
.LLSDACSB1091:						      |		.cfi_def_cfa_offset 24
.LLSDACSE1091:						      |		xorl	%eax, %eax
	.section	.text._ZNSt14_Function_baseD2Ev,&quot;axG&quot; |		popq	%rbx
	.size	_ZNSt14_Function_baseD2Ev, .-_ZNSt14_Function &lt;
	.weak	_ZNSt14_Function_baseD1Ev		      &lt;
	.set	_ZNSt14_Function_baseD1Ev,_ZNSt14_Function_ba &lt;
	.section	.text._ZNKSt14_Function_base8_M_empty &lt;
	.align 2					      &lt;
	.weak	_ZNKSt14_Function_base8_M_emptyEv	      &lt;
	.type	_ZNKSt14_Function_base8_M_emptyEv, @function  &lt;
_ZNKSt14_Function_base8_M_emptyEv:			      &lt;
.LFB1093:						      &lt;
	.cfi_startproc					      &lt;
	pushq	%rbp					      &lt;
	.cfi_def_cfa_offset 16						.cfi_def_cfa_offset 16
	.cfi_offset 6, -16				      &lt;
	movq	%rsp, %rbp				      &lt;
	.cfi_def_cfa_register 6				      &lt;
	movq	%rdi, -8(%rbp)				      &lt;
	movq	-8(%rbp), %rax				      &lt;
	movq	16(%rax), %rax				      &lt;
	testq	%rax, %rax				      &lt;
	sete	%al					      &lt;
	popq	%rbp							popq	%rbp
	.cfi_def_cfa 7, 8				      |		.cfi_def_cfa_offset 8
	ret								ret
	.cfi_endproc					      |		.p2align 4,,10
.LFE1093:						      |		.p2align 3
	.size	_ZNKSt14_Function_base8_M_emptyEv, .-_ZNKSt14 |	.L10:
	.local	_ZStL8__ioinit				      |		.cfi_restore_state
	.comm	_ZStL8__ioinit,1,1			      |		movq	(%rsi), %rax
	.text						      |		movq	%rax, (%rdi)
	.globl	_Z9call_backPFvvE			      |		addq	$8, %rsp
	.type	_Z9call_backPFvvE, @function		      |		.cfi_def_cfa_offset 24
_Z9call_backPFvvE:					      |		xorl	%eax, %eax
.LFB1542:						      |		popq	%rbx
	.cfi_startproc					      &lt;
	pushq	%rbp					      &lt;
	.cfi_def_cfa_offset 16						.cfi_def_cfa_offset 16
	.cfi_offset 6, -16				      |		popq	%rbp
	movq	%rsp, %rbp				      |		.cfi_def_cfa_offset 8
	.cfi_def_cfa_register 6				      &lt;
	subq	$16, %rsp				      &lt;
	movq	%rdi, -8(%rbp)				      &lt;
	movq	-8(%rbp), %rax				      &lt;
	call	*%rax					      &lt;
	leave						      &lt;
	.cfi_def_cfa 7, 8				      &lt;
	ret								ret
	.cfi_endproc							.cfi_endproc
.LFE1542:						      |	.LFE1789:
	.size	_Z9call_backPFvvE, .-_Z9call_backPFvvE	      |		.size	_ZNSt14_Function_base13_Base_managerIZ4mainEU
	.section	.rodata				      |		.section	.rodata.str1.1,&quot;aMS&quot;,@progbits,1
.LC0:								.LC0:
	.string	&quot;Hello, world!\n&quot;					.string	&quot;Hello, world!\n&quot;
.LC1:								.LC1:
	.string	&quot;x = &quot;							.string	&quot;x = &quot;
.LC2:								.LC2:
	.string	&quot;!\n&quot;							.string	&quot;!\n&quot;
	.text								.text
	.align 2					      |		.p2align 4,,15
	.type	_ZZ4mainENKUlvE_clEv, @function		      |		.type	_ZNSt17_Function_handlerIFvvEZ4mainEUlvE_E9_M
_ZZ4mainENKUlvE_clEv:					      |	_ZNSt17_Function_handlerIFvvEZ4mainEUlvE_E9_M_invokeERKSt9_An
.LFB1544:						      |	.LFB1788:
	.cfi_startproc							.cfi_startproc
	pushq	%rbp					      &lt;
	.cfi_def_cfa_offset 16				      &lt;
	.cfi_offset 6, -16				      &lt;
	movq	%rsp, %rbp				      &lt;
	.cfi_def_cfa_register 6				      &lt;
	pushq	%rbx							pushq	%rbx
	subq	$24, %rsp				      |		.cfi_def_cfa_offset 16
	.cfi_offset 3, -24				      |		.cfi_offset 3, -16
	movq	%rdi, -24(%rbp)				      |		movq	(%rdi), %rbx
							      &gt;		movl	$14, %edx
	movl	$.LC0, %esi						movl	$.LC0, %esi
	movl	$_ZSt4cout, %edi					movl	$_ZSt4cout, %edi
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamI |		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERS
	movq	-24(%rbp), %rax				      |		movq	(%rbx), %rax
	movq	(%rax), %rax				      |		movl	$.LC1, %esi
							      &gt;		movl	$_ZSt4cout, %edi
	movl	(%rax), %ebx						movl	(%rax), %ebx
	leal	1(%rbx), %edx						leal	1(%rbx), %edx
	movl	%edx, (%rax)						movl	%edx, (%rax)
	movl	$.LC1, %esi				      |		movl	$4, %edx
	movl	$_ZSt4cout, %edi			      |		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERS
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamI &lt;
	movl	%ebx, %esi						movl	%ebx, %esi
	movq	%rax, %rdi				      |		movl	$_ZSt4cout, %edi
	call	_ZNSolsEi						call	_ZNSolsEi
							      &gt;		popq	%rbx
							      &gt;		.cfi_def_cfa_offset 8
							      &gt;		movl	$2, %edx
	movl	$.LC2, %esi						movl	$.LC2, %esi
	movq	%rax, %rdi						movq	%rax, %rdi
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamI |		jmp	_ZSt16__ostream_insertIcSt11char_traitsIcEERS
	addq	$24, %rsp				      &lt;
	popq	%rbx					      &lt;
	popq	%rbp					      &lt;
	.cfi_def_cfa 7, 8				      &lt;
	ret						      &lt;
	.cfi_endproc							.cfi_endproc
.LFE1544:						      |	.LFE1788:
	.size	_ZZ4mainENKUlvE_clEv, .-_ZZ4mainENKUlvE_clEv  |		.size	_ZNSt17_Function_handlerIFvvEZ4mainEUlvE_E9_M
	.section	.text._ZNSt8functionIFvvEED2Ev,&quot;axG&quot;, |		.p2align 4,,15
	.align 2					      |		.globl	_Z9call_backPFvvE
	.weak	_ZNSt8functionIFvvEED2Ev		      |		.type	_Z9call_backPFvvE, @function
	.type	_ZNSt8functionIFvvEED2Ev, @function	      |	_Z9call_backPFvvE:
_ZNSt8functionIFvvEED2Ev:				      |	.LFB1638:
.LFB1547:						      &lt;
	.cfi_startproc							.cfi_startproc
	pushq	%rbp					      |		jmp	*%rdi
	.cfi_def_cfa_offset 16				      &lt;
	.cfi_offset 6, -16				      &lt;
	movq	%rsp, %rbp				      &lt;
	.cfi_def_cfa_register 6				      &lt;
	subq	$16, %rsp				      &lt;
	movq	%rdi, -8(%rbp)				      &lt;
	movq	-8(%rbp), %rax				      &lt;
	movq	%rax, %rdi				      &lt;
	call	_ZNSt14_Function_baseD2Ev		      &lt;
	leave						      &lt;
	.cfi_def_cfa 7, 8				      &lt;
	ret						      &lt;
	.cfi_endproc							.cfi_endproc
.LFE1547:						      |	.LFE1638:
	.size	_ZNSt8functionIFvvEED2Ev, .-_ZNSt8functionIFv |		.size	_Z9call_backPFvvE, .-_Z9call_backPFvvE
	.weak	_ZNSt8functionIFvvEED1Ev		      |		.section	.text.startup,&quot;ax&quot;,@progbits
	.set	_ZNSt8functionIFvvEED1Ev,_ZNSt8functionIFvvEE |		.p2align 4,,15
	.section	.text._ZN14bound_functionIvIEED2Ev,&quot;a &lt;
	.align 2					      &lt;
	.weak	_ZN14bound_functionIvIEED2Ev		      &lt;
	.type	_ZN14bound_functionIvIEED2Ev, @function	      &lt;
_ZN14bound_functionIvIEED2Ev:				      &lt;
.LFB1549:						      &lt;
	.cfi_startproc					      &lt;
	pushq	%rbp					      &lt;
	.cfi_def_cfa_offset 16				      &lt;
	.cfi_offset 6, -16				      &lt;
	movq	%rsp, %rbp				      &lt;
	.cfi_def_cfa_register 6				      &lt;
	subq	$16, %rsp				      &lt;
	movq	%rdi, -8(%rbp)				      &lt;
	movq	-8(%rbp), %rax				      &lt;
	movq	%rax, %rdi				      &lt;
	call	_ZNSt8functionIFvvEED1Ev		      &lt;
	leave						      &lt;
	.cfi_def_cfa 7, 8				      &lt;
	ret						      &lt;
	.cfi_endproc					      &lt;
.LFE1549:						      &lt;
	.size	_ZN14bound_functionIvIEED2Ev, .-_ZN14bound_fu &lt;
	.weak	_ZN14bound_functionIvIEED1Ev		      &lt;
	.set	_ZN14bound_functionIvIEED1Ev,_ZN14bound_funct &lt;
	.weak	_ZN14bound_functionIvJEED1Ev		      &lt;
	.set	_ZN14bound_functionIvJEED1Ev,_ZN14bound_funct &lt;
	.weak	_ZN14bound_functionIvJEED2Ev		      &lt;
	.set	_ZN14bound_functionIvJEED2Ev,_ZN14bound_funct &lt;
	.text						      &lt;
	.globl	main							.globl	main
	.type	main, @function						.type	main, @function
main:								main:
.LFB1543:						      |	.LFB1639:
	.cfi_startproc							.cfi_startproc
	.cfi_personality 0x3,__gxx_personality_v0			.cfi_personality 0x3,__gxx_personality_v0
	.cfi_lsda 0x3,.LLSDA1543			      |		.cfi_lsda 0x3,.LLSDA1639
	pushq	%rbp							pushq	%rbp
	.cfi_def_cfa_offset 16						.cfi_def_cfa_offset 16
	.cfi_offset 6, -16						.cfi_offset 6, -16
	movq	%rsp, %rbp				      |		movl	$8, %edi
	.cfi_def_cfa_register 6				      &lt;
	pushq	%rbx							pushq	%rbx
	subq	$72, %rsp				      |		.cfi_def_cfa_offset 24
	.cfi_offset 3, -24						.cfi_offset 3, -24
							      &gt;		subq	$104, %rsp
							      &gt;		.cfi_def_cfa_offset 128
	movq	%fs:40, %rax						movq	%fs:40, %rax
	movq	%rax, -24(%rbp)				      |		movq	%rax, 88(%rsp)
	xorl	%eax, %eax						xorl	%eax, %eax
	movl	$0, -72(%rbp)				      |		movl	$0, 12(%rsp)
	leaq	-72(%rbp), %rax				      |		movq	$0, 64(%rsp)
	movq	%rax, %rdx				      &lt;
	leaq	-64(%rbp), %rax				      &lt;
	movq	%rdx, %rsi				      &lt;
	movq	%rax, %rdi				      &lt;
.LEHB0:								.LEHB0:
	call	_ZN14bound_functionIvIEEC1IZ4mainEUlvE_EET_   |		call	_Znwm
.LEHE0:								.LEHE0:
	movl	$0, -68(%rbp)				      |		leaq	12(%rsp), %rdx
	jmp	.L17					      |		leaq	48(%rsp), %rbp
.L18:							      |		movl	$10, %ebx
	leaq	-64(%rbp), %rax				      |		movq	%rdx, (%rax)
	movq	%rax, %rdi				      |		movq	%rax, 48(%rsp)
	call	_ZN14bound_functionIvIEEcvPFvvEEv	      |		movq	$_ZNSt17_Function_handlerIFvvEZ4mainEUlvE_E9_
	movq	%rax, %rdi				      |		movq	$_ZNSt14_Function_base13_Base_managerIZ4mainE
.LEHB1:							      |		.p2align 4,,10
	call	_Z9call_backPFvvE			      |		.p2align 3
.LEHE1:							      &lt;
	addl	$1, -68(%rbp)				      &lt;
.L17:							      &lt;
	cmpl	$9, -68(%rbp)				      &lt;
	jle	.L18					      &lt;
	leaq	-64(%rbp), %rax				      &lt;
	movq	%rax, %rdi				      &lt;
	call	_ZN14bound_functionIvIEED1Ev		      &lt;
	movl	$0, %eax				      &lt;
	movq	-24(%rbp), %rcx				      &lt;
	xorq	%fs:40, %rcx				      &lt;
	je	.L22					      &lt;
	jmp	.L25					      &lt;
.L24:							      &lt;
	movq	%rax, %rbx				      &lt;
	leaq	-64(%rbp), %rax				      &lt;
	movq	%rax, %rdi				      &lt;
	call	_ZN14bound_functionIvIEED1Ev		      &lt;
	movq	%rbx, %rax				      &lt;
	jmp	.L21					      &lt;
.L23:							      &lt;
.L21:								.L21:
	movq	%rax, %rdi				      |		movl	$7, %edx
.LEHB2:							      |		xorl	%r9d, %r9d
	call	_Unwind_Resume				      &lt;
.LEHE2:							      &lt;
.L25:							      &lt;
	call	__stack_chk_fail			      &lt;
.L22:							      &lt;
	addq	$72, %rsp				      &lt;
	popq	%rbx					      &lt;
	popq	%rbp					      &lt;
	.cfi_def_cfa 7, 8				      &lt;
	ret						      &lt;
	.cfi_endproc					      &lt;
.LFE1543:						      &lt;
	.section	.gcc_except_table,&quot;a&quot;,@progbits	      &lt;
.LLSDA1543:						      &lt;
	.byte	0xff					      &lt;
	.byte	0xff					      &lt;
	.byte	0x1					      &lt;
	.uleb128 .LLSDACSE1543-.LLSDACSB1543		      &lt;
.LLSDACSB1543:						      &lt;
	.uleb128 .LEHB0-.LFB1543			      &lt;
	.uleb128 .LEHE0-.LEHB0				      &lt;
	.uleb128 .L23-.LFB1543				      &lt;
	.uleb128 0					      &lt;
	.uleb128 .LEHB1-.LFB1543			      &lt;
	.uleb128 .LEHE1-.LEHB1				      &lt;
	.uleb128 .L24-.LFB1543				      &lt;
	.uleb128 0					      &lt;
	.uleb128 .LEHB2-.LFB1543			      &lt;
	.uleb128 .LEHE2-.LEHB2				      &lt;
	.uleb128 0					      &lt;
	.uleb128 0					      &lt;
.LLSDACSE1543:						      &lt;
	.text						      &lt;
	.size	main, .-main				      &lt;
	.align 2					      &lt;
	.type	_ZN14bound_functionIvIEEC2IZ4mainEUlvE_EET_,  &lt;
_ZN14bound_functionIvIEEC2IZ4mainEUlvE_EET_:		      &lt;
.LFB1607:						      &lt;
	.cfi_startproc					      &lt;
	pushq	%rbp					      &lt;
	.cfi_def_cfa_offset 16				      &lt;
	.cfi_offset 6, -16				      &lt;
	movq	%rsp, %rbp				      &lt;
	.cfi_def_cfa_register 6				      &lt;
	subq	$16, %rsp				      &lt;
	movq	%rdi, -8(%rbp)				      &lt;
	movq	%rsi, -16(%rbp)				      &lt;
	movq	-8(%rbp), %rax				      &lt;
	movq	-16(%rbp), %rdx				      &lt;
	movq	%rdx, %rsi				      &lt;
	movq	%rax, %rdi				      &lt;
	call	_ZNSt8functionIFvvEEC1IZ4mainEUlvE_vEET_      &lt;
	leave						      &lt;
	.cfi_def_cfa 7, 8				      &lt;
	ret						      &lt;
	.cfi_endproc					      &lt;
.LFE1607:						      &lt;
	.size	_ZN14bound_functionIvIEEC2IZ4mainEUlvE_EET_,  &lt;
	.set	_ZN14bound_functionIvIEEC1IZ4mainEUlvE_EET_,_ &lt;
	.section	.text._ZN14bound_functionIvIEEcvPFvvE &lt;
	.align 2					      &lt;
	.weak	_ZN14bound_functionIvIEEcvPFvvEEv	      &lt;
	.type	_ZN14bound_functionIvIEEcvPFvvEEv, @function  &lt;
_ZN14bound_functionIvIEEcvPFvvEEv:			      &lt;
.LFB1609:						      &lt;
	.cfi_startproc					      &lt;
	pushq	%rbp					      &lt;
	.cfi_def_cfa_offset 16				      &lt;
	.cfi_offset 6, -16				      &lt;
	movq	%rsp, %rbp				      &lt;
	.cfi_def_cfa_register 6				      &lt;
	pushq	%rbx					      &lt;
	subq	$88, %rsp				      &lt;
	.cfi_offset 3, -24				      &lt;
	movq	%rdi, -88(%rbp)				      &lt;
	movq	%fs:40, %rax				      &lt;
	movq	%rax, -24(%rbp)				      &lt;
	xorl	%eax, %eax				      &lt;
	movb	$73, -48(%rbp)				      &lt;
	movb	$-65, -47(%rbp)				      &lt;
	movb	$0, -46(%rbp)				      &lt;
	movb	$0, -45(%rbp)				      &lt;
	movb	$0, -44(%rbp)				      &lt;
	movb	$0, -43(%rbp)				      &lt;
	movb	$0, -42(%rbp)				      &lt;
	movb	$0, -41(%rbp)				      &lt;
	movb	$0, -40(%rbp)				      &lt;
	movb	$0, -39(%rbp)				      &lt;
	movb	$73, -38(%rbp)				      &lt;
	movb	$-66, -37(%rbp)				      &lt;
	movb	$0, -36(%rbp)				      &lt;
	movb	$0, -35(%rbp)				      &lt;
	movb	$0, -34(%rbp)				      &lt;
	movb	$0, -33(%rbp)				      &lt;
	movb	$0, -32(%rbp)				      &lt;
	movb	$0, -31(%rbp)				      &lt;
	movb	$0, -30(%rbp)				      &lt;
	movb	$0, -29(%rbp)				      &lt;
	movb	$-1, -28(%rbp)				      &lt;
	movb	$-26, -27(%rbp)				      &lt;
	movl	$0, %r9d				      &lt;
	movl	$-1, %r8d						movl	$-1, %r8d
	movl	$34, %ecx						movl	$34, %ecx
	movl	$7, %edx				      &lt;
	movl	$22, %esi						movl	$22, %esi
	movl	$0, %edi				      |		xorl	%edi, %edi
							      &gt;		movb	$73, 16(%rsp)
							      &gt;		movb	$-65, 17(%rsp)
							      &gt;		movb	$0, 18(%rsp)
							      &gt;		movb	$0, 19(%rsp)
							      &gt;		movb	$0, 20(%rsp)
							      &gt;		movb	$0, 21(%rsp)
							      &gt;		movb	$0, 22(%rsp)
							      &gt;		movb	$0, 23(%rsp)
							      &gt;		movb	$0, 24(%rsp)
							      &gt;		movb	$0, 25(%rsp)
							      &gt;		movb	$73, 26(%rsp)
							      &gt;		movb	$-66, 27(%rsp)
							      &gt;		movb	$0, 28(%rsp)
							      &gt;		movb	$0, 29(%rsp)
							      &gt;		movb	$0, 30(%rsp)
							      &gt;		movb	$0, 31(%rsp)
							      &gt;		movb	$0, 32(%rsp)
							      &gt;		movb	$0, 33(%rsp)
							      &gt;		movb	$0, 34(%rsp)
							      &gt;		movb	$0, 35(%rsp)
							      &gt;		movb	$-1, 36(%rsp)
							      &gt;		movb	$-26, 37(%rsp)
	call	mmap							call	mmap
	movq	%rax, -64(%rbp)				      |		movq	16(%rsp), %rdx
	movq	-64(%rbp), %rax				      &lt;
	movq	-48(%rbp), %rdx				      &lt;
	movq	%rdx, (%rax)						movq	%rdx, (%rax)
	movq	-40(%rbp), %rdx				      |		movq	24(%rsp), %rdx
	movq	%rdx, 8(%rax)						movq	%rdx, 8(%rax)
	movl	-32(%rbp), %edx				      |		movl	32(%rsp), %edx
							      &gt;		movq	%rbp, 2(%rax)
	movl	%edx, 16(%rax)						movl	%edx, 16(%rax)
	movzwl	-28(%rbp), %edx				      |		movzwl	36(%rsp), %edx
	movw	%dx, 20(%rax)						movw	%dx, 20(%rax)
	movq	-88(%rbp), %rax				      |		movq	_ZN14bound_functionIvIEE4callEv(%rip), %rdx
	movq	%rax, -72(%rbp)				      |		movq	%rdx, 12(%rax)
	movq	-64(%rbp), %rax				      |	.LEHB1:
	leaq	2(%rax), %rdx				      |		call	*%rax
	movq	-72(%rbp), %rax				      |	.LEHE1:
	movq	%rax, (%rdx)				      |		subl	$1, %ebx
	movq	-64(%rbp), %rax				      |		jne	.L21
	addq	$12, %rax				      |		movq	64(%rsp), %rax
	movl	$8, %edx				      |		testq	%rax, %rax
	movl	$_ZN14bound_functionIvIEE4callEv, %esi	      |		je	.L25
	movq	%rax, %rdi				      |		movl	$3, %edx
	call	memcpy					      |		movq	%rbp, %rsi
	movq	-64(%rbp), %rax				      |		movq	%rbp, %rdi
	movq	%rax, -56(%rbp)				      |		call	*%rax
	movq	-56(%rbp), %rax				      |	.L25:
	movq	-24(%rbp), %rbx				      |		xorl	%eax, %eax
	xorq	%fs:40, %rbx				      |		movq	88(%rsp), %rcx
	je	.L29					      |		xorq	%fs:40, %rcx
	call	__stack_chk_fail			      |		jne	.L42
.L29:							      |		addq	$104, %rsp
	addq	$88, %rsp				      |		.cfi_remember_state
							      &gt;		.cfi_def_cfa_offset 24
	popq	%rbx							popq	%rbx
	popq	%rbp					      &lt;
	.cfi_def_cfa 7, 8				      &lt;
	ret						      &lt;
	.cfi_endproc					      &lt;
.LFE1609:						      &lt;
	.size	_ZN14bound_functionIvIEEcvPFvvEEv, .-_ZN14bou &lt;
	.weak	_ZN14bound_functionIvJEEcvPFvvEEv	      &lt;
	.set	_ZN14bound_functionIvJEEcvPFvvEEv,_ZN14bound_ &lt;
	.section	.text._ZNSt31_Maybe_unary_or_binary_f &lt;
	.align 2					      &lt;
	.weak	_ZNSt31_Maybe_unary_or_binary_functionIvIEEC2 &lt;
	.type	_ZNSt31_Maybe_unary_or_binary_functionIvIEEC2 &lt;
_ZNSt31_Maybe_unary_or_binary_functionIvIEEC2Ev:	      &lt;
.LFB1655:						      &lt;
	.cfi_startproc					      &lt;
	pushq	%rbp					      &lt;
	.cfi_def_cfa_offset 16				      &lt;
	.cfi_offset 6, -16				      &lt;
	movq	%rsp, %rbp				      &lt;
	.cfi_def_cfa_register 6				      &lt;
	movq	%rdi, -8(%rbp)				      &lt;
	popq	%rbp					      &lt;
	.cfi_def_cfa 7, 8				      &lt;
	ret						      &lt;
	.cfi_endproc					      &lt;
.LFE1655:						      &lt;
	.size	_ZNSt31_Maybe_unary_or_binary_functionIvIEEC2 &lt;
	.weak	_ZNSt31_Maybe_unary_or_binary_functionIvJEEC2 &lt;
	.set	_ZNSt31_Maybe_unary_or_binary_functionIvJEEC2 &lt;
	.weak	_ZNSt31_Maybe_unary_or_binary_functionIvIEEC1 &lt;
	.set	_ZNSt31_Maybe_unary_or_binary_functionIvIEEC1 &lt;
	.weak	_ZNSt31_Maybe_unary_or_binary_functionIvJEEC1 &lt;
	.set	_ZNSt31_Maybe_unary_or_binary_functionIvJEEC1 &lt;
	.text						      &lt;
	.type	_ZSt4moveIRZ4mainEUlvE_EONSt16remove_referenc &lt;
_ZSt4moveIRZ4mainEUlvE_EONSt16remove_referenceIT_E4typeEOS3_: &lt;
.LFB1657:						      &lt;
	.cfi_startproc					      &lt;
	pushq	%rbp					      &lt;
	.cfi_def_cfa_offset 16						.cfi_def_cfa_offset 16
	.cfi_offset 6, -16				      &lt;
	movq	%rsp, %rbp				      &lt;
	.cfi_def_cfa_register 6				      &lt;
	movq	%rdi, -8(%rbp)				      &lt;
	movq	-8(%rbp), %rax				      &lt;
	popq	%rbp							popq	%rbp
	.cfi_def_cfa 7, 8				      |		.cfi_def_cfa_offset 8
	ret								ret
	.cfi_endproc					      |	.L42:
.LFE1657:						      |		.cfi_restore_state
	.size	_ZSt4moveIRZ4mainEUlvE_EONSt16remove_referenc |		call	__stack_chk_fail
	.align 2					      |	.L29:
	.type	_ZNSt8functionIFvvEEC2IZ4mainEUlvE_vEET_, @fu |		movq	64(%rsp), %rcx
_ZNSt8functionIFvvEEC2IZ4mainEUlvE_vEET_:		      &lt;
.LFB1658:						      &lt;
	.cfi_startproc					      &lt;
	.cfi_personality 0x3,__gxx_personality_v0	      &lt;
	.cfi_lsda 0x3,.LLSDA1658			      &lt;
	pushq	%rbp					      &lt;
	.cfi_def_cfa_offset 16				      &lt;
	.cfi_offset 6, -16				      &lt;
	movq	%rsp, %rbp				      &lt;
	.cfi_def_cfa_register 6				      &lt;
	pushq	%rbx					      &lt;
	subq	$24, %rsp				      &lt;
	.cfi_offset 3, -24				      &lt;
	movq	%rdi, -24(%rbp)				      &lt;
	movq	%rsi, -32(%rbp)				      &lt;
	movq	-24(%rbp), %rax				      &lt;
	movq	%rax, %rdi				      &lt;
	call	_ZNSt31_Maybe_unary_or_binary_functionIvIEEC2 &lt;
	movq	-24(%rbp), %rax				      &lt;
	movq	%rax, %rdi				      &lt;
	call	_ZNSt14_Function_baseC2Ev		      &lt;
	leaq	-32(%rbp), %rax				      &lt;
	movq	%rax, %rdi				      &lt;
	call	_ZNSt14_Function_base13_Base_managerIZ4mainEU &lt;
	testb	%al, %al				      &lt;
	je	.L37					      &lt;
	leaq	-32(%rbp), %rax				      &lt;
	movq	%rax, %rdi				      &lt;
	call	_ZSt4moveIRZ4mainEUlvE_EONSt16remove_referenc &lt;
	movq	%rax, %rdx				      &lt;
	movq	-24(%rbp), %rax				      &lt;
	movq	%rdx, %rsi				      &lt;
	movq	%rax, %rdi				      &lt;
.LEHB3:							      &lt;
	call	_ZNSt14_Function_base13_Base_managerIZ4mainEU &lt;
.LEHE3:							      &lt;
	movq	-24(%rbp), %rax				      &lt;
	movq	$_ZNSt17_Function_handlerIFvvEZ4mainEUlvE_E9_ &lt;
	movq	-24(%rbp), %rax				      &lt;
	movq	$_ZNSt14_Function_base13_Base_managerIZ4mainE &lt;
	jmp	.L37					      &lt;
.L36:							      &lt;
	movq	%rax, %rbx						movq	%rax, %rbx
	movq	-24(%rbp), %rax				      |		testq	%rcx, %rcx
	movq	%rax, %rdi				      |		je	.L27
	call	_ZNSt14_Function_baseD2Ev		      |		movl	$3, %edx
	movq	%rbx, %rax				      |		movq	%rbp, %rsi
	movq	%rax, %rdi				      |		movq	%rbp, %rdi
.LEHB4:							      |		call	*%rcx
	call	_Unwind_Resume				      |	.L27:
.LEHE4:							      |		movq	%rbx, %rdi
.L37:							      |	.LEHB2:
	addq	$24, %rsp				      &lt;
	popq	%rbx					      &lt;
	popq	%rbp					      &lt;
	.cfi_def_cfa 7, 8				      &lt;
	ret						      &lt;
	.cfi_endproc					      &lt;
.LFE1658:						      &lt;
	.section	.gcc_except_table		      &lt;
.LLSDA1658:						      &lt;
	.byte	0xff					      &lt;
	.byte	0xff					      &lt;
	.byte	0x1					      &lt;
	.uleb128 .LLSDACSE1658-.LLSDACSB1658		      &lt;
.LLSDACSB1658:						      &lt;
	.uleb128 .LEHB3-.LFB1658			      &lt;
	.uleb128 .LEHE3-.LEHB3				      &lt;
	.uleb128 .L36-.LFB1658				      &lt;
	.uleb128 0					      &lt;
	.uleb128 .LEHB4-.LFB1658			      &lt;
	.uleb128 .LEHE4-.LEHB4				      &lt;
	.uleb128 0					      &lt;
	.uleb128 0					      &lt;
.LLSDACSE1658:						      &lt;
	.text						      &lt;
	.size	_ZNSt8functionIFvvEEC2IZ4mainEUlvE_vEET_, .-_ &lt;
	.set	_ZNSt8functionIFvvEEC1IZ4mainEUlvE_vEET_,_ZNS &lt;
	.section	.text._ZN14bound_functionIvIEE4callEv &lt;
	.weak	_ZN14bound_functionIvIEE4callEv		      &lt;
	.type	_ZN14bound_functionIvIEE4callEv, @function    &lt;
_ZN14bound_functionIvIEE4callEv:			      &lt;
.LFB1660:						      &lt;
	.cfi_startproc					      &lt;
	pushq	%rbp					      &lt;
	.cfi_def_cfa_offset 16				      &lt;
	.cfi_offset 6, -16				      &lt;
	movq	%rsp, %rbp				      &lt;
	.cfi_def_cfa_register 6				      &lt;
	subq	$16, %rsp				      &lt;
	movq	$0, -8(%rbp)				      &lt;
#APP							      &lt;
# 41 &quot;main.cpp&quot; 1					      &lt;
	movq %r15, %rax					      &lt;
# 0 &quot;&quot; 2						      &lt;
#NO_APP							      &lt;
	movq	%rax, -8(%rbp)				      &lt;
	movq	-8(%rbp), %rax				      &lt;
	movq	%rax, %rdi				      &lt;
	call	_ZNKSt8functionIFvvEEclEv		      &lt;
	leave						      &lt;
	.cfi_def_cfa 7, 8				      &lt;
	ret						      &lt;
	.cfi_endproc					      &lt;
.LFE1660:						      &lt;
	.size	_ZN14bound_functionIvIEE4callEv, .-_ZN14bound &lt;
	.weak	_ZN14bound_functionIvJEE4callEv		      &lt;
	.set	_ZN14bound_functionIvJEE4callEv,_ZN14bound_fu &lt;
	.text						      &lt;
	.type	_ZNSt14_Function_base13_Base_managerIZ4mainEU &lt;
_ZNSt14_Function_base13_Base_managerIZ4mainEUlvE_E21_M_not_em &lt;
.LFB1690:						      &lt;
	.cfi_startproc					      &lt;
	pushq	%rbp					      &lt;
	.cfi_def_cfa_offset 16				      &lt;
	.cfi_offset 6, -16				      &lt;
	movq	%rsp, %rbp				      &lt;
	.cfi_def_cfa_register 6				      &lt;
	movq	%rdi, -8(%rbp)				      &lt;
	movl	$1, %eax				      &lt;
	popq	%rbp					      &lt;
	.cfi_def_cfa 7, 8				      &lt;
	ret						      &lt;
	.cfi_endproc					      &lt;
.LFE1690:						      &lt;
	.size	_ZNSt14_Function_base13_Base_managerIZ4mainEU &lt;
	.type	_ZNSt14_Function_base13_Base_managerIZ4mainEU &lt;
_ZNSt14_Function_base13_Base_managerIZ4mainEUlvE_E15_M_init_f &lt;
.LFB1691:						      &lt;
	.cfi_startproc					      &lt;
	.cfi_personality 0x3,__gxx_personality_v0	      &lt;
	.cfi_lsda 0x3,.LLSDA1691			      &lt;
	pushq	%rbp					      &lt;
	.cfi_def_cfa_offset 16				      &lt;
	.cfi_offset 6, -16				      &lt;
	movq	%rsp, %rbp				      &lt;
	.cfi_def_cfa_register 6				      &lt;
	pushq	%rbx					      &lt;
	subq	$56, %rsp				      &lt;
	.cfi_offset 3, -24				      &lt;
	movq	%rdi, -40(%rbp)				      &lt;
	movq	%rsi, -48(%rbp)				      &lt;
	movq	-48(%rbp), %rax				      &lt;
	movq	%rax, %rdi				      &lt;
	call	_ZSt4moveIRZ4mainEUlvE_EONSt16remove_referenc &lt;
	movq	%rax, %rdx				      &lt;
	movq	-40(%rbp), %rax				      &lt;
	movb	%bl, (%rsp)				      &lt;
	movq	%rdx, %rsi				      &lt;
	movq	%rax, %rdi				      &lt;
.LEHB5:							      &lt;
	call	_ZNSt14_Function_base13_Base_managerIZ4mainEU &lt;
.LEHE5:							      &lt;
	jmp	.L45					      &lt;
.L44:							      &lt;
	movq	%rax, %rdi				      &lt;
.LEHB6:							      &lt;
	call	_Unwind_Resume						call	_Unwind_Resume
.LEHE6:							      |	.LEHE2:
.L45:							      |	.L30:
	addq	$56, %rsp				      |		movq	64(%rsp), %rcx
	popq	%rbx					      &lt;
	popq	%rbp					      &lt;
	.cfi_def_cfa 7, 8				      &lt;
	ret						      &lt;
	.cfi_endproc					      &lt;
.LFE1691:						      &lt;
	.section	.gcc_except_table		      &lt;
.LLSDA1691:						      &lt;
	.byte	0xff					      &lt;
	.byte	0xff					      &lt;
	.byte	0x1					      &lt;
	.uleb128 .LLSDACSE1691-.LLSDACSB1691		      &lt;
.LLSDACSB1691:						      &lt;
	.uleb128 .LEHB5-.LFB1691			      &lt;
	.uleb128 .LEHE5-.LEHB5				      &lt;
	.uleb128 .L44-.LFB1691				      &lt;
	.uleb128 0					      &lt;
	.uleb128 .LEHB6-.LFB1691			      &lt;
	.uleb128 .LEHE6-.LEHB6				      &lt;
	.uleb128 0					      &lt;
	.uleb128 0					      &lt;
.LLSDACSE1691:						      &lt;
	.text						      &lt;
	.size	_ZNSt14_Function_base13_Base_managerIZ4mainEU &lt;
	.type	_ZNSt17_Function_handlerIFvvEZ4mainEUlvE_E9_M &lt;
_ZNSt17_Function_handlerIFvvEZ4mainEUlvE_E9_M_invokeERKSt9_An &lt;
.LFB1692:						      &lt;
	.cfi_startproc					      &lt;
	pushq	%rbp					      &lt;
	.cfi_def_cfa_offset 16				      &lt;
	.cfi_offset 6, -16				      &lt;
	movq	%rsp, %rbp				      &lt;
	.cfi_def_cfa_register 6				      &lt;
	subq	$16, %rsp				      &lt;
	movq	%rdi, -8(%rbp)				      &lt;
	movq	-8(%rbp), %rax				      &lt;
	movq	%rax, %rdi				      &lt;
	call	_ZNSt14_Function_base13_Base_managerIZ4mainEU &lt;
	movq	%rax, %rdi				      &lt;
	call	_ZZ4mainENKUlvE_clEv			      &lt;
	leave						      &lt;
	.cfi_def_cfa 7, 8				      &lt;
	ret						      &lt;
	.cfi_endproc					      &lt;
.LFE1692:						      &lt;
	.size	_ZNSt17_Function_handlerIFvvEZ4mainEUlvE_E9_M &lt;
	.type	_ZNSt14_Function_base13_Base_managerIZ4mainEU &lt;
_ZNSt14_Function_base13_Base_managerIZ4mainEUlvE_E10_M_manage &lt;
.LFB1693:						      &lt;
	.cfi_startproc					      &lt;
	.cfi_personality 0x3,__gxx_personality_v0	      &lt;
	.cfi_lsda 0x3,.LLSDA1693			      &lt;
	pushq	%rbp					      &lt;
	.cfi_def_cfa_offset 16				      &lt;
	.cfi_offset 6, -16				      &lt;
	movq	%rsp, %rbp				      &lt;
	.cfi_def_cfa_register 6				      &lt;
	pushq	%rbx					      &lt;
	subq	$56, %rsp				      &lt;
	.cfi_offset 3, -24				      &lt;
	movq	%rdi, -40(%rbp)				      &lt;
	movq	%rsi, -48(%rbp)				      &lt;
	movl	%edx, -52(%rbp)				      &lt;
	movl	-52(%rbp), %eax				      &lt;
	cmpl	$1, %eax				      &lt;
	je	.L49					      &lt;
	cmpl	$1, %eax				      &lt;
	jg	.L50					      &lt;
	testl	%eax, %eax				      &lt;
	je	.L51					      &lt;
	jmp	.L48					      &lt;
.L50:							      &lt;
	cmpl	$2, %eax				      &lt;
	je	.L52					      &lt;
	cmpl	$3, %eax				      &lt;
	je	.L53					      &lt;
	jmp	.L48					      &lt;
.L51:							      &lt;
	movq	-40(%rbp), %rax				      &lt;
	movq	%rax, %rdi				      &lt;
	call	_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_ &lt;
	movq	$_ZTIZ4mainEUlvE_, (%rax)		      &lt;
	jmp	.L48					      &lt;
.L49:							      &lt;
	movq	-40(%rbp), %rax				      &lt;
	movq	%rax, %rdi				      &lt;
	call	_ZNSt9_Any_data9_M_accessIPZ4mainEUlvE_EERT_v &lt;
	movq	%rax, %rbx						movq	%rax, %rbx
	movq	-48(%rbp), %rax				      |		testq	%rcx, %rcx
	movq	%rax, %rdi				      |		je	.L27
.LEHB7:							      |		leaq	48(%rsp), %rsi
	call	_ZNSt14_Function_base13_Base_managerIZ4mainEU |		movl	$3, %edx
.LEHE7:							      |		movq	%rsi, %rdi
	movq	%rax, (%rbx)				      |		call	*%rcx
	jmp	.L48					      |		jmp	.L27
.L52:							      &lt;
	movq	-48(%rbp), %rdx				      &lt;
	movq	-40(%rbp), %rax				      &lt;
	movb	%r8b, (%rsp)				      &lt;
	movq	%rdx, %rsi				      &lt;
	movq	%rax, %rdi				      &lt;
.LEHB8:							      &lt;
	call	_ZNSt14_Function_base13_Base_managerIZ4mainEU &lt;
.LEHE8:							      &lt;
	jmp	.L48					      &lt;
.L53:							      &lt;
	movq	-40(%rbp), %rax				      &lt;
	movb	%cl, (%rsp)				      &lt;
	movq	%rax, %rdi				      &lt;
	call	_ZNSt14_Function_base13_Base_managerIZ4mainEU &lt;
	nop						      &lt;
.L48:							      &lt;
	movl	$0, %eax				      &lt;
	jmp	.L57					      &lt;
.L56:							      &lt;
	movq	%rax, %rdi				      &lt;
.LEHB9:							      &lt;
	call	_Unwind_Resume				      &lt;
.LEHE9:							      &lt;
.L57:							      &lt;
	addq	$56, %rsp				      &lt;
	popq	%rbx					      &lt;
	popq	%rbp					      &lt;
	.cfi_def_cfa 7, 8				      &lt;
	ret						      &lt;
	.cfi_endproc							.cfi_endproc
.LFE1693:						      |	.LFE1639:
	.section	.gcc_except_table		      |		.globl	__gxx_personality_v0
.LLSDA1693:						      |		.section	.gcc_except_table,&quot;a&quot;,@progbits
							      &gt;	.LLSDA1639:
	.byte	0xff							.byte	0xff
	.byte	0xff							.byte	0xff
	.byte	0x1							.byte	0x1
	.uleb128 .LLSDACSE1693-.LLSDACSB1693		      |		.uleb128 .LLSDACSE1639-.LLSDACSB1639
.LLSDACSB1693:						      |	.LLSDACSB1639:
	.uleb128 .LEHB7-.LFB1693			      |		.uleb128 .LEHB0-.LFB1639
	.uleb128 .LEHE7-.LEHB7				      |		.uleb128 .LEHE0-.LEHB0
	.uleb128 0					      |		.uleb128 .L30-.LFB1639
	.uleb128 0							.uleb128 0
	.uleb128 .LEHB8-.LFB1693			      |		.uleb128 .LEHB1-.LFB1639
	.uleb128 .LEHE8-.LEHB8				      |		.uleb128 .LEHE1-.LEHB1
	.uleb128 .L56-.LFB1693				      |		.uleb128 .L29-.LFB1639
	.uleb128 0							.uleb128 0
	.uleb128 .LEHB9-.LFB1693			      |		.uleb128 .LEHB2-.LFB1639
	.uleb128 .LEHE9-.LEHB9				      |		.uleb128 .LEHE2-.LEHB2
	.uleb128 0							.uleb128 0
	.uleb128 0							.uleb128 0
.LLSDACSE1693:						      |	.LLSDACSE1639:
	.text						      |		.section	.text.startup
	.size	_ZNSt14_Function_base13_Base_managerIZ4mainEU |		.size	main, .-main
	.section	.text._ZNKSt8functionIFvvEEclEv,&quot;axG&quot; |		.p2align 4,,15
	.align 2					      |		.type	_GLOBAL__sub_I__Z9call_backPFvvE, @function
	.weak	_ZNKSt8functionIFvvEEclEv		      |	_GLOBAL__sub_I__Z9call_backPFvvE:
	.type	_ZNKSt8functionIFvvEEclEv, @function	      |	.LFB1823:
_ZNKSt8functionIFvvEEclEv:				      &lt;
.LFB1694:						      &lt;
	.cfi_startproc					      &lt;
	pushq	%rbp					      &lt;
	.cfi_def_cfa_offset 16				      &lt;
	.cfi_offset 6, -16				      &lt;
	movq	%rsp, %rbp				      &lt;
	.cfi_def_cfa_register 6				      &lt;
	subq	$16, %rsp				      &lt;
	movq	%rdi, -8(%rbp)				      &lt;
	movq	-8(%rbp), %rax				      &lt;
	movq	%rax, %rdi				      &lt;
	call	_ZNKSt14_Function_base8_M_emptyEv	      &lt;
	testb	%al, %al				      &lt;
	je	.L59					      &lt;
	call	_ZSt25__throw_bad_function_callv	      &lt;
.L59:							      &lt;
	movq	-8(%rbp), %rax				      &lt;
	movq	24(%rax), %rax				      &lt;
	movq	-8(%rbp), %rdx				      &lt;
	movq	%rdx, %rdi				      &lt;
	call	*%rax					      &lt;
	leave						      &lt;
	.cfi_def_cfa 7, 8				      &lt;
	ret						      &lt;
	.cfi_endproc					      &lt;
.LFE1694:						      &lt;
	.size	_ZNKSt8functionIFvvEEclEv, .-_ZNKSt8functionI &lt;
	.text						      &lt;
	.type	_ZNSt14_Function_base13_Base_managerIZ4mainEU &lt;
_ZNSt14_Function_base13_Base_managerIZ4mainEUlvE_E15_M_init_f &lt;
.LFB1697:						      &lt;
	.cfi_startproc					      &lt;
	pushq	%rbp					      &lt;
	.cfi_def_cfa_offset 16				      &lt;
	.cfi_offset 6, -16				      &lt;
	movq	%rsp, %rbp				      &lt;
	.cfi_def_cfa_register 6				      &lt;
	pushq	%r12					      &lt;
	pushq	%rbx					      &lt;
	subq	$16, %rsp				      &lt;
	.cfi_offset 12, -24				      &lt;
	.cfi_offset 3, -32				      &lt;
	movq	%rdi, -24(%rbp)				      &lt;
	movq	%rsi, -32(%rbp)				      &lt;
	movq	-32(%rbp), %rax				      &lt;
	movq	%rax, %rdi				      &lt;
	call	_ZSt4moveIRZ4mainEUlvE_EONSt16remove_referenc &lt;
	movq	%rax, %r12				      &lt;
	movl	$8, %edi				      &lt;
	call	_Znwm					      &lt;
	movq	%rax, %rbx				      &lt;
	movq	(%r12), %rax				      &lt;
	movq	%rax, (%rbx)				      &lt;
	movq	-24(%rbp), %rax				      &lt;
	movq	%rax, %rdi				      &lt;
	call	_ZNSt9_Any_data9_M_accessIPZ4mainEUlvE_EERT_v &lt;
	movq	%rbx, (%rax)				      &lt;
	addq	$16, %rsp				      &lt;
	popq	%rbx					      &lt;
	popq	%r12					      &lt;
	popq	%rbp					      &lt;
	.cfi_def_cfa 7, 8				      &lt;
	ret						      &lt;
	.cfi_endproc					      &lt;
.LFE1697:						      &lt;
	.size	_ZNSt14_Function_base13_Base_managerIZ4mainEU &lt;
	.type	_ZNSt14_Function_base13_Base_managerIZ4mainEU &lt;
_ZNSt14_Function_base13_Base_managerIZ4mainEUlvE_E14_M_get_po &lt;
.LFB1698:						      &lt;
	.cfi_startproc					      &lt;
	pushq	%rbp					      &lt;
	.cfi_def_cfa_offset 16				      &lt;
	.cfi_offset 6, -16				      &lt;
	movq	%rsp, %rbp				      &lt;
	.cfi_def_cfa_register 6				      &lt;
	subq	$32, %rsp				      &lt;
	movq	%rdi, -24(%rbp)				      &lt;
	movq	-24(%rbp), %rax				      &lt;
	movq	%rax, %rdi				      &lt;
	call	_ZNKSt9_Any_data9_M_accessIPZ4mainEUlvE_EERKT &lt;
	movq	(%rax), %rax				      &lt;
	movq	%rax, -8(%rbp)				      &lt;
	movq	-8(%rbp), %rax				      &lt;
	leave						      &lt;
	.cfi_def_cfa 7, 8				      &lt;
	ret						      &lt;
	.cfi_endproc					      &lt;
.LFE1698:						      &lt;
	.size	_ZNSt14_Function_base13_Base_managerIZ4mainEU &lt;
	.section	.text._ZNSt9_Any_data9_M_accessIPKSt9 &lt;
	.align 2					      &lt;
	.weak	_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_ &lt;
	.type	_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_ &lt;
_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v:		      &lt;
.LFB1699:						      &lt;
	.cfi_startproc					      &lt;
	pushq	%rbp					      &lt;
	.cfi_def_cfa_offset 16				      &lt;
	.cfi_offset 6, -16				      &lt;
	movq	%rsp, %rbp				      &lt;
	.cfi_def_cfa_register 6				      &lt;
	subq	$16, %rsp				      &lt;
	movq	%rdi, -8(%rbp)				      &lt;
	movq	-8(%rbp), %rax				      &lt;
	movq	%rax, %rdi				      &lt;
	call	_ZNSt9_Any_data9_M_accessEv		      &lt;
	leave						      &lt;
	.cfi_def_cfa 7, 8				      &lt;
	ret						      &lt;
	.cfi_endproc					      &lt;
.LFE1699:						      &lt;
	.size	_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_ &lt;
	.text						      &lt;
	.align 2					      &lt;
	.type	_ZNSt9_Any_data9_M_accessIPZ4mainEUlvE_EERT_v &lt;
_ZNSt9_Any_data9_M_accessIPZ4mainEUlvE_EERT_v:		      &lt;
.LFB1700:						      &lt;
	.cfi_startproc					      &lt;
	pushq	%rbp					      &lt;
	.cfi_def_cfa_offset 16				      &lt;
	.cfi_offset 6, -16				      &lt;
	movq	%rsp, %rbp				      &lt;
	.cfi_def_cfa_register 6				      &lt;
	subq	$16, %rsp				      &lt;
	movq	%rdi, -8(%rbp)				      &lt;
	movq	-8(%rbp), %rax				      &lt;
	movq	%rax, %rdi				      &lt;
	call	_ZNSt9_Any_data9_M_accessEv		      &lt;
	leave						      &lt;
	.cfi_def_cfa 7, 8				      &lt;
	ret						      &lt;
	.cfi_endproc					      &lt;
.LFE1700:						      &lt;
	.size	_ZNSt9_Any_data9_M_accessIPZ4mainEUlvE_EERT_v &lt;
	.type	_ZNSt14_Function_base13_Base_managerIZ4mainEU &lt;
_ZNSt14_Function_base13_Base_managerIZ4mainEUlvE_E8_M_cloneER &lt;
.LFB1701:						      &lt;
	.cfi_startproc					      &lt;
	pushq	%rbp					      &lt;
	.cfi_def_cfa_offset 16				      &lt;
	.cfi_offset 6, -16				      &lt;
	movq	%rsp, %rbp				      &lt;
	.cfi_def_cfa_register 6				      &lt;
	pushq	%r12					      &lt;
	pushq	%rbx					      &lt;
	subq	$16, %rsp				      &lt;
	.cfi_offset 12, -24				      &lt;
	.cfi_offset 3, -32				      &lt;
	movq	%rdi, -24(%rbp)				      &lt;
	movq	%rsi, -32(%rbp)				      &lt;
	movq	-32(%rbp), %rax				      &lt;
	movq	%rax, %rdi				      &lt;
	call	_ZNKSt9_Any_data9_M_accessIPZ4mainEUlvE_EERKT &lt;
	movq	(%rax), %r12				      &lt;
	movl	$8, %edi				      &lt;
	call	_Znwm					      &lt;
	movq	%rax, %rbx				      &lt;
	movq	(%r12), %rax				      &lt;
	movq	%rax, (%rbx)				      &lt;
	movq	-24(%rbp), %rax				      &lt;
	movq	%rax, %rdi				      &lt;
	call	_ZNSt9_Any_data9_M_accessIPZ4mainEUlvE_EERT_v &lt;
	movq	%rbx, (%rax)				      &lt;
	addq	$16, %rsp				      &lt;
	popq	%rbx					      &lt;
	popq	%r12					      &lt;
	popq	%rbp					      &lt;
	.cfi_def_cfa 7, 8				      &lt;
	ret						      &lt;
	.cfi_endproc					      &lt;
.LFE1701:						      &lt;
	.size	_ZNSt14_Function_base13_Base_managerIZ4mainEU &lt;
	.type	_ZNSt14_Function_base13_Base_managerIZ4mainEU &lt;
_ZNSt14_Function_base13_Base_managerIZ4mainEUlvE_E10_M_destro &lt;
.LFB1702:						      &lt;
	.cfi_startproc					      &lt;
	pushq	%rbp					      &lt;
	.cfi_def_cfa_offset 16				      &lt;
	.cfi_offset 6, -16				      &lt;
	movq	%rsp, %rbp				      &lt;
	.cfi_def_cfa_register 6				      &lt;
	subq	$16, %rsp				      &lt;
	movq	%rdi, -8(%rbp)				      &lt;
	movq	-8(%rbp), %rax				      &lt;
	movq	%rax, %rdi				      &lt;
	call	_ZNSt9_Any_data9_M_accessIPZ4mainEUlvE_EERT_v &lt;
	movq	(%rax), %rax				      &lt;
	movq	%rax, %rdi				      &lt;
	call	_ZdlPv					      &lt;
	leave						      &lt;
	.cfi_def_cfa 7, 8				      &lt;
	ret						      &lt;
	.cfi_endproc					      &lt;
.LFE1702:						      &lt;
	.size	_ZNSt14_Function_base13_Base_managerIZ4mainEU &lt;
	.align 2					      &lt;
	.type	_ZNKSt9_Any_data9_M_accessIPZ4mainEUlvE_EERKT &lt;
_ZNKSt9_Any_data9_M_accessIPZ4mainEUlvE_EERKT_v:	      &lt;
.LFB1707:						      &lt;
	.cfi_startproc					      &lt;
	pushq	%rbp					      &lt;
	.cfi_def_cfa_offset 16				      &lt;
	.cfi_offset 6, -16				      &lt;
	movq	%rsp, %rbp				      &lt;
	.cfi_def_cfa_register 6				      &lt;
	subq	$16, %rsp				      &lt;
	movq	%rdi, -8(%rbp)				      &lt;
	movq	-8(%rbp), %rax				      &lt;
	movq	%rax, %rdi				      &lt;
	call	_ZNKSt9_Any_data9_M_accessEv		      &lt;
	leave						      &lt;
	.cfi_def_cfa 7, 8				      &lt;
	ret						      &lt;
	.cfi_endproc					      &lt;
.LFE1707:						      &lt;
	.size	_ZNKSt9_Any_data9_M_accessIPZ4mainEUlvE_EERKT &lt;
	.type	_Z41__static_initialization_and_destruction_0 &lt;
_Z41__static_initialization_and_destruction_0ii:	      &lt;
.LFB1726:						      &lt;
	.cfi_startproc							.cfi_startproc
	pushq	%rbp					      |		subq	$8, %rsp
	.cfi_def_cfa_offset 16						.cfi_def_cfa_offset 16
	.cfi_offset 6, -16				      &lt;
	movq	%rsp, %rbp				      &lt;
	.cfi_def_cfa_register 6				      &lt;
	subq	$16, %rsp				      &lt;
	movl	%edi, -4(%rbp)				      &lt;
	movl	%esi, -8(%rbp)				      &lt;
	cmpl	$1, -4(%rbp)				      &lt;
	jne	.L72					      &lt;
	cmpl	$65535, -8(%rbp)			      &lt;
	jne	.L72					      &lt;
	movl	$_ZStL8__ioinit, %edi					movl	$_ZStL8__ioinit, %edi
	call	_ZNSt8ios_base4InitC1Ev					call	_ZNSt8ios_base4InitC1Ev
	movl	$__dso_handle, %edx					movl	$__dso_handle, %edx
	movl	$_ZStL8__ioinit, %esi					movl	$_ZStL8__ioinit, %esi
	movl	$_ZNSt8ios_base4InitD1Ev, %edi				movl	$_ZNSt8ios_base4InitD1Ev, %edi
	call	__cxa_atexit				      |		addq	$8, %rsp
.L72:							      |		.cfi_def_cfa_offset 8
	leave						      |		jmp	__cxa_atexit
	.cfi_def_cfa 7, 8				      &lt;
	ret						      &lt;
	.cfi_endproc							.cfi_endproc
.LFE1726:						      |	.LFE1823:
	.size	_Z41__static_initialization_and_destruction_0 |		.size	_GLOBAL__sub_I__Z9call_backPFvvE, .-_GLOBAL__
							      &gt;		.section	.init_array,&quot;aw&quot;
							      &gt;		.align 8
							      &gt;		.quad	_GLOBAL__sub_I__Z9call_backPFvvE
	.section	.rodata						.section	.rodata
							      &gt;		.type	_ZTSZ4mainEUlvE_, @object
							      &gt;		.size	_ZTSZ4mainEUlvE_, 14
							      &gt;	_ZTSZ4mainEUlvE_:
							      &gt;		.string	&quot;*Z4mainEUlvE_&quot;
	.align 16							.align 16
	.type	_ZTIZ4mainEUlvE_, @object				.type	_ZTIZ4mainEUlvE_, @object
	.size	_ZTIZ4mainEUlvE_, 16					.size	_ZTIZ4mainEUlvE_, 16
_ZTIZ4mainEUlvE_:						_ZTIZ4mainEUlvE_:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16		.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSZ4mainEUlvE_					.quad	_ZTSZ4mainEUlvE_
	.type	_ZTSZ4mainEUlvE_, @object		      |		.local	_ZStL8__ioinit
	.size	_ZTSZ4mainEUlvE_, 14			      |		.comm	_ZStL8__ioinit,1,1
_ZTSZ4mainEUlvE_:					      &lt;
	.string	&quot;*Z4mainEUlvE_&quot;				      &lt;
	.text						      &lt;
	.type	_GLOBAL__sub_I__Z9call_backPFvvE, @function   &lt;
_GLOBAL__sub_I__Z9call_backPFvvE:			      &lt;
.LFB1727:						      &lt;
	.cfi_startproc					      &lt;
	pushq	%rbp					      &lt;
	.cfi_def_cfa_offset 16				      &lt;
	.cfi_offset 6, -16				      &lt;
	movq	%rsp, %rbp				      &lt;
	.cfi_def_cfa_register 6				      &lt;
	movl	$65535, %esi				      &lt;
	movl	$1, %edi				      &lt;
	call	_Z41__static_initialization_and_destruction_0 &lt;
	popq	%rbp					      &lt;
	.cfi_def_cfa 7, 8				      &lt;
	ret						      &lt;
	.cfi_endproc					      &lt;
.LFE1727:						      &lt;
	.size	_GLOBAL__sub_I__Z9call_backPFvvE, .-_GLOBAL__ &lt;
	.section	.init_array,&quot;aw&quot;		      &lt;
	.align 8					      &lt;
	.quad	_GLOBAL__sub_I__Z9call_backPFvvE	      &lt;
	.hidden	__dso_handle						.hidden	__dso_handle
	.ident	&quot;GCC: (Ubuntu 4.8.1-2ubuntu1~12.04) 4.8.1&quot;		.ident	&quot;GCC: (Ubuntu 4.8.1-2ubuntu1~12.04) 4.8.1&quot;
	.section	.note.GNU-stack,&quot;&quot;,@progbits			.section	.note.GNU-stack,&quot;&quot;,@progbits
</pre></div>
</body>
</html>
