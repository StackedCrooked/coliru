In file included from /usr/local/include/boost/bind.hpp:22:0,
                 from main.cpp:4:
/usr/local/include/boost/bind/bind.hpp: In instantiation of 'void boost::_bi::list2<A1, A2>::operator()(boost::_bi::type<void>, F&, A&, int) [with F = void (*)(const boost::_bi::bind_t<void, void (*)(const BaseMessage&), boost::_bi::list1<boost::arg<1> > >&, const BaseMessage&); A = boost::_bi::list1<const BaseMessage&>; A1 = boost::_bi::bind_t<void, void (*)(const BaseMessage&), boost::_bi::list1<boost::arg<1> > >; A2 = boost::arg<1>]':
/usr/local/include/boost/bind/bind_template.hpp:47:59:   required from 'boost::_bi::bind_t<R, F, L>::result_type boost::_bi::bind_t<R, F, L>::operator()(const A1&) [with A1 = BaseMessage; R = void; F = void (*)(const boost::_bi::bind_t<void, void (*)(const BaseMessage&), boost::_bi::list1<boost::arg<1> > >&, const BaseMessage&); L = boost::_bi::list2<boost::_bi::bind_t<void, void (*)(const BaseMessage&), boost::_bi::list1<boost::arg<1> > >, boost::arg<1> >; boost::_bi::bind_t<R, F, L>::result_type = void]'
/usr/local/include/boost/function/function_template.hpp:153:11:   required from 'static void boost::detail::function::void_function_obj_invoker1<FunctionObj, R, T0>::invoke(boost::detail::function::function_buffer&, T0) [with FunctionObj = boost::_bi::bind_t<void, void (*)(const boost::_bi::bind_t<void, void (*)(const BaseMessage&), boost::_bi::list1<boost::arg<1> > >&, const BaseMessage&), boost::_bi::list2<boost::_bi::bind_t<void, void (*)(const BaseMessage&), boost::_bi::list1<boost::arg<1> > >, boost::arg<1> > >; R = void; T0 = const BaseMessage&]'
/usr/local/include/boost/function/function_template.hpp:934:38:   required from 'void boost::function1<R, T1>::assign_to(Functor) [with Functor = boost::_bi::bind_t<void, void (*)(const boost::_bi::bind_t<void, void (*)(const BaseMessage&), boost::_bi::list1<boost::arg<1> > >&, const BaseMessage&), boost::_bi::list2<boost::_bi::bind_t<void, void (*)(const BaseMessage&), boost::_bi::list1<boost::arg<1> > >, boost::arg<1> > >; R = void; T0 = const BaseMessage&]'
/usr/local/include/boost/function/function_template.hpp:722:7:   required from 'boost::function1<R, T1>::function1(Functor, typename boost::enable_if_c<boost::type_traits::ice_not<boost::is_integral<Functor>::value>::value, int>::type) [with Functor = boost::_bi::bind_t<void, void (*)(const boost::_bi::bind_t<void, void (*)(const BaseMessage&), boost::_bi::list1<boost::arg<1> > >&, const BaseMessage&), boost::_bi::list2<boost::_bi::bind_t<void, void (*)(const BaseMessage&), boost::_bi::list1<boost::arg<1> > >, boost::arg<1> > >; R = void; T0 = const BaseMessage&; typename boost::enable_if_c<boost::type_traits::ice_not<boost::is_integral<Functor>::value>::value, int>::type = int]'
/usr/local/include/boost/function/function_template.hpp:1069:16:   required from 'boost::function<R(T0)>::function(Functor, typename boost::enable_if_c<boost::type_traits::ice_not<boost::is_integral<Functor>::value>::value, int>::type) [with Functor = boost::_bi::bind_t<void, void (*)(const boost::_bi::bind_t<void, void (*)(const BaseMessage&), boost::_bi::list1<boost::arg<1> > >&, const BaseMessage&), boost::_bi::list2<boost::_bi::bind_t<void, void (*)(const BaseMessage&), boost::_bi::list1<boost::arg<1> > >, boost::arg<1> > >; R = void; T0 = const BaseMessage&; typename boost::enable_if_c<boost::type_traits::ice_not<boost::is_integral<Functor>::value>::value, int>::type = int]'
main.cpp:23:109:   required from 'void ask(const F&) [with Type = BaseMessage; F = boost::_bi::bind_t<void, void (*)(const BaseMessage&), boost::_bi::list1<boost::arg<1> > >]'
main.cpp:39:51:   required from here
/usr/local/include/boost/bind/bind.hpp:313:37: error: invalid initialization of reference of type 'const boost::_bi::bind_t<void, void (*)(const BaseMessage&), boost::_bi::list1<boost::arg<1> > >&' from expression of type 'boost::_bi::result_traits<void, void (*)(const BaseMessage&)>::type {aka void}'
         unwrapper<F>::unwrap(f, 0)(a[base_type::a1_], a[base_type::a2_]);
                                     ^
/usr/local/include/boost/bind/bind.hpp: In instantiation of 'void boost::_bi::list2<A1, A2>::operator()(boost::_bi::type<void>, F&, A&, int) [with F = void (*)(const boost::_bi::bind_t<void, void (*)(const DerivedMessage&), boost::_bi::list1<boost::arg<1> > >&, const BaseMessage&); A = boost::_bi::list1<const BaseMessage&>; A1 = boost::_bi::bind_t<void, void (*)(const DerivedMessage&), boost::_bi::list1<boost::arg<1> > >; A2 = boost::arg<1>]':
/usr/local/include/boost/bind/bind_template.hpp:47:59:   required from 'boost::_bi::bind_t<R, F, L>::result_type boost::_bi::bind_t<R, F, L>::operator()(const A1&) [with A1 = BaseMessage; R = void; F = void (*)(const boost::_bi::bind_t<void, void (*)(const DerivedMessage&), boost::_bi::list1<boost::arg<1> > >&, const BaseMessage&); L = boost::_bi::list2<boost::_bi::bind_t<void, void (*)(const DerivedMessage&), boost::_bi::list1<boost::arg<1> > >, boost::arg<1> >; boost::_bi::bind_t<R, F, L>::result_type = void]'
/usr/local/include/boost/function/function_template.hpp:153:11:   required from 'static void boost::detail::function::void_function_obj_invoker1<FunctionObj, R, T0>::invoke(boost::detail::function::function_buffer&, T0) [with FunctionObj = boost::_bi::bind_t<void, void (*)(const boost::_bi::bind_t<void, void (*)(const DerivedMessage&), boost::_bi::list1<boost::arg<1> > >&, const BaseMessage&), boost::_bi::list2<boost::_bi::bind_t<void, void (*)(const DerivedMessage&), boost::_bi::list1<boost::arg<1> > >, boost::arg<1> > >; R = void; T0 = const BaseMessage&]'
/usr/local/include/boost/function/function_template.hpp:934:38:   required from 'void boost::function1<R, T1>::assign_to(Functor) [with Functor = boost::_bi::bind_t<void, void (*)(const boost::_bi::bind_t<void, void (*)(const DerivedMessage&), boost::_bi::list1<boost::arg<1> > >&, const BaseMessage&), boost::_bi::list2<boost::_bi::bind_t<void, void (*)(const DerivedMessage&), boost::_bi::list1<boost::arg<1> > >, boost::arg<1> > >; R = void; T0 = const BaseMessage&]'
/usr/local/include/boost/function/function_template.hpp:722:7:   required from 'boost::function1<R, T1>::function1(Functor, typename boost::enable_if_c<boost::type_traits::ice_not<boost::is_integral<Functor>::value>::value, int>::type) [with Functor = boost::_bi::bind_t<void, void (*)(const boost::_bi::bind_t<void, void (*)(const DerivedMessage&), boost::_bi::list1<boost::arg<1> > >&, const BaseMessage&), boost::_bi::list2<boost::_bi::bind_t<void, void (*)(const DerivedMessage&), boost::_bi::list1<boost::arg<1> > >, boost::arg<1> > >; R = void; T0 = const BaseMessage&; typename boost::enable_if_c<boost::type_traits::ice_not<boost::is_integral<Functor>::value>::value, int>::type = int]'
/usr/local/include/boost/function/function_template.hpp:1069:16:   required from 'boost::function<R(T0)>::function(Functor, typename boost::enable_if_c<boost::type_traits::ice_not<boost::is_integral<Functor>::value>::value, int>::type) [with Functor = boost::_bi::bind_t<void, void (*)(const boost::_bi::bind_t<void, void (*)(const DerivedMessage&), boost::_bi::list1<boost::arg<1> > >&, const BaseMessage&), boost::_bi::list2<boost::_bi::bind_t<void, void (*)(const DerivedMessage&), boost::_bi::list1<boost::arg<1> > >, boost::arg<1> > >; R = void; T0 = const BaseMessage&; typename boost::enable_if_c<boost::type_traits::ice_not<boost::is_integral<Functor>::value>::value, int>::type = int]'
main.cpp:23:109:   required from 'void ask(const F&) [with Type = DerivedMessage; F = boost::_bi::bind_t<void, void (*)(const DerivedMessage&), boost::_bi::list1<boost::arg<1> > >]'
main.cpp:40:57:   required from here
/usr/local/include/boost/bind/bind.hpp:313:37: error: invalid initialization of reference of type 'const boost::_bi::bind_t<void, void (*)(const DerivedMessage&), boost::_bi::list1<boost::arg<1> > >&' from expression of type 'boost::_bi::result_traits<void, void (*)(const DerivedMessage&)>::type {aka void}'
/usr/local/include/boost/bind/bind.hpp: In instantiation of 'void boost::_bi::list1<A1>::operator()(boost::_bi::type<void>, F&, A&, int) [with F = void (*)(const DerivedMessage&); A = const boost::_bi::list1<const BaseMessage&>; A1 = boost::arg<1>]':
/usr/local/include/boost/bind/bind_template.hpp:318:59:   required from 'boost::_bi::bind_t<R, F, L>::result_type boost::_bi::bind_t<R, F, L>::eval(A&) [with A = const boost::_bi::list1<const BaseMessage&>; R = void; F = void (*)(const DerivedMessage&); L = boost::_bi::list1<boost::arg<1> >; boost::_bi::bind_t<R, F, L>::result_type = void]'
/usr/local/include/boost/bind/bind.hpp:237:136:   required from 'typename boost::_bi::result_traits<R, F>::type boost::_bi::list1<A1>::operator[](boost::_bi::bind_t<R, F, L>&) const [with R = void; F = void (*)(const DerivedMessage&); L = boost::_bi::list1<boost::arg<1> >; A1 = const BaseMessage&; typename boost::_bi::result_traits<R, F>::type = void]'
/usr/local/include/boost/bind/bind.hpp:313:37:   required from 'void boost::_bi::list2<A1, A2>::operator()(boost::_bi::type<void>, F&, A&, int) [with F = void (*)(const boost::_bi::bind_t<void, void (*)(const DerivedMessage&), boost::_bi::list1<boost::arg<1> > >&, const BaseMessage&); A = boost::_bi::list1<const BaseMessage&>; A1 = boost::_bi::bind_t<void, void (*)(const DerivedMessage&), boost::_bi::list1<boost::arg<1> > >; A2 = boost::arg<1>]'
/usr/local/include/boost/bind/bind_template.hpp:47:59:   required from 'boost::_bi::bind_t<R, F, L>::result_type boost::_bi::bind_t<R, F, L>::operator()(const A1&) [with A1 = BaseMessage; R = void; F = void (*)(const boost::_bi::bind_t<void, void (*)(const DerivedMessage&), boost::_bi::list1<boost::arg<1> > >&, const BaseMessage&); L = boost::_bi::list2<boost::_bi::bind_t<void, void (*)(const DerivedMessage&), boost::_bi::list1<boost::arg<1> > >, boost::arg<1> >; boost::_bi::bind_t<R, F, L>::result_type = void]'
/usr/local/include/boost/function/function_template.hpp:153:11:   required from 'static void boost::detail::function::void_function_obj_invoker1<FunctionObj, R, T0>::invoke(boost::detail::function::function_buffer&, T0) [with FunctionObj = boost::_bi::bind_t<void, void (*)(const boost::_bi::bind_t<void, void (*)(const DerivedMessage&), boost::_bi::list1<boost::arg<1> > >&, const BaseMessage&), boost::_bi::list2<boost::_bi::bind_t<void, void (*)(const DerivedMessage&), boost::_bi::list1<boost::arg<1> > >, boost::arg<1> > >; R = void; T0 = const BaseMessage&]'
/usr/local/include/boost/function/function_template.hpp:934:38:   required from 'void boost::function1<R, T1>::assign_to(Functor) [with Functor = boost::_bi::bind_t<void, void (*)(const boost::_bi::bind_t<void, void (*)(const DerivedMessage&), boost::_bi::list1<boost::arg<1> > >&, const BaseMessage&), boost::_bi::list2<boost::_bi::bind_t<void, void (*)(const DerivedMessage&), boost::_bi::list1<boost::arg<1> > >, boost::arg<1> > >; R = void; T0 = const BaseMessage&]'
/usr/local/include/boost/function/function_template.hpp:722:7:   required from 'boost::function1<R, T1>::function1(Functor, typename boost::enable_if_c<boost::type_traits::ice_not<boost::is_integral<Functor>::value>::value, int>::type) [with Functor = boost::_bi::bind_t<void, void (*)(const boost::_bi::bind_t<void, void (*)(const DerivedMessage&), boost::_bi::list1<boost::arg<1> > >&, const BaseMessage&), boost::_bi::list2<boost::_bi::bind_t<void, void (*)(const DerivedMessage&), boost::_bi::list1<boost::arg<1> > >, boost::arg<1> > >; R = void; T0 = const BaseMessage&; typename boost::enable_if_c<boost::type_traits::ice_not<boost::is_integral<Functor>::value>::value, int>::type = int]'
/usr/local/include/boost/function/function_template.hpp:1069:16:   required from 'boost::function<R(T0)>::function(Functor, typename boost::enable_if_c<boost::type_traits::ice_not<boost::is_integral<Functor>::value>::value, int>::type) [with Functor = boost::_bi::bind_t<void, void (*)(const boost::_bi::bind_t<void, void (*)(const DerivedMessage&), boost::_bi::list1<boost::arg<1> > >&, const BaseMessage&), boost::_bi::list2<boost::_bi::bind_t<void, void (*)(const DerivedMessage&), boost::_bi::list1<boost::arg<1> > >, boost::arg<1> > >; R = void; T0 = const BaseMessage&; typename boost::enable_if_c<boost::type_traits::ice_not<boost::is_integral<Functor>::value>::value, int>::type = int]'
main.cpp:23:109:   required from 'void ask(const F&) [with Type = DerivedMessage; F = boost::_bi::bind_t<void, void (*)(const DerivedMessage&), boost::_bi::list1<boost::arg<1> > >]'
main.cpp:40:57:   required from here
/usr/local/include/boost/bind/bind.hpp:253:34: error: invalid initialization of reference of type 'const DerivedMessage&' from expression of type 'const BaseMessage'
         unwrapper<F>::unwrap(f, 0)(a[base_type::a1_]);
                                  ^
