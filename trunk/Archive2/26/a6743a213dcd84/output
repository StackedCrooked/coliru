Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocating new segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocated chunk of 8160 bytes which is divided into 255 blocks of 32 bytes each
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocating new segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocating new segment of 160 bytes
Allocating new segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocating new segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocating new segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocating new segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocated chunk of 12240 bytes which is divided into 255 blocks of 48 bytes each
 Allocating 48 bytes from chunk 0x7b05c0
Allocating new segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocating new segment of 160 bytes
Allocating new segment of 160 bytes
Allocating new segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocating new segment of 160 bytes
Allocating new segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocating new segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocating new segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocating new segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocating new segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 48 bytes from chunk 0x7b05c0
Allocating new segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocating new segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocating new segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocating new segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7b05c0
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocating new segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f0f48000a70
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 32 bytes from chunk 0x7f0f48000a70
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f0f48000a70
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocating new segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocating new segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7b05c0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7b05c0
Allocating new segment of 160 bytes
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7b05c0
Allocating new segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 32 bytes from chunk 0x7f0f48000a70
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocating new segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f0f48000a70
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocating new segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7b05c0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 48 bytes from chunk 0x7b05c0
Allocating new segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f0f48000a70
 Allocating 48 bytes from chunk 0x7b05c0
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f0f48000a70
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7b05c0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f0f48000a70
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 48 bytes from chunk 0x7b05c0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f0f48000a70
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 32 bytes from chunk 0x7f0f48000a70
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 48 bytes from chunk 0x7b05c0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocating new segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 32 bytes from chunk 0x7f0f48000a70
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f0f48000a70
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f0f48000a70
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
 Allocating 48 bytes from chunk 0x7b05c0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f0f48000a70
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 32 bytes from chunk 0x7f0f48000a70
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f0f48000a70
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 32 bytes from chunk 0x7f0f48000a70
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f0f48000a70
 Allocating 32 bytes from chunk 0x7f0f48000a70
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7b05c0
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7b05c0
Allocating new segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f0f48000a70
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 32 bytes from chunk 0x7f0f48000a70
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f0f48000a70
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Reusing existing segment of 160 bytes
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
 Allocating 48 bytes from chunk 0x7b05c0
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f0f48000a70
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f0f48000a70
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 32 bytes from chunk 0x7f0f48000a70
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7b05c0
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
 Allocating 32 bytes from chunk 0x7f0f48000a70
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
Reusing existing segment of 160 bytes
Reusing existing segment of 160 bytes
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 48 bytes from chunk 0x7b05c0
 Allocating 32 bytes from chunk 0x7f0f48000a70
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=160 bytes. Type=std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<main::{lambda()#2}::operator()() const::{lambda(int&)#1}, Adaptor<FlexiblePool>::Allocator<char>, int ({lambda()#2})>, Adaptor<FlexiblePool>, (__gnu_cxx::_Lock_policy)2>
Reusing existing segment of 160 bytes
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
Allocation size=32 bytes. Type=std::__future_base::_Result_alloc<int, Adaptor<FlexiblePool>::Allocator<char> >
 Allocating 32 bytes from chunk 0x7f0f48000a70
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::Allocator<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> > >, (__gnu_cxx::_Lock_policy)2>
 Allocating 32 bytes from chunk 0x7f0f48000a70
 Allocating 32 bytes from chunk 0x7f0f48000a70
Allocation size=48 bytes. Type=std::_Sp_counted_ptr_inplace<TaskQueue<int>::Task::Impl<std::packaged_task<int (int&)> >, Adaptor<FlexiblePool>::A