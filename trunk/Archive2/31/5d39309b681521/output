+ clang++ -O3 -std=c++1y -stdlib=libc++ -Wall -Wextra -pedantic main.cpp -o a.out
main.cpp:33:13: error: cannot decrement value of type 'std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::unique_ptr<Node<long>, std::__1::default_delete<Node<long> > >, void *> *>'
            --it;
            ^ ~~
In file included from main.cpp:1:
/usr/include/c++/v1/memory:1645:31: error: call to implicitly-deleted copy constructor of 'std::__1::unique_ptr<Node<long>, std::__1::default_delete<Node<long> > >'
            ::new((void*)__p) _Up(_VSTD::forward<_Args>(__args)...);
                              ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/v1/memory:1572:18: note: in instantiation of function template specialization 'std::__1::allocator<std::__1::__hash_node<std::__1::unique_ptr<Node<long>, std::__1::default_delete<Node<long> > >, void *> >::construct<std::__1::unique_ptr<Node<long>, std::__1::default_delete<Node<long> > >, const std::__1::unique_ptr<Node<long>, std::__1::default_delete<Node<long> > > >' requested here
            {__a.construct(__p, _VSTD::forward<_Args>(__args)...);}
                 ^
/usr/include/c++/v1/memory:1453:14: note: in instantiation of function template specialization 'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node<std::__1::unique_ptr<Node<long>, std::__1::default_delete<Node<long> > >, void *> > >::__construct<std::__1::unique_ptr<Node<long>, std::__1::default_delete<Node<long> > >, const std::__1::unique_ptr<Node<long>, std::__1::default_delete<Node<long> > > >' requested here
            {__construct(__has_construct<allocator_type, pointer, _Args...>(),
             ^
/usr/include/c++/v1/__hash_table:2084:20: note: in instantiation of function template specialization 'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node<std::__1::unique_ptr<Node<long>, std::__1::default_delete<Node<long> > >, void *> > >::construct<std::__1::unique_ptr<Node<long>, std::__1::default_delete<Node<long> > >, const std::__1::unique_ptr<Node<long>, std::__1::default_delete<Node<long> > > >' requested here
    __node_traits::construct(__na, _VSTD::addressof(__h->__value_), _VSTD::forward<_Args>(__args)...);
                   ^
/usr/include/c++/v1/__hash_table:1826:25: note: in instantiation of function template specialization 'std::__1::__hash_table<std::__1::unique_ptr<Node<long>, std::__1::default_delete<Node<long> > >, myHash<std::__1::unique_ptr<Node<long>, std::__1::default_delete<Node<long> > > >, myEqual<std::__1::unique_ptr<Node<long>, std::__1::default_delete<Node<long> > > >, std::__1::allocator<std::__1::unique_ptr<Node<long>, std::__1::default_delete<Node<long> > > > >::__construct_node<const std::__1::unique_ptr<Node<long>, std::__1::default_delete<Node<long> > > >' requested here
    __node_holder __h = __construct_node(_VSTD::forward<_Args>(__args)...);
                        ^
/usr/include/c++/v1/unordered_set:477:30: note: in instantiation of function template specialization 'std::__1::__hash_table<std::__1::unique_ptr<Node<long>, std::__1::default_delete<Node<long> > >, myHash<std::__1::unique_ptr<Node<long>, std::__1::default_delete<Node<long> > > >, myEqual<std::__1::unique_ptr<Node<long>, std::__1::default_delete<Node<long> > > >, std::__1::allocator<std::__1::unique_ptr<Node<long>, std::__1::default_delete<Node<long> > > > >::__emplace_unique<const std::__1::unique_ptr<Node<long>, std::__1::default_delete<Node<long> > > >' requested here
            {return __table_.__emplace_unique(_VSTD::forward<_Args>(__args)...);}
                             ^
main.cpp:31:26: note: in instantiation of function template specialization 'std::__1::unordered_set<std::__1::unique_ptr<Node<long>, std::__1::default_delete<Node<long> > >, myHash<std::__1::unique_ptr<Node<long>, std::__1::default_delete<Node<long> > > >, myEqual<std::__1::unique_ptr<Node<long>, std::__1::default_delete<Node<long> > > >, std::__1::allocator<std::__1::unique_ptr<Node<long>, std::__1::default_delete<Node<long> > > > >::emplace<const std::__1::unique_ptr<Node<long>, std::__1::default_delete<Node<long> > > >' requested here
            child->nodes.emplace(std::move(*it));
                         ^
/usr/include/c++/v1/memory:2515:31: note: copy constructor is implicitly deleted because 'unique_ptr<Node<long>, std::__1::default_delete<Node<long> > >' has a user-declared move constructor
    _LIBCPP_INLINE_VISIBILITY unique_ptr(unique_ptr&& __u) _NOEXCEPT
                              ^
2 errors generated.
+ g++ -O3 -std=c++1y -Wall -Wextra -pedantic main.cpp -o a.out
main.cpp: In member function 'void A::moveToChild()':
main.cpp:33:13: error: no match for 'operator--' (operand type is 'std::__detail::_Node_iterator<std::unique_ptr<Node<long int> >, true, true>')
             --it;
             ^
In file included from /usr/local/include/c++/4.9.2/x86_64-unknown-linux-gnu/bits/c++allocator.h:33:0,
                 from /usr/local/include/c++/4.9.2/bits/allocator.h:46,
                 from /usr/local/include/c++/4.9.2/memory:63,
                 from main.cpp:1:
/usr/local/include/c++/4.9.2/ext/new_allocator.h: In instantiation of 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::unique_ptr<Node<long int> >; _Args = {const std::unique_ptr<Node<long int>, std::default_delete<Node<long int> > >}; _Tp = std::unique_ptr<Node<long int> >]':
/usr/local/include/c++/4.9.2/bits/alloc_traits.h:253:4:   required from 'static std::_Require<typename std::allocator_traits<_Alloc>::__construct_helper<_Tp, _Args>::type> std::allocator_traits<_Alloc>::_S_construct(_Alloc&, _Tp*, _Args&& ...) [with _Tp = std::unique_ptr<Node<long int> >; _Args = {const std::unique_ptr<Node<long int>, std::default_delete<Node<long int> > >}; _Alloc = std::allocator<std::unique_ptr<Node<long int> > >; std::_Require<typename std::allocator_traits<_Alloc>::__construct_helper<_Tp, _Args>::type> = void]'
/usr/local/include/c++/4.9.2/bits/alloc_traits.h:399:57:   required from 'static decltype (_S_construct(__a, __p, (forward<_Args>)(std::allocator_traits::construct::__args)...)) std::allocator_traits<_Alloc>::construct(_Alloc&, _Tp*, _Args&& ...) [with _Tp = std::unique_ptr<Node<long int> >; _Args = {const std::unique_ptr<Node<long int>, std::default_delete<Node<long int> > >}; _Alloc = std::allocator<std::unique_ptr<Node<long int> > >; decltype (_S_construct(__a, __p, (forward<_Args>)(std::allocator_traits::construct::__args)...)) = <type error>]'
/usr/local/include/c++/4.9.2/bits/hashtable_policy.h:1958:40:   required from 'std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::unique_ptr<Node<long int>, std::default_delete<Node<long int> > >}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::unique_ptr<Node<long int> >, true> >; std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type = std::__detail::_Hash_node<std::unique_ptr<Node<long int> >, true>]'
/usr/local/include/c++/4.9.2/bits/hashtable.h:1541:77:   required from 'std::pair<typename std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::iterator, bool> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_emplace(std::true_type, _Args&& ...) [with _Args = {const std::unique_ptr<Node<long int>, std::default_delete<Node<long int> > >}; _Key = std::unique_ptr<Node<long int> >; _Value = std::unique_ptr<Node<long int> >; _Alloc = std::allocator<std::unique_ptr<Node<long int> > >; _ExtractKey = std::__detail::_Identity; _Equal = myEqual<std::unique_ptr<Node<long int> > >; _H1 = myHash<std::unique_ptr<Node<long int> > >; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>; typename std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::iterator = std::__detail::_Node_iterator<std::unique_ptr<Node<long int> >, true, true>; std::true_type = std::integral_constant<bool, true>]'
/usr/local/include/c++/4.9.2/bits/hashtable.h:718:69:   required from 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__ireturn_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::emplace(_Args&& ...) [with _Args = {const std::unique_ptr<Node<long int>, std::default_delete<Node<long int> > >}; _Key = std::unique_ptr<Node<long int> >; _Value = std::unique_ptr<Node<long int> >; _Alloc = std::allocator<std::unique_ptr<Node<long int> > >; _ExtractKey = std::__detail::_Identity; _Equal = myEqual<std::unique_ptr<Node<long int> > >; _H1 = myHash<std::unique_ptr<Node<long int> > >; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__ireturn_type = std::pair<std::__detail::_Node_iterator<std::unique_ptr<Node<long int> >, true, true>, bool>]'
/usr/local/include/c++/4.9.2/bits/unordered_set.h:330:54:   required from 'std::pair<typename std::_Hashtable<_Value, _Value, _Alloc, std::__detail::_Identity, _Pred, _Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<std::__not_<std::__and_<std::__is_fast_hash<_Hash>, std::__detail::__is_noexcept_hash<_Tp, _Hash> > >::value, true, true> >::iterator, bool> std::unordered_set<_Value, _Hash, _Pred, _Alloc>::emplace(_Args&& ...) [with _Args = {const std::unique_ptr<Node<long int>, std::default_delete<Node<long int> > >}; _Value = std::unique_ptr<Node<long int> >; _Hash = myHash<std::unique_ptr<Node<long int> > >; _Pred = myEqual<std::unique_ptr<Node<long int> > >; _Alloc = std::allocator<std::unique_ptr<Node<long int> > >; typename std::_Hashtable<_Value, _Value, _Alloc, std::__detail::_Identity, _Pred, _Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<std::__not_<std::__and_<std::__is_fast_hash<_Hash>, std::__detail::__is_noexcept_hash<_Tp, _Hash> > >::value, true, true> >::iterator = std::__detail::_Node_iterator<std::unique_ptr<Node<long int> >, true, true>]'
main.cpp:31:48:   required from here
/usr/local/include/c++/4.9.2/ext/new_allocator.h:120:4: error: use of deleted function 'std::unique_ptr<_Tp, _Dp>::unique_ptr(const std::unique_ptr<_Tp, _Dp>&) [with _Tp = Node<long int>; _Dp = std::default_delete<Node<long int> >]'
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^
In file included from /usr/local/include/c++/4.9.2/memory:81:0,
                 from main.cpp:1:
/usr/local/include/c++/4.9.2/bits/unique_ptr.h:356:7: note: declared here
       unique_ptr(const unique_ptr&) = delete;
       ^
