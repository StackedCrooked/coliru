main.cpp:13:50: warning: ‘true_tuple_cat’ function uses ‘auto’ type specifier without trailing return type [enabled by default]
 auto true_tuple_cat( indices<I...>, Tn&&... meow ) {
                                                  ^
main.cpp: In function ‘auto true_tuple_cat(indices<I ...>, Tn&& ...)’:
main.cpp:14:48: error: parameter packs not expanded with ‘...’:
     return std::get<I>( std::get<I>( meow )... ) );
                                                ^
main.cpp:14:48: note:         ‘I’
main.cpp:14:50: error: expected ‘;’ before ‘)’ token
     return std::get<I>( std::get<I>( meow )... ) );
                                                  ^
main.cpp:14:50: error: expected primary-expression before ‘)’ token
main.cpp:14:50: error: expected ‘;’ before ‘)’ token
main.cpp: At global scope:
main.cpp:18:30: warning: ‘tuple_cat’ function uses ‘auto’ type specifier without trailing return type [enabled by default]
 auto tuple_cat( Tn&&... meow ) {
                              ^
main.cpp: In function ‘auto tuple_cat(Tn&& ...)’:
main.cpp:19:44: error: expected primary-expression before ‘,’ token
     return true_tuple_cat( type_list<Tn...>, std::forward<Tn>( meow )... ) ;
                                            ^
main.cpp: In function ‘int main()’:
main.cpp:28:24: error: expected ‘;’ after struct definition
     struct make_error {} = tuple_cat( kitty, std::tie( doggy ), cat );
                        ^
main.cpp:28:26: error: expected primary-expression before ‘=’ token
     struct make_error {} = tuple_cat( kitty, std::tie( doggy ), cat );
                          ^
