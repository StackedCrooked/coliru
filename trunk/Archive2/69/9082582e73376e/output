+ g++-4.8 -std=c++11 -O2 -Wall -pedantic -pthread main.cpp
In file included from /usr/include/c++/4.8/bits/hashtable.h:35:0,
                 from /usr/include/c++/4.8/unordered_map:47,
                 from main.cpp:2:
/usr/include/c++/4.8/bits/hashtable_policy.h: In instantiation of ‘struct std::__detail::_Hash_code_base<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >, std::__detail::_Select1st, std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>’:
/usr/include/c++/4.8/bits/hashtable_policy.h:1402:10:   required from ‘struct std::__detail::_Hashtable_base<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >, std::__detail::_Select1st, std::equal_to<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >, std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, false, true> >’
/usr/include/c++/4.8/bits/hashtable.h:174:11:   required from ‘class std::_Hashtable<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >, std::allocator<std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > > >, std::__detail::_Select1st, std::equal_to<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >, std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >’
/usr/include/c++/4.8/bits/unordered_map.h:100:18:   required from ‘class std::unordered_map<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >’
main.cpp:25:56:   required from here
/usr/include/c++/4.8/bits/hashtable_policy.h:1070:12: error: invalid use of incomplete type ‘struct std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >’
     struct _Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2,
            ^
In file included from /usr/include/c++/4.8/bits/stl_bvector.h:1134:0,
                 from /usr/include/c++/4.8/vector:65,
                 from main.cpp:1:
/usr/include/c++/4.8/bits/functional_hash.h:58:12: error: declaration of ‘struct std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >’
     struct hash;
            ^
In file included from /usr/include/c++/4.8/bits/hashtable.h:35:0,
                 from /usr/include/c++/4.8/unordered_map:47,
                 from main.cpp:2:
/usr/include/c++/4.8/bits/hashtable_policy.h:1070:12: error: invalid use of incomplete type ‘struct std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >’
     struct _Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2,
            ^
In file included from /usr/include/c++/4.8/bits/stl_bvector.h:1134:0,
                 from /usr/include/c++/4.8/vector:65,
                 from main.cpp:1:
/usr/include/c++/4.8/bits/functional_hash.h:58:12: error: declaration of ‘struct std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >’
     struct hash;
            ^
In file included from /usr/include/c++/4.8/bits/hashtable.h:35:0,
                 from /usr/include/c++/4.8/unordered_map:47,
                 from main.cpp:2:
/usr/include/c++/4.8/bits/hashtable_policy.h:1082:53: error: invalid use of incomplete type ‘struct std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >’
       using __ebo_h1 = _Hashtable_ebo_helper<1, _H1>;
                                                     ^
In file included from /usr/include/c++/4.8/bits/stl_bvector.h:1134:0,
                 from /usr/include/c++/4.8/vector:65,
                 from main.cpp:1:
/usr/include/c++/4.8/bits/functional_hash.h:58:12: error: declaration of ‘struct std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >’
     struct hash;
            ^
In file included from /usr/include/c++/4.8/bits/hashtable.h:35:0,
                 from /usr/include/c++/4.8/unordered_map:47,
                 from main.cpp:2:
/usr/include/c++/4.8/bits/hashtable_policy.h:1082:53: error: invalid use of incomplete type ‘struct std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >’
       using __ebo_h1 = _Hashtable_ebo_helper<1, _H1>;
                                                     ^
In file included from /usr/include/c++/4.8/bits/stl_bvector.h:1134:0,
                 from /usr/include/c++/4.8/vector:65,
                 from main.cpp:1:
/usr/include/c++/4.8/bits/functional_hash.h:58:12: error: declaration of ‘struct std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >’
     struct hash;
            ^
main.cpp: In constructor ‘std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::unordered_map(std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::size_type, const hasher&, const key_equal&, const allocator_type&) [with _Key = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; _Tp = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; _Hash = std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _Pred = std::equal_to<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _Alloc = std::allocator<std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > > >; std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::size_type = long unsigned int; std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::hasher = std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::key_equal = std::equal_to<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::allocator_type = std::allocator<std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > > >]’:
main.cpp:22:11: error: invalid use of incomplete type ‘std::unordered_map<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >::hasher {aka struct std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >}’
     class DictionaryWrapper {
           ^
In file included from /usr/include/c++/4.8/bits/stl_bvector.h:1134:0,
                 from /usr/include/c++/4.8/vector:65,
                 from main.cpp:1:
/usr/include/c++/4.8/bits/functional_hash.h:58:12: error: declaration of ‘std::unordered_map<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >::hasher {aka struct std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >}’
     struct hash;
            ^
main.cpp:22:11: note:   when instantiating default argument for call to std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::unordered_map(std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::size_type, const hasher&, const key_equal&, const allocator_type&) [with _Key = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; _Tp = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; _Hash = std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _Pred = std::equal_to<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _Alloc = std::allocator<std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > > >; std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::size_type = long unsigned int; std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::hasher = std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::key_equal = std::equal_to<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::allocator_type = std::allocator<std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > > >]
     class DictionaryWrapper {
           ^
main.cpp: In function ‘int main()’:
main.cpp:43:34: note: synthesized method ‘libdocplus::DictionaryWrapper::DictionaryWrapper()’ first required here 
     Object m = DictionaryWrapper();
                                  ^
In file included from /usr/include/c++/4.8/bits/hashtable.h:35:0,
                 from /usr/include/c++/4.8/unordered_map:47,
                 from main.cpp:2:
/usr/include/c++/4.8/bits/hashtable_policy.h: In instantiation of ‘std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true>::_M_hash_code(const _Key&) const [with _Key = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; _Value = std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _H2 = std::__detail::_Mod_range_hashing; std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true>::__hash_code = long unsigned int]’:
/usr/include/c++/4.8/bits/hashtable_policy.h:513:49:   required from ‘std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::operator[](std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::key_type&&) [with _Key = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; _Pair = std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _Alloc = std::allocator<std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > > >; _Equal = std::equal_to<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _H1 = std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>; std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::mapped_type = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::key_type = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >]’
/usr/include/c++/4.8/bits/unordered_map.h:600:20:   required from ‘std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::mapped_type& std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::operator[](std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::key_type&&) [with _Key = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; _Tp = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; _Hash = std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _Pred = std::equal_to<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _Alloc = std::allocator<std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > > >; std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::mapped_type = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::key_type = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >]’
main.cpp:45:19:   required from here
/usr/include/c++/4.8/bits/hashtable_policy.h:1103:22: error: no match for call to ‘(const std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >) (const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >&)’
       { return _M_h1()(__k); }
                      ^
/usr/include/c++/4.8/bits/hashtable_policy.h: In instantiation of ‘std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true>::_Hash_code_base(const _ExtractKey&, const _H1&, const _H2&, const std::__detail::_Default_ranged_hash&) [with _Key = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; _Value = std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _H2 = std::__detail::_Mod_range_hashing]’:
/usr/include/c++/4.8/bits/hashtable_policy.h:1463:65:   required from ‘std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::_Hashtable_base(const _ExtractKey&, const _H1&, const _H2&, const _Hash&, const _Equal&) [with _Key = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; _Value = std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _H1 = std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, true>]’
/usr/include/c++/4.8/bits/hashtable.h:828:24:   required from ‘std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const _H1&, const _H2&, const _Hash&, const _Equal&, const _ExtractKey&, const allocator_type&) [with _Key = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; _Value = std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _Alloc = std::allocator<std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _H1 = std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type = long unsigned int; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::allocator_type = std::allocator<std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > > >]’
/usr/include/c++/4.8/bits/hashtable.h:397:26:   required from ‘std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const _H1&, const key_equal&, const allocator_type&) [with _Key = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; _Value = std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _Alloc = std::allocator<std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _H1 = std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type = long unsigned int; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::key_equal = std::equal_to<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::allocator_type = std::allocator<std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > > >]’
/usr/include/c++/4.8/bits/unordered_map.h:142:35:   required from ‘std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::unordered_map(std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::size_type, const hasher&, const key_equal&, const allocator_type&) [with _Key = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; _Tp = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; _Hash = std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _Pred = std::equal_to<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _Alloc = std::allocator<std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > > >; std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::size_type = long unsigned int; std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::hasher = std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::key_equal = std::equal_to<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::allocator_type = std::allocator<std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > > >]’
main.cpp:22:11:   required from here
/usr/include/c++/4.8/bits/hashtable_policy.h:1099:63: error: invalid use of incomplete type ‘struct std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >’
       : __ebo_extract_key(__ex), __ebo_h1(__h1), __ebo_h2(__h2) { }
                                                               ^
In file included from /usr/include/c++/4.8/bits/stl_bvector.h:1134:0,
                 from /usr/include/c++/4.8/vector:65,
                 from main.cpp:1:
/usr/include/c++/4.8/bits/functional_hash.h:58:12: error: declaration of ‘struct std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >’
     struct hash;
            ^
In file included from /usr/include/c++/4.8/bits/hashtable.h:35:0,
                 from /usr/include/c++/4.8/unordered_map:47,
                 from main.cpp:2:
/usr/include/c++/4.8/bits/hashtable_policy.h:1099:63: error: invalid use of incomplete type ‘struct std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >’
       : __ebo_extract_key(__ex), __ebo_h1(__h1), __ebo_h2(__h2) { }
                                                               ^
In file included from /usr/include/c++/4.8/bits/stl_bvector.h:1134:0,
                 from /usr/include/c++/4.8/vector:65,
                 from main.cpp:1:
/usr/include/c++/4.8/bits/functional_hash.h:58:12: error: declaration of ‘struct std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >’
     struct hash;
            ^
In file included from /usr/local/include/boost/variant.hpp:17:0,
                 from main.cpp:3:
/usr/local/include/boost/variant/variant.hpp: In instantiation of ‘bool boost::detail::variant::equal_comp::operator()(const T&, const T&) const [with T = libdocplus::Null]’:
/usr/local/include/boost/variant/variant.hpp:948:47:   required from ‘bool boost::detail::variant::comparer<Variant, Comp>::operator()(const T&) const [with T = libdocplus::Null; Variant = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; Comp = boost::detail::variant::equal_comp]’
/usr/local/include/boost/variant/variant.hpp:1017:32:   required from ‘boost::detail::variant::invoke_visitor<Visitor>::result_type boost::detail::variant::invoke_visitor<Visitor>::internal_visit(T&, int) [with T = const libdocplus::Null; Visitor = boost::detail::variant::comparer<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::detail::variant::equal_comp>; boost::detail::variant::invoke_visitor<Visitor>::result_type = bool]’
/usr/local/include/boost/variant/detail/visitation_impl.hpp:130:9:   required from ‘typename Visitor::result_type boost::detail::variant::visitation_impl_invoke_impl(int, Visitor&, VoidPtrCV, T*, mpl_::true_) [with Visitor = boost::detail::variant::invoke_visitor<boost::detail::variant::comparer<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::detail::variant::equal_comp> >; VoidPtrCV = const void*; T = libdocplus::Null; typename Visitor::result_type = bool; mpl_::true_ = mpl_::bool_<true>]’
/usr/local/include/boost/variant/detail/visitation_impl.hpp:173:9:   required from ‘typename Visitor::result_type boost::detail::variant::visitation_impl_invoke(int, Visitor&, VoidPtrCV, T*, NoBackupFlag, int) [with Visitor = boost::detail::variant::invoke_visitor<boost::detail::variant::comparer<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::detail::variant::equal_comp> >; VoidPtrCV = const void*; T = libdocplus::Null; NoBackupFlag = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >::has_fallback_type_; typename Visitor::result_type = bool]’
/usr/local/include/boost/variant/detail/visitation_impl.hpp:256:5:   required from ‘typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VoidPtrCV, mpl_::false_, NoBackupFlag, Which*, step0*) [with Which = mpl_::int_<0>; step0 = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_item<mpl_::long_<9l>, bool, boost::mpl::l_item<mpl_::long_<8l>, int, boost::mpl::l_item<mpl_::long_<7l>, double, boost::mpl::l_item<mpl_::long_<6l>, std::vector<unsigned char>, boost::mpl::l_item<mpl_::long_<5l>, std::vector<unsigned char>, boost::mpl::l_item<mpl_::long_<4l>, std::vector<unsigned char>, boost::mpl::l_item<mpl_::long_<3l>, libdocplus::Null, boost::mpl::l_item<mpl_::long_<2l>, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::mpl::l_item<mpl_::long_<1l>, boost::recursive_wrapper<libdocplus::ArrayWrapper>, boost::mpl::l_end> > > > > > > > > >, boost::mpl::l_iter<boost::mpl::l_end> >; Visitor = boost::detail::variant::invoke_visitor<boost::detail::variant::comparer<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::detail::variant::equal_comp> >; VoidPtrCV = const void*; NoBackupFlag = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >::has_fallback_type_; typename Visitor::result_type = bool; mpl_::false_ = mpl_::bool_<false>]’
/usr/local/include/boost/variant/variant.hpp:2326:13:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/c++/4.8/bits/hashtable_policy.h:1470:23:   required from ‘bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::__hash_code, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::__node_type*) const [with _Key = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; _Value = std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _H1 = std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, true>; std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::__hash_code = long unsigned int; std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::__node_type = std::__detail::_Hash_node<std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >, true>]’
/usr/include/c++/4.8/bits/hashtable.h:1165:4:   required from ‘std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_base* std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code) const [with _Key = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; _Value = std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _Alloc = std::allocator<std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _H1 = std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_base = std::__detail::_Hash_node_base; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type = long unsigned int; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::key_type = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code = long unsigned int]’
/usr/include/c++/4.8/bits/hashtable.h:604:65:   required from ‘std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type* std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_find_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code) const [with _Key = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; _Value = std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _Alloc = std::allocator<std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _H1 = std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type = std::__detail::_Hash_node<std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >, true>; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type = long unsigned int; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::key_type = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code = long unsigned int]’
/usr/include/c++/4.8/bits/hashtable_policy.h:515:60:   required from ‘std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::operator[](std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::key_type&&) [with _Key = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; _Pair = std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _Alloc = std::allocator<std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > > >; _Equal = std::equal_to<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _H1 = std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>; std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::mapped_type = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::key_type = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >]’
/usr/include/c++/4.8/bits/unordered_map.h:600:20:   required from ‘std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::mapped_type& std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::operator[](std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::key_type&&) [with _Key = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; _Tp = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; _Hash = std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _Pred = std::equal_to<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _Alloc = std::allocator<std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > > >; std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::mapped_type = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::key_type = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >]’
main.cpp:45:19:   required from here
/usr/local/include/boost/variant/variant.hpp:966:20: error: no match for ‘operator==’ (operand types are ‘const libdocplus::Null’ and ‘const libdocplus::Null’)
         return lhs == rhs;
                    ^
/usr/local/include/boost/variant/variant.hpp:966:20: note: candidate is:
In file included from /usr/local/include/boost/variant/variant.hpp:42:0,
                 from /usr/local/include/boost/variant.hpp:17,
                 from main.cpp:3:
/usr/local/include/boost/blank.hpp:58:13: note: bool boost::operator==(const boost::blank&, const boost::blank&)
 inline bool operator==(const blank&, const blank&)
             ^
/usr/local/include/boost/blank.hpp:58:13: note:   no known conversion for argument 1 from ‘const libdocplus::Null’ to ‘const boost::blank&’
In file included from /usr/local/include/boost/variant.hpp:17:0,
                 from main.cpp:3:
/usr/local/include/boost/variant/variant.hpp: In instantiation of ‘bool boost::detail::variant::equal_comp::operator()(const T&, const T&) const [with T = libdocplus::DictionaryWrapper]’:
/usr/local/include/boost/variant/variant.hpp:948:47:   required from ‘bool boost::detail::variant::comparer<Variant, Comp>::operator()(const T&) const [with T = libdocplus::DictionaryWrapper; Variant = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; Comp = boost::detail::variant::equal_comp]’
/usr/local/include/boost/variant/variant.hpp:1017:32:   required from ‘boost::detail::variant::invoke_visitor<Visitor>::result_type boost::detail::variant::invoke_visitor<Visitor>::internal_visit(T&, int) [with T = const libdocplus::DictionaryWrapper; Visitor = boost::detail::variant::comparer<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::detail::variant::equal_comp>; boost::detail::variant::invoke_visitor<Visitor>::result_type = bool]’
/usr/local/include/boost/variant/variant.hpp:1074:50:   required from ‘boost::detail::variant::invoke_visitor<Visitor>::result_type boost::detail::variant::invoke_visitor<Visitor>::internal_visit(const boost::recursive_wrapper<T>&, long int) [with T = libdocplus::DictionaryWrapper; Visitor = boost::detail::variant::comparer<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::detail::variant::equal_comp>; boost::detail::variant::invoke_visitor<Visitor>::result_type = bool]’
/usr/local/include/boost/variant/detail/visitation_impl.hpp:130:9:   required from ‘typename Visitor::result_type boost::detail::variant::visitation_impl_invoke_impl(int, Visitor&, VoidPtrCV, T*, mpl_::true_) [with Visitor = boost::detail::variant::invoke_visitor<boost::detail::variant::comparer<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::detail::variant::equal_comp> >; VoidPtrCV = const void*; T = boost::recursive_wrapper<libdocplus::DictionaryWrapper>; typename Visitor::result_type = bool; mpl_::true_ = mpl_::bool_<true>]’
/usr/local/include/boost/variant/detail/visitation_impl.hpp:173:9:   required from ‘typename Visitor::result_type boost::detail::variant::visitation_impl_invoke(int, Visitor&, VoidPtrCV, T*, NoBackupFlag, int) [with Visitor = boost::detail::variant::invoke_visitor<boost::detail::variant::comparer<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::detail::variant::equal_comp> >; VoidPtrCV = const void*; T = boost::recursive_wrapper<libdocplus::DictionaryWrapper>; NoBackupFlag = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >::has_fallback_type_; typename Visitor::result_type = bool]’
/usr/local/include/boost/variant/detail/visitation_impl.hpp:256:5:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/c++/4.8/bits/hashtable_policy.h:1470:23:   required from ‘bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::__hash_code, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::__node_type*) const [with _Key = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; _Value = std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _H1 = std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, true>; std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::__hash_code = long unsigned int; std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::__node_type = std::__detail::_Hash_node<std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >, true>]’
/usr/include/c++/4.8/bits/hashtable.h:1165:4:   required from ‘std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_base* std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code) const [with _Key = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; _Value = std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _Alloc = std::allocator<std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _H1 = std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_base = std::__detail::_Hash_node_base; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type = long unsigned int; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::key_type = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code = long unsigned int]’
/usr/include/c++/4.8/bits/hashtable.h:604:65:   required from ‘std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type* std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_find_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code) const [with _Key = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; _Value = std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _Alloc = std::allocator<std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _H1 = std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type = std::__detail::_Hash_node<std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >, true>; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type = long unsigned int; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::key_type = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code = long unsigned int]’
/usr/include/c++/4.8/bits/hashtable_policy.h:515:60:   required from ‘std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::operator[](std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::key_type&&) [with _Key = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; _Pair = std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _Alloc = std::allocator<std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > > >; _Equal = std::equal_to<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _H1 = std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>; std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::mapped_type = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::key_type = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >]’
/usr/include/c++/4.8/bits/unordered_map.h:600:20:   required from ‘std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::mapped_type& std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::operator[](std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::key_type&&) [with _Key = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; _Tp = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; _Hash = std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _Pred = std::equal_to<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _Alloc = std::allocator<std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > > >; std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::mapped_type = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::key_type = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >]’
main.cpp:45:19:   required from here
/usr/local/include/boost/variant/variant.hpp:966:20: error: no match for ‘operator==’ (operand types are ‘const libdocplus::DictionaryWrapper’ and ‘const libdocplus::DictionaryWrapper’)
         return lhs == rhs;
                    ^
/usr/local/include/boost/variant/variant.hpp:966:20: note: candidate is:
In file included from /usr/local/include/boost/variant/variant.hpp:42:0,
                 from /usr/local/include/boost/variant.hpp:17,
                 from main.cpp:3:
/usr/local/include/boost/blank.hpp:58:13: note: bool boost::operator==(const boost::blank&, const boost::blank&)
 inline bool operator==(const blank&, const blank&)
             ^
/usr/local/include/boost/blank.hpp:58:13: note:   no known conversion for argument 1 from ‘const libdocplus::DictionaryWrapper’ to ‘const boost::blank&’
In file included from /usr/local/include/boost/variant.hpp:17:0,
                 from main.cpp:3:
/usr/local/include/boost/variant/variant.hpp: In instantiation of ‘bool boost::detail::variant::equal_comp::operator()(const T&, const T&) const [with T = libdocplus::ArrayWrapper]’:
/usr/local/include/boost/variant/variant.hpp:948:47:   required from ‘bool boost::detail::variant::comparer<Variant, Comp>::operator()(const T&) const [with T = libdocplus::ArrayWrapper; Variant = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; Comp = boost::detail::variant::equal_comp]’
/usr/local/include/boost/variant/variant.hpp:1017:32:   required from ‘boost::detail::variant::invoke_visitor<Visitor>::result_type boost::detail::variant::invoke_visitor<Visitor>::internal_visit(T&, int) [with T = const libdocplus::ArrayWrapper; Visitor = boost::detail::variant::comparer<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::detail::variant::equal_comp>; boost::detail::variant::invoke_visitor<Visitor>::result_type = bool]’
/usr/local/include/boost/variant/variant.hpp:1074:50:   required from ‘boost::detail::variant::invoke_visitor<Visitor>::result_type boost::detail::variant::invoke_visitor<Visitor>::internal_visit(const boost::recursive_wrapper<T>&, long int) [with T = libdocplus::ArrayWrapper; Visitor = boost::detail::variant::comparer<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::detail::variant::equal_comp>; boost::detail::variant::invoke_visitor<Visitor>::result_type = bool]’
/usr/local/include/boost/variant/detail/visitation_impl.hpp:130:9:   required from ‘typename Visitor::result_type boost::detail::variant::visitation_impl_invoke_impl(int, Visitor&, VoidPtrCV, T*, mpl_::true_) [with Visitor = boost::detail::variant::invoke_visitor<boost::detail::variant::comparer<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::detail::variant::equal_comp> >; VoidPtrCV = const void*; T = boost::recursive_wrapper<libdocplus::ArrayWrapper>; typename Visitor::result_type = bool; mpl_::true_ = mpl_::bool_<true>]’
/usr/local/include/boost/variant/detail/visitation_impl.hpp:173:9:   required from ‘typename Visitor::result_type boost::detail::variant::visitation_impl_invoke(int, Visitor&, VoidPtrCV, T*, NoBackupFlag, int) [with Visitor = boost::detail::variant::invoke_visitor<boost::detail::variant::comparer<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::detail::variant::equal_comp> >; VoidPtrCV = const void*; T = boost::recursive_wrapper<libdocplus::ArrayWrapper>; NoBackupFlag = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >::has_fallback_type_; typename Visitor::result_type = bool]’
/usr/local/include/boost/variant/detail/visitation_impl.hpp:256:5:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/c++/4.8/bits/hashtable_policy.h:1470:23:   required from ‘bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::__hash_code, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::__node_type*) const [with _Key = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; _Value = std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _H1 = std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, true>; std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::__hash_code = long unsigned int; std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::__node_type = std::__detail::_Hash_node<std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >, true>]’
/usr/include/c++/4.8/bits/hashtable.h:1165:4:   required from ‘std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_base* std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code) const [with _Key = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; _Value = std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _Alloc = std::allocator<std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _H1 = std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_base = std::__detail::_Hash_node_base; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type = long unsigned int; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::key_type = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code = long unsigned int]’
/usr/include/c++/4.8/bits/hashtable.h:604:65:   required from ‘std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type* std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_find_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code) const [with _Key = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; _Value = std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _Alloc = std::allocator<std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _H1 = std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type = std::__detail::_Hash_node<std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >, true>; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type = long unsigned int; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::key_type = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code = long unsigned int]’
/usr/include/c++/4.8/bits/hashtable_policy.h:515:60:   required from ‘std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::operator[](std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::key_type&&) [with _Key = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; _Pair = std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _Alloc = std::allocator<std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > > >; _Equal = std::equal_to<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _H1 = std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>; std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::mapped_type = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::key_type = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >]’
/usr/include/c++/4.8/bits/unordered_map.h:600:20:   required from ‘std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::mapped_type& std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::operator[](std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::key_type&&) [with _Key = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; _Tp = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; _Hash = std::hash<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _Pred = std::equal_to<boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > >; _Alloc = std::allocator<std::pair<const boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >, boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> > > >; std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::mapped_type = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >; std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::key_type = boost::variant<bool, int, double, std::vector<unsigned char>, std::vector<unsigned char>, std::vector<unsigned char>, libdocplus::Null, boost::recursive_wrapper<libdocplus::DictionaryWrapper>, boost::recursive_wrapper<libdocplus::ArrayWrapper> >]’
main.cpp:45:19:   required from here
/usr/local/include/boost/variant/variant.hpp:966:20: error: no match for ‘operator==’ (operand types are ‘const libdocplus::ArrayWrapper’ and ‘const libdocplus::ArrayWrapper’)
         return lhs == rhs;
                    ^
/usr/local/include/boost/variant/variant.hpp:966:20: note: candidate is:
In file included from /usr/local/include/boost/variant/variant.hpp:42:0,
                 from /usr/local/include/boost/variant.hpp:17,
                 from main.cpp:3:
/usr/local/include/boost/blank.hpp:58:13: note: bool boost::operator==(const boost::blank&, const boost::blank&)
 inline bool operator==(const blank&, const blank&)
             ^
/usr/local/include/boost/blank.hpp:58:13: note:   no known conversion for argument 1 from ‘const libdocplus::ArrayWrapper’ to ‘const boost::blank&’
