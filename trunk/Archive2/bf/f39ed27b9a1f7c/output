main.cpp: In instantiation of 'void set_f(std::false_type, F&&) [with F = Y; std::false_type = std::integral_constant<bool, false>]':
main.cpp:125:61:   required from 'void set_i(types<>, F&&) [with F = Y]'
main.cpp:174:46:   required from 'void set(F&&) [with Sig = {}; F = Y]'
main.cpp:212:14:   required from here
main.cpp:120:5: error: static assertion failed: Cannot use no-template-parameter call with an overloaded functor: specify the signature
     static_assert( has_deducible_signature<F>::value, "Cannot use no-template-parameter call with an overloaded functor: specify the signature" );
     ^
