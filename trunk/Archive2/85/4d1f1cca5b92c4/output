In file included from main.cpp:2:
In file included from /usr/local/include/boost/fusion/adapted.hpp:17:
In file included from /usr/local/include/boost/fusion/adapted/struct.hpp:17:
In file included from /usr/local/include/boost/fusion/adapted/struct/define_assoc_struct.hpp:12:
In file included from /usr/local/include/boost/fusion/adapted/struct/detail/define_struct.hpp:12:
In file included from /usr/local/include/boost/fusion/sequence/intrinsic/begin.hpp:17:
In file included from /usr/local/include/boost/fusion/sequence/intrinsic/detail/segmented_begin.hpp:12:
In file included from /usr/local/include/boost/fusion/view/iterator_range.hpp:10:
In file included from /usr/local/include/boost/fusion/view/iterator_range/iterator_range.hpp:21:
In file included from /usr/local/include/boost/fusion/view/iterator_range/detail/segments_impl.hpp:13:
In file included from /usr/local/include/boost/fusion/view/iterator_range/detail/segmented_iterator_range.hpp:19:
In file included from /usr/local/include/boost/fusion/algorithm/transformation/push_back.hpp:11:
In file included from /usr/local/include/boost/fusion/view/joint_view/joint_view.hpp:15:
/usr/local/include/boost/fusion/sequence/intrinsic/size.hpp:33:49: error: no type named 'size' in 'boost::spirit::unused_type'
            struct unsegmented_size : Sequence::size {};
                                      ~~~~~~~~~~^~~~
/usr/local/include/boost/fusion/sequence/intrinsic/size.hpp:37:17: note: in instantiation of template class 'boost::fusion::extension::size_impl<boost::fusion::non_fusion_tag>::unsegmented_size<boost::spirit::unused_type>' requested here
              : mpl::if_<
                ^
/usr/local/include/boost/fusion/sequence/intrinsic/size.hpp:69:15: note: in instantiation of template class 'boost::fusion::extension::size_impl<boost::fusion::non_fusion_tag>::apply<boost::spirit::unused_type>' requested here
            : extension::size_impl<typename detail::tag_of<Sequence>::type>::
              ^
/usr/local/include/boost/spirit/home/support/argument.hpp:99:36: note: in instantiation of template class 'boost::fusion::result_of::size<boost::spirit::unused_type>' requested here
                fusion::result_of::size<Sequence>::type
                                   ^
/usr/local/include/boost/spirit/home/support/argument.hpp:118:40: note: in instantiation of template class 'boost::spirit::result_of::get_arg<boost::spirit::unused_type, 0>' requested here
        struct get_arg<Sequence&, N> : get_arg<Sequence, N>
                                       ^
/usr/local/include/boost/spirit/home/support/argument.hpp:166:41: note: in instantiation of template class 'boost::spirit::result_of::get_arg<boost::spirit::unused_type &, 0>' requested here
            typedef typename result_of::get_arg<arg_type, N>::type type;
                                        ^
/usr/local/include/boost/phoenix/core/v2_eval.hpp:29:15: note: (skipping 90 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)
            : Eval::template result<typename proto::detail::uncvref<Env>::type>
              ^
/usr/local/include/boost/function/function_template.hpp:1124:5: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::function<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
    self_type(f).swap(*this);
    ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:182:19: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::operator=<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
            lhs.f = detail::bind_parser<Auto>(
                  ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:220:13: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::define<mpl_::bool_<false>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
            define<mpl::false_>(*this, expr, traits::matches<qi::domain, Expr>());
            ^
main.cpp:21:20: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::operator=<boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
        start_elem = 
                   ^
main.cpp:36:40: note: in instantiation of member function 'json_start_elem_grammar_object<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, char>::json_start_elem_grammar_object' requested here
    json_start_elem_grammar_object<It> p;
                                       ^
In file included from main.cpp:2:
In file included from /usr/local/include/boost/fusion/adapted.hpp:17:
In file included from /usr/local/include/boost/fusion/adapted/struct.hpp:17:
In file included from /usr/local/include/boost/fusion/adapted/struct/define_assoc_struct.hpp:12:
In file included from /usr/local/include/boost/fusion/adapted/struct/detail/define_struct.hpp:12:
In file included from /usr/local/include/boost/fusion/sequence/intrinsic/begin.hpp:17:
In file included from /usr/local/include/boost/fusion/sequence/intrinsic/detail/segmented_begin.hpp:12:
In file included from /usr/local/include/boost/fusion/view/iterator_range.hpp:10:
In file included from /usr/local/include/boost/fusion/view/iterator_range/iterator_range.hpp:21:
In file included from /usr/local/include/boost/fusion/view/iterator_range/detail/segments_impl.hpp:13:
In file included from /usr/local/include/boost/fusion/view/iterator_range/detail/segmented_iterator_range.hpp:19:
In file included from /usr/local/include/boost/fusion/algorithm/transformation/push_back.hpp:11:
In file included from /usr/local/include/boost/fusion/view/joint_view/joint_view.hpp:15:
/usr/local/include/boost/fusion/sequence/intrinsic/size.hpp:74:39: error: no type named 'type' in 'boost::fusion::extension::size_impl<boost::fusion::non_fusion_tag>::apply<boost::spirit::unused_type>'
            template apply<Sequence>::type size_application;
            ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
/usr/local/include/boost/spirit/home/support/argument.hpp:99:36: note: in instantiation of template class 'boost::fusion::result_of::size<boost::spirit::unused_type>' requested here
                fusion::result_of::size<Sequence>::type
                                   ^
/usr/local/include/boost/spirit/home/support/argument.hpp:118:40: note: in instantiation of template class 'boost::spirit::result_of::get_arg<boost::spirit::unused_type, 0>' requested here
        struct get_arg<Sequence&, N> : get_arg<Sequence, N>
                                       ^
/usr/local/include/boost/spirit/home/support/argument.hpp:166:41: note: in instantiation of template class 'boost::spirit::result_of::get_arg<boost::spirit::unused_type &, 0>' requested here
            typedef typename result_of::get_arg<arg_type, N>::type type;
                                        ^
/usr/local/include/boost/phoenix/core/v2_eval.hpp:29:15: note: in instantiation of template class 'boost::spirit::argument<0>::result<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, boost::spirit::unused_type &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> >' requested here
            : Eval::template result<typename proto::detail::uncvref<Env>::type>
              ^
/usr/local/include/boost/proto/detail/poly_function.hpp:205:31: note: in instantiation of template class 'boost::phoenix::v2_eval::result<boost::phoenix::v2_eval (boost::spirit::argument<0>, boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, boost::spirit::unused_type &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &)>' requested here
        typedef typename Fun::template result<Sig>::type result_type;
                              ^
/usr/local/include/boost/proto/transform/call.hpp:246:38: note: (skipping 88 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)
            typedef typename detail::poly_function_traits<Fun, Fun(a0, a1)>::result_type result_type;
                                     ^
/usr/local/include/boost/function/function_template.hpp:1124:5: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::function<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
    self_type(f).swap(*this);
    ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:182:19: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::operator=<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
            lhs.f = detail::bind_parser<Auto>(
                  ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:220:13: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::define<mpl_::bool_<false>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
            define<mpl::false_>(*this, expr, traits::matches<qi::domain, Expr>());
            ^
main.cpp:21:20: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::operator=<boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
        start_elem = 
                   ^
main.cpp:36:40: note: in instantiation of member function 'json_start_elem_grammar_object<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, char>::json_start_elem_grammar_object' requested here
    json_start_elem_grammar_object<It> p;
                                       ^
In file included from main.cpp:2:
In file included from /usr/local/include/boost/fusion/adapted.hpp:17:
In file included from /usr/local/include/boost/fusion/adapted/struct.hpp:19:
In file included from /usr/local/include/boost/fusion/adapted/struct/define_struct_inline.hpp:12:
In file included from /usr/local/include/boost/fusion/adapted/struct/detail/define_struct_inline.hpp:50:
In file included from /usr/local/include/boost/fusion/sequence/intrinsic/at_c.hpp:10:
/usr/local/include/boost/fusion/sequence/intrinsic/at.hpp:62:15: error: implicit instantiation of undefined template 'boost::fusion::extension::at_impl<boost::fusion::non_fusion_tag>::apply<boost::spirit::unused_type, mpl_::int_<0> >'
            : extension::at_impl<typename detail::tag_of<Sequence>::type>::
              ^
/usr/local/include/boost/fusion/sequence/intrinsic/at.hpp:68:15: note: in instantiation of template class 'boost::fusion::result_of::at<boost::spirit::unused_type, mpl_::int_<0> >' requested here
            : at<Sequence, mpl::int_<N> >
              ^
/usr/local/include/boost/spirit/home/support/argument.hpp:108:36: note: in instantiation of template class 'boost::fusion::result_of::at_c<boost::spirit::unused_type, 0>' requested here
                fusion::result_of::at_c<Sequence, N>::type
                                   ^
/usr/local/include/boost/spirit/home/support/argument.hpp:118:40: note: in instantiation of template class 'boost::spirit::result_of::get_arg<boost::spirit::unused_type, 0>' requested here
        struct get_arg<Sequence&, N> : get_arg<Sequence, N>
                                       ^
/usr/local/include/boost/spirit/home/support/argument.hpp:166:41: note: in instantiation of template class 'boost::spirit::result_of::get_arg<boost::spirit::unused_type &, 0>' requested here
            typedef typename result_of::get_arg<arg_type, N>::type type;
                                        ^
/usr/local/include/boost/phoenix/core/v2_eval.hpp:29:15: note: in instantiation of template class 'boost::spirit::argument<0>::result<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, boost::spirit::unused_type &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> >' requested here
            : Eval::template result<typename proto::detail::uncvref<Env>::type>
              ^
/usr/local/include/boost/proto/detail/poly_function.hpp:205:31: note: (skipping 89 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)
        typedef typename Fun::template result<Sig>::type result_type;
                              ^
/usr/local/include/boost/function/function_template.hpp:1124:5: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::function<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
    self_type(f).swap(*this);
    ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:182:19: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::operator=<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
            lhs.f = detail::bind_parser<Auto>(
                  ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:220:13: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::define<mpl_::bool_<false>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
            define<mpl::false_>(*this, expr, traits::matches<qi::domain, Expr>());
            ^
main.cpp:21:20: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::operator=<boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
        start_elem = 
                   ^
main.cpp:36:40: note: in instantiation of member function 'json_start_elem_grammar_object<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, char>::json_start_elem_grammar_object' requested here
    json_start_elem_grammar_object<It> p;
                                       ^
/usr/local/include/boost/fusion/sequence/intrinsic/at.hpp:32:20: note: template is declared here
            struct apply;
                   ^
In file included from main.cpp:3:
In file included from /usr/local/include/boost/spirit/include/qi.hpp:16:
In file included from /usr/local/include/boost/spirit/home/qi.hpp:15:
In file included from /usr/local/include/boost/spirit/home/qi/auto.hpp:15:
In file included from /usr/local/include/boost/spirit/home/qi/auto/auto.hpp:13:
In file included from /usr/local/include/boost/spirit/home/support/common_terminals.hpp:15:
In file included from /usr/local/include/boost/spirit/home/support/terminal.hpp:17:
In file included from /usr/local/include/boost/spirit/include/phoenix_function.hpp:15:
In file included from /usr/local/include/boost/phoenix/function.hpp:11:
In file included from /usr/local/include/boost/phoenix/function/function.hpp:13:
In file included from /usr/local/include/boost/phoenix/core/detail/function_eval.hpp:14:
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/function_eval.hpp:12:
/usr/local/include/boost/phoenix/core/detail/preprocessed/function_eval_10.hpp:69:155: error: no type named 'type' in 'boost::result_of<boost::phoenix::evaluator (const boost::phoenix::actor<boost::spirit::argument<0> > &, const boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, boost::spirit::unused_type &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &> &)>'
                typedef typename boost::add_reference< typename boost::add_const< typename boost::result_of< boost::phoenix::evaluator( A0 , Context ) >::type >::type >::type a0;
                                                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
/usr/local/include/boost/phoenix/core/detail/preprocessed/function_eval_10.hpp:76:22: note: in instantiation of template class 'boost::phoenix::detail::function_eval::result<boost::phoenix::detail::function_eval (const boost::spirit::terminal<boost::spirit::tag::lit> &, const boost::phoenix::actor<boost::spirit::argument<0> > &, const boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, boost::spirit::unused_type &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &> &)>' requested here
            typename result<
                     ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/function_eval_10.hpp:83:13: note: while substituting deduced template arguments into function template 'operator()' [with F = boost::spirit::terminal<boost::spirit::tag::lit>, A0 = const boost::phoenix::actor<boost::spirit::argument<0> >, Context = boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, boost::spirit::unused_type &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &>]
            operator()(F const & f, A0 & a0, Context const & ctx) const
            ^
/usr/local/include/boost/utility/detail/result_of_iterate.hpp:138:8: note: during template argument deduction for class template partial specialization 'cpp0x_result_of_impl<type-parameter-0-0 (type-parameter-0-1, type-parameter-0-2, type-parameter-0-3), typename result_of_always_void<decltype(boost::declval<F>()(boost::declval<T0>(), boost::declval<T1>(), boost::declval<T2>()))>::type>' [with F = boost::phoenix::detail::function_eval, T0 = const boost::spirit::terminal<boost::spirit::tag::lit> &, T1 = const boost::phoenix::actor<boost::spirit::argument<0> > &, T2 = boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, boost::spirit::unused_type &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &>]
struct cpp0x_result_of_impl<F(BOOST_PP_ENUM_PARAMS(BOOST_PP_ITERATION(),T)),
       ^
/usr/local/include/boost/utility/detail/result_of_iterate.hpp:43:7: note: in instantiation of template class 'boost::detail::cpp0x_result_of<boost::phoenix::detail::function_eval (const boost::spirit::terminal<boost::spirit::tag::lit> &, const boost::phoenix::actor<boost::spirit::argument<0> > &, boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, boost::spirit::unused_type &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &>)>' requested here
    : detail::cpp0x_result_of<F(BOOST_RESULT_OF_ARGS)> { };
      ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/call_10.hpp:62:33: note: in instantiation of template class 'boost::result_of<boost::phoenix::detail::function_eval (const boost::spirit::terminal<boost::spirit::tag::lit> &, const boost::phoenix::actor<boost::spirit::argument<0> > &, boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, boost::spirit::unused_type &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &>)>' requested here
                typename boost::result_of<
                                ^
/usr/local/include/boost/phoenix/core/call.hpp:61:15: note: (skipping 68 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)
            : detail::call_impl<Fun, Expr, State, Data>
              ^
/usr/local/include/boost/function/function_template.hpp:1124:5: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::function<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
    self_type(f).swap(*this);
    ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:182:19: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::operator=<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
            lhs.f = detail::bind_parser<Auto>(
                  ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:220:13: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::define<mpl_::bool_<false>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
            define<mpl::false_>(*this, expr, traits::matches<qi::domain, Expr>());
            ^
main.cpp:21:20: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::operator=<boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
        start_elem = 
                   ^
main.cpp:36:40: note: in instantiation of member function 'json_start_elem_grammar_object<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, char>::json_start_elem_grammar_object' requested here
    json_start_elem_grammar_object<It> p;
                                       ^
In file included from main.cpp:3:
In file included from /usr/local/include/boost/spirit/include/qi.hpp:16:
In file included from /usr/local/include/boost/spirit/home/qi.hpp:14:
In file included from /usr/local/include/boost/spirit/home/qi/action.hpp:14:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:14:
In file included from /usr/local/include/boost/spirit/home/qi/meta_compiler.hpp:15:
In file included from /usr/local/include/boost/spirit/home/qi/domain.hpp:17:
/usr/local/include/boost/spirit/home/support/argument.hpp:166:63: error: no type named 'type' in 'boost::spirit::result_of::get_arg<boost::spirit::unused_type &, 0>'
            typedef typename result_of::get_arg<arg_type, N>::type type;
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
/usr/local/include/boost/phoenix/core/v2_eval.hpp:29:15: note: in instantiation of template class 'boost::spirit::argument<0>::result<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, boost::spirit::unused_type &, const boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> >' requested here
            : Eval::template result<typename proto::detail::uncvref<Env>::type>
              ^
/usr/local/include/boost/proto/detail/poly_function.hpp:205:31: note: in instantiation of template class 'boost::phoenix::v2_eval::result<boost::phoenix::v2_eval (boost::spirit::argument<0>, boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, boost::spirit::unused_type &, const boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &)>' requested here
        typedef typename Fun::template result<Sig>::type result_type;
                              ^
/usr/local/include/boost/proto/transform/call.hpp:246:38: note: in instantiation of template class 'boost::proto::detail::poly_function_traits<boost::phoenix::v2_eval, boost::phoenix::v2_eval (boost::spirit::argument<0>, boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, boost::spirit::unused_type &, const boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &), mpl_::size_t<3> >' requested here
            typedef typename detail::poly_function_traits<Fun, Fun(a0, a1)>::result_type result_type;
                                     ^
/usr/local/include/boost/proto/transform/call.hpp:312:13: note: in instantiation of template class 'boost::proto::call<boost::phoenix::v2_eval (boost::proto::make<boost::spirit::argument<0> ()>, boost::proto::call<boost::phoenix::functional::env (boost::proto::_state)>)>::impl2<const boost::spirit::argument<0> &, boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, boost::spirit::unused_type &, const boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &>, const boost::phoenix::default_actions &, false>' requested here
          : impl2<Expr, State, Data, detail::is_transform_<Fun>::value>
            ^
/usr/local/include/boost/proto/transform/call.hpp:268:35: note: in instantiation of template class 'boost::proto::call<boost::phoenix::v2_eval (boost::proto::make<boost::spirit::argument<0> ()>, boost::proto::call<boost::phoenix::functional::env (boost::proto::_state)>)>::impl<const boost::spirit::argument<0> &, boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, boost::spirit::unused_type &, const boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &>, const boost::phoenix::default_actions &>' requested here
            typedef typename Fun::template impl<a0, a1, Data>::result_type result_type;
                                  ^
/usr/local/include/boost/proto/transform/call.hpp:312:13: note: (skipping 85 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)
          : impl2<Expr, State, Data, detail::is_transform_<Fun>::value>
            ^
/usr/local/include/boost/function/function_template.hpp:1124:5: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::function<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
    self_type(f).swap(*this);
    ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:182:19: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::operator=<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
            lhs.f = detail::bind_parser<Auto>(
                  ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:220:13: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::define<mpl_::bool_<false>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
            define<mpl::false_>(*this, expr, traits::matches<qi::domain, Expr>());
            ^
main.cpp:21:20: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::operator=<boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
        start_elem = 
                   ^
main.cpp:36:40: note: in instantiation of member function 'json_start_elem_grammar_object<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, char>::json_start_elem_grammar_object' requested here
    json_start_elem_grammar_object<It> p;
                                       ^
In file included from main.cpp:3:
In file included from /usr/local/include/boost/spirit/include/qi.hpp:16:
In file included from /usr/local/include/boost/spirit/home/qi.hpp:15:
In file included from /usr/local/include/boost/spirit/home/qi/auto.hpp:15:
In file included from /usr/local/include/boost/spirit/home/qi/auto/auto.hpp:13:
In file included from /usr/local/include/boost/spirit/home/support/common_terminals.hpp:15:
In file included from /usr/local/include/boost/spirit/home/support/terminal.hpp:17:
In file included from /usr/local/include/boost/spirit/include/phoenix_function.hpp:15:
In file included from /usr/local/include/boost/phoenix/function.hpp:11:
In file included from /usr/local/include/boost/phoenix/function/function.hpp:13:
In file included from /usr/local/include/boost/phoenix/core/detail/function_eval.hpp:14:
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/function_eval.hpp:12:
/usr/local/include/boost/phoenix/core/detail/preprocessed/function_eval_10.hpp:69:155: error: no type named 'type' in 'boost::result_of<boost::phoenix::evaluator (const boost::phoenix::actor<boost::spirit::argument<0> > &, const boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, boost::spirit::unused_type &, const boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &> &)>'
                typedef typename boost::add_reference< typename boost::add_const< typename boost::result_of< boost::phoenix::evaluator( A0 , Context ) >::type >::type >::type a0;
                                                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
/usr/local/include/boost/phoenix/core/detail/preprocessed/function_eval_10.hpp:76:22: note: in instantiation of template class 'boost::phoenix::detail::function_eval::result<boost::phoenix::detail::function_eval (const boost::spirit::terminal<boost::spirit::tag::lit> &, const boost::phoenix::actor<boost::spirit::argument<0> > &, const boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, boost::spirit::unused_type &, const boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &> &)>' requested here
            typename result<
                     ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/function_eval_10.hpp:83:13: note: while substituting deduced template arguments into function template 'operator()' [with F = boost::spirit::terminal<boost::spirit::tag::lit>, A0 = const boost::phoenix::actor<boost::spirit::argument<0> >, Context = boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, boost::spirit::unused_type &, const boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &>]
            operator()(F const & f, A0 & a0, Context const & ctx) const
            ^
/usr/local/include/boost/utility/detail/result_of_iterate.hpp:138:8: note: during template argument deduction for class template partial specialization 'cpp0x_result_of_impl<type-parameter-0-0 (type-parameter-0-1, type-parameter-0-2, type-parameter-0-3), typename result_of_always_void<decltype(boost::declval<F>()(boost::declval<T0>(), boost::declval<T1>(), boost::declval<T2>()))>::type>' [with F = boost::phoenix::detail::function_eval, T0 = const boost::spirit::terminal<boost::spirit::tag::lit> &, T1 = const boost::phoenix::actor<boost::spirit::argument<0> > &, T2 = boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, boost::spirit::unused_type &, const boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &>]
struct cpp0x_result_of_impl<F(BOOST_PP_ENUM_PARAMS(BOOST_PP_ITERATION(),T)),
       ^
/usr/local/include/boost/utility/detail/result_of_iterate.hpp:43:7: note: in instantiation of template class 'boost::detail::cpp0x_result_of<boost::phoenix::detail::function_eval (const boost::spirit::terminal<boost::spirit::tag::lit> &, const boost::phoenix::actor<boost::spirit::argument<0> > &, boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, boost::spirit::unused_type &, const boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &>)>' requested here
    : detail::cpp0x_result_of<F(BOOST_RESULT_OF_ARGS)> { };
      ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/call_10.hpp:62:33: note: in instantiation of template class 'boost::result_of<boost::phoenix::detail::function_eval (const boost::spirit::terminal<boost::spirit::tag::lit> &, const boost::phoenix::actor<boost::spirit::argument<0> > &, boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, boost::spirit::unused_type &, const boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &>)>' requested here
                typename boost::result_of<
                                ^
/usr/local/include/boost/phoenix/core/call.hpp:61:15: note: (skipping 68 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)
            : detail::call_impl<Fun, Expr, State, Data>
              ^
/usr/local/include/boost/function/function_template.hpp:1124:5: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::function<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
    self_type(f).swap(*this);
    ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:182:19: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::operator=<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
            lhs.f = detail::bind_parser<Auto>(
                  ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:220:13: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::define<mpl_::bool_<false>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
            define<mpl::false_>(*this, expr, traits::matches<qi::domain, Expr>());
            ^
main.cpp:21:20: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::operator=<boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
        start_elem = 
                   ^
main.cpp:36:40: note: in instantiation of member function 'json_start_elem_grammar_object<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, char>::json_start_elem_grammar_object' requested here
    json_start_elem_grammar_object<It> p;
                                       ^
In file included from main.cpp:2:
In file included from /usr/local/include/boost/fusion/adapted.hpp:17:
In file included from /usr/local/include/boost/fusion/adapted/struct.hpp:17:
In file included from /usr/local/include/boost/fusion/adapted/struct/define_assoc_struct.hpp:12:
In file included from /usr/local/include/boost/fusion/adapted/struct/detail/define_struct.hpp:12:
In file included from /usr/local/include/boost/fusion/sequence/intrinsic/begin.hpp:17:
In file included from /usr/local/include/boost/fusion/sequence/intrinsic/detail/segmented_begin.hpp:12:
In file included from /usr/local/include/boost/fusion/view/iterator_range.hpp:10:
In file included from /usr/local/include/boost/fusion/view/iterator_range/iterator_range.hpp:21:
In file included from /usr/local/include/boost/fusion/view/iterator_range/detail/segments_impl.hpp:13:
In file included from /usr/local/include/boost/fusion/view/iterator_range/detail/segmented_iterator_range.hpp:19:
In file included from /usr/local/include/boost/fusion/algorithm/transformation/push_back.hpp:11:
In file included from /usr/local/include/boost/fusion/view/joint_view/joint_view.hpp:15:
/usr/local/include/boost/fusion/sequence/intrinsic/size.hpp:33:49: error: no type named 'size' in 'boost::spirit::unused_type'
            struct unsegmented_size : Sequence::size {};
                                      ~~~~~~~~~~^~~~
/usr/local/include/boost/fusion/sequence/intrinsic/size.hpp:37:17: note: in instantiation of template class 'boost::fusion::extension::size_impl<boost::fusion::non_fusion_tag>::unsegmented_size<const boost::spirit::unused_type>' requested here
              : mpl::if_<
                ^
/usr/local/include/boost/fusion/sequence/intrinsic/size.hpp:69:15: note: in instantiation of template class 'boost::fusion::extension::size_impl<boost::fusion::non_fusion_tag>::apply<const boost::spirit::unused_type>' requested here
            : extension::size_impl<typename detail::tag_of<Sequence>::type>::
              ^
/usr/local/include/boost/spirit/home/support/argument.hpp:99:36: note: in instantiation of template class 'boost::fusion::result_of::size<const boost::spirit::unused_type>' requested here
                fusion::result_of::size<Sequence>::type
                                   ^
/usr/local/include/boost/spirit/home/support/argument.hpp:118:40: note: in instantiation of template class 'boost::spirit::result_of::get_arg<const boost::spirit::unused_type, 0>' requested here
        struct get_arg<Sequence&, N> : get_arg<Sequence, N>
                                       ^
/usr/local/include/boost/spirit/home/support/argument.hpp:166:41: note: in instantiation of template class 'boost::spirit::result_of::get_arg<const boost::spirit::unused_type &, 0>' requested here
            typedef typename result_of::get_arg<arg_type, N>::type type;
                                        ^
/usr/local/include/boost/phoenix/core/v2_eval.hpp:29:15: note: (skipping 90 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)
            : Eval::template result<typename proto::detail::uncvref<Env>::type>
              ^
/usr/local/include/boost/function/function_template.hpp:1124:5: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::function<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
    self_type(f).swap(*this);
    ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:182:19: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::operator=<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
            lhs.f = detail::bind_parser<Auto>(
                  ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:220:13: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::define<mpl_::bool_<false>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
            define<mpl::false_>(*this, expr, traits::matches<qi::domain, Expr>());
            ^
main.cpp:21:20: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::operator=<boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
        start_elem = 
                   ^
main.cpp:36:40: note: in instantiation of member function 'json_start_elem_grammar_object<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, char>::json_start_elem_grammar_object' requested here
    json_start_elem_grammar_object<It> p;
                                       ^
In file included from main.cpp:2:
In file included from /usr/local/include/boost/fusion/adapted.hpp:17:
In file included from /usr/local/include/boost/fusion/adapted/struct.hpp:17:
In file included from /usr/local/include/boost/fusion/adapted/struct/define_assoc_struct.hpp:12:
In file included from /usr/local/include/boost/fusion/adapted/struct/detail/define_struct.hpp:12:
In file included from /usr/local/include/boost/fusion/sequence/intrinsic/begin.hpp:17:
In file included from /usr/local/include/boost/fusion/sequence/intrinsic/detail/segmented_begin.hpp:12:
In file included from /usr/local/include/boost/fusion/view/iterator_range.hpp:10:
In file included from /usr/local/include/boost/fusion/view/iterator_range/iterator_range.hpp:21:
In file included from /usr/local/include/boost/fusion/view/iterator_range/detail/segments_impl.hpp:13:
In file included from /usr/local/include/boost/fusion/view/iterator_range/detail/segmented_iterator_range.hpp:19:
In file included from /usr/local/include/boost/fusion/algorithm/transformation/push_back.hpp:11:
In file included from /usr/local/include/boost/fusion/view/joint_view/joint_view.hpp:15:
/usr/local/include/boost/fusion/sequence/intrinsic/size.hpp:74:39: error: no type named 'type' in 'boost::fusion::extension::size_impl<boost::fusion::non_fusion_tag>::apply<const boost::spirit::unused_type>'
            template apply<Sequence>::type size_application;
            ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
/usr/local/include/boost/spirit/home/support/argument.hpp:99:36: note: in instantiation of template class 'boost::fusion::result_of::size<const boost::spirit::unused_type>' requested here
                fusion::result_of::size<Sequence>::type
                                   ^
/usr/local/include/boost/spirit/home/support/argument.hpp:118:40: note: in instantiation of template class 'boost::spirit::result_of::get_arg<const boost::spirit::unused_type, 0>' requested here
        struct get_arg<Sequence&, N> : get_arg<Sequence, N>
                                       ^
/usr/local/include/boost/spirit/home/support/argument.hpp:166:41: note: in instantiation of template class 'boost::spirit::result_of::get_arg<const boost::spirit::unused_type &, 0>' requested here
            typedef typename result_of::get_arg<arg_type, N>::type type;
                                        ^
/usr/local/include/boost/phoenix/core/v2_eval.hpp:29:15: note: in instantiation of template class 'boost::spirit::argument<0>::result<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, const boost::spirit::unused_type &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> >' requested here
            : Eval::template result<typename proto::detail::uncvref<Env>::type>
              ^
/usr/local/include/boost/proto/detail/poly_function.hpp:205:31: note: in instantiation of template class 'boost::phoenix::v2_eval::result<boost::phoenix::v2_eval (boost::spirit::argument<0>, boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, const boost::spirit::unused_type &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &)>' requested here
        typedef typename Fun::template result<Sig>::type result_type;
                              ^
/usr/local/include/boost/proto/transform/call.hpp:246:38: note: (skipping 88 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)
            typedef typename detail::poly_function_traits<Fun, Fun(a0, a1)>::result_type result_type;
                                     ^
/usr/local/include/boost/function/function_template.hpp:1124:5: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::function<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
    self_type(f).swap(*this);
    ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:182:19: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::operator=<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
            lhs.f = detail::bind_parser<Auto>(
                  ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:220:13: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::define<mpl_::bool_<false>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
            define<mpl::false_>(*this, expr, traits::matches<qi::domain, Expr>());
            ^
main.cpp:21:20: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::operator=<boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
        start_elem = 
                   ^
main.cpp:36:40: note: in instantiation of member function 'json_start_elem_grammar_object<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, char>::json_start_elem_grammar_object' requested here
    json_start_elem_grammar_object<It> p;
                                       ^
In file included from main.cpp:2:
In file included from /usr/local/include/boost/fusion/adapted.hpp:17:
In file included from /usr/local/include/boost/fusion/adapted/struct.hpp:19:
In file included from /usr/local/include/boost/fusion/adapted/struct/define_struct_inline.hpp:12:
In file included from /usr/local/include/boost/fusion/adapted/struct/detail/define_struct_inline.hpp:50:
In file included from /usr/local/include/boost/fusion/sequence/intrinsic/at_c.hpp:10:
/usr/local/include/boost/fusion/sequence/intrinsic/at.hpp:62:15: error: implicit instantiation of undefined template 'boost::fusion::extension::at_impl<boost::fusion::non_fusion_tag>::apply<const boost::spirit::unused_type, mpl_::int_<0> >'
            : extension::at_impl<typename detail::tag_of<Sequence>::type>::
              ^
/usr/local/include/boost/fusion/sequence/intrinsic/at.hpp:68:15: note: in instantiation of template class 'boost::fusion::result_of::at<const boost::spirit::unused_type, mpl_::int_<0> >' requested here
            : at<Sequence, mpl::int_<N> >
              ^
/usr/local/include/boost/spirit/home/support/argument.hpp:108:36: note: in instantiation of template class 'boost::fusion::result_of::at_c<const boost::spirit::unused_type, 0>' requested here
                fusion::result_of::at_c<Sequence, N>::type
                                   ^
/usr/local/include/boost/spirit/home/support/argument.hpp:118:40: note: in instantiation of template class 'boost::spirit::result_of::get_arg<const boost::spirit::unused_type, 0>' requested here
        struct get_arg<Sequence&, N> : get_arg<Sequence, N>
                                       ^
/usr/local/include/boost/spirit/home/support/argument.hpp:166:41: note: in instantiation of template class 'boost::spirit::result_of::get_arg<const boost::spirit::unused_type &, 0>' requested here
            typedef typename result_of::get_arg<arg_type, N>::type type;
                                        ^
/usr/local/include/boost/phoenix/core/v2_eval.hpp:29:15: note: in instantiation of template class 'boost::spirit::argument<0>::result<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, const boost::spirit::unused_type &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> >' requested here
            : Eval::template result<typename proto::detail::uncvref<Env>::type>
              ^
/usr/local/include/boost/proto/detail/poly_function.hpp:205:31: note: (skipping 89 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)
        typedef typename Fun::template result<Sig>::type result_type;
                              ^
/usr/local/include/boost/function/function_template.hpp:1124:5: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::function<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
    self_type(f).swap(*this);
    ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:182:19: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::operator=<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
            lhs.f = detail::bind_parser<Auto>(
                  ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:220:13: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::define<mpl_::bool_<false>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
            define<mpl::false_>(*this, expr, traits::matches<qi::domain, Expr>());
            ^
main.cpp:21:20: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::operator=<boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
        start_elem = 
                   ^
main.cpp:36:40: note: in instantiation of member function 'json_start_elem_grammar_object<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, char>::json_start_elem_grammar_object' requested here
    json_start_elem_grammar_object<It> p;
                                       ^
/usr/local/include/boost/fusion/sequence/intrinsic/at.hpp:32:20: note: template is declared here
            struct apply;
                   ^
In file included from main.cpp:3:
In file included from /usr/local/include/boost/spirit/include/qi.hpp:16:
In file included from /usr/local/include/boost/spirit/home/qi.hpp:15:
In file included from /usr/local/include/boost/spirit/home/qi/auto.hpp:15:
In file included from /usr/local/include/boost/spirit/home/qi/auto/auto.hpp:13:
In file included from /usr/local/include/boost/spirit/home/support/common_terminals.hpp:15:
In file included from /usr/local/include/boost/spirit/home/support/terminal.hpp:17:
In file included from /usr/local/include/boost/spirit/include/phoenix_function.hpp:15:
In file included from /usr/local/include/boost/phoenix/function.hpp:11:
In file included from /usr/local/include/boost/phoenix/function/function.hpp:13:
In file included from /usr/local/include/boost/phoenix/core/detail/function_eval.hpp:14:
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/function_eval.hpp:12:
/usr/local/include/boost/phoenix/core/detail/preprocessed/function_eval_10.hpp:69:155: error: no type named 'type' in 'boost::result_of<boost::phoenix::evaluator (const boost::phoenix::actor<boost::spirit::argument<0> > &, const boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, const boost::spirit::unused_type &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &> &)>'
                typedef typename boost::add_reference< typename boost::add_const< typename boost::result_of< boost::phoenix::evaluator( A0 , Context ) >::type >::type >::type a0;
                                                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
/usr/local/include/boost/phoenix/core/detail/preprocessed/function_eval_10.hpp:76:22: note: in instantiation of template class 'boost::phoenix::detail::function_eval::result<boost::phoenix::detail::function_eval (const boost::spirit::terminal<boost::spirit::tag::lit> &, const boost::phoenix::actor<boost::spirit::argument<0> > &, const boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, const boost::spirit::unused_type &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &> &)>' requested here
            typename result<
                     ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/function_eval_10.hpp:83:13: note: while substituting deduced template arguments into function template 'operator()' [with F = boost::spirit::terminal<boost::spirit::tag::lit>, A0 = const boost::phoenix::actor<boost::spirit::argument<0> >, Context = boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, const boost::spirit::unused_type &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &>]
            operator()(F const & f, A0 & a0, Context const & ctx) const
            ^
/usr/local/include/boost/utility/detail/result_of_iterate.hpp:138:8: note: during template argument deduction for class template partial specialization 'cpp0x_result_of_impl<type-parameter-0-0 (type-parameter-0-1, type-parameter-0-2, type-parameter-0-3), typename result_of_always_void<decltype(boost::declval<F>()(boost::declval<T0>(), boost::declval<T1>(), boost::declval<T2>()))>::type>' [with F = boost::phoenix::detail::function_eval, T0 = const boost::spirit::terminal<boost::spirit::tag::lit> &, T1 = const boost::phoenix::actor<boost::spirit::argument<0> > &, T2 = boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, const boost::spirit::unused_type &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &>]
struct cpp0x_result_of_impl<F(BOOST_PP_ENUM_PARAMS(BOOST_PP_ITERATION(),T)),
       ^
/usr/local/include/boost/utility/detail/result_of_iterate.hpp:43:7: note: in instantiation of template class 'boost::detail::cpp0x_result_of<boost::phoenix::detail::function_eval (const boost::spirit::terminal<boost::spirit::tag::lit> &, const boost::phoenix::actor<boost::spirit::argument<0> > &, boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, const boost::spirit::unused_type &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &>)>' requested here
    : detail::cpp0x_result_of<F(BOOST_RESULT_OF_ARGS)> { };
      ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/call_10.hpp:62:33: note: in instantiation of template class 'boost::result_of<boost::phoenix::detail::function_eval (const boost::spirit::terminal<boost::spirit::tag::lit> &, const boost::phoenix::actor<boost::spirit::argument<0> > &, boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, const boost::spirit::unused_type &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &>)>' requested here
                typename boost::result_of<
                                ^
/usr/local/include/boost/phoenix/core/call.hpp:61:15: note: (skipping 68 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)
            : detail::call_impl<Fun, Expr, State, Data>
              ^
/usr/local/include/boost/function/function_template.hpp:1124:5: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::function<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
    self_type(f).swap(*this);
    ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:182:19: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::operator=<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
            lhs.f = detail::bind_parser<Auto>(
                  ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:220:13: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::define<mpl_::bool_<false>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
            define<mpl::false_>(*this, expr, traits::matches<qi::domain, Expr>());
            ^
main.cpp:21:20: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::operator=<boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
        start_elem = 
                   ^
main.cpp:36:40: note: in instantiation of member function 'json_start_elem_grammar_object<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, char>::json_start_elem_grammar_object' requested here
    json_start_elem_grammar_object<It> p;
                                       ^
In file included from main.cpp:3:
In file included from /usr/local/include/boost/spirit/include/qi.hpp:16:
In file included from /usr/local/include/boost/spirit/home/qi.hpp:14:
In file included from /usr/local/include/boost/spirit/home/qi/action.hpp:14:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:14:
In file included from /usr/local/include/boost/spirit/home/qi/meta_compiler.hpp:15:
In file included from /usr/local/include/boost/spirit/home/qi/domain.hpp:17:
/usr/local/include/boost/spirit/home/support/argument.hpp:166:63: error: no type named 'type' in 'boost::spirit::result_of::get_arg<const boost::spirit::unused_type &, 0>'
            typedef typename result_of::get_arg<arg_type, N>::type type;
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
/usr/local/include/boost/phoenix/core/v2_eval.hpp:29:15: note: in instantiation of template class 'boost::spirit::argument<0>::result<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, const boost::spirit::unused_type &, const boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> >' requested here
            : Eval::template result<typename proto::detail::uncvref<Env>::type>
              ^
/usr/local/include/boost/proto/detail/poly_function.hpp:205:31: note: in instantiation of template class 'boost::phoenix::v2_eval::result<boost::phoenix::v2_eval (boost::spirit::argument<0>, boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, const boost::spirit::unused_type &, const boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &)>' requested here
        typedef typename Fun::template result<Sig>::type result_type;
                              ^
/usr/local/include/boost/proto/transform/call.hpp:246:38: note: in instantiation of template class 'boost::proto::detail::poly_function_traits<boost::phoenix::v2_eval, boost::phoenix::v2_eval (boost::spirit::argument<0>, boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, const boost::spirit::unused_type &, const boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &), mpl_::size_t<3> >' requested here
            typedef typename detail::poly_function_traits<Fun, Fun(a0, a1)>::result_type result_type;
                                     ^
/usr/local/include/boost/proto/transform/call.hpp:312:13: note: in instantiation of template class 'boost::proto::call<boost::phoenix::v2_eval (boost::proto::make<boost::spirit::argument<0> ()>, boost::proto::call<boost::phoenix::functional::env (boost::proto::_state)>)>::impl2<const boost::spirit::argument<0> &, boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, const boost::spirit::unused_type &, const boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &>, const boost::phoenix::default_actions &, false>' requested here
          : impl2<Expr, State, Data, detail::is_transform_<Fun>::value>
            ^
/usr/local/include/boost/proto/transform/call.hpp:268:35: note: in instantiation of template class 'boost::proto::call<boost::phoenix::v2_eval (boost::proto::make<boost::spirit::argument<0> ()>, boost::proto::call<boost::phoenix::functional::env (boost::proto::_state)>)>::impl<const boost::spirit::argument<0> &, boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, const boost::spirit::unused_type &, const boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &>, const boost::phoenix::default_actions &>' requested here
            typedef typename Fun::template impl<a0, a1, Data>::result_type result_type;
                                  ^
/usr/local/include/boost/proto/transform/call.hpp:312:13: note: (skipping 85 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)
          : impl2<Expr, State, Data, detail::is_transform_<Fun>::value>
            ^
/usr/local/include/boost/function/function_template.hpp:1124:5: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::function<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
    self_type(f).swap(*this);
    ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:182:19: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::operator=<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
            lhs.f = detail::bind_parser<Auto>(
                  ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:220:13: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::define<mpl_::bool_<false>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
            define<mpl::false_>(*this, expr, traits::matches<qi::domain, Expr>());
            ^
main.cpp:21:20: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::operator=<boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
        start_elem = 
                   ^
main.cpp:36:40: note: in instantiation of member function 'json_start_elem_grammar_object<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, char>::json_start_elem_grammar_object' requested here
    json_start_elem_grammar_object<It> p;
                                       ^
In file included from main.cpp:3:
In file included from /usr/local/include/boost/spirit/include/qi.hpp:16:
In file included from /usr/local/include/boost/spirit/home/qi.hpp:15:
In file included from /usr/local/include/boost/spirit/home/qi/auto.hpp:15:
In file included from /usr/local/include/boost/spirit/home/qi/auto/auto.hpp:13:
In file included from /usr/local/include/boost/spirit/home/support/common_terminals.hpp:15:
In file included from /usr/local/include/boost/spirit/home/support/terminal.hpp:17:
In file included from /usr/local/include/boost/spirit/include/phoenix_function.hpp:15:
In file included from /usr/local/include/boost/phoenix/function.hpp:11:
In file included from /usr/local/include/boost/phoenix/function/function.hpp:13:
In file included from /usr/local/include/boost/phoenix/core/detail/function_eval.hpp:14:
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/function_eval.hpp:12:
/usr/local/include/boost/phoenix/core/detail/preprocessed/function_eval_10.hpp:69:155: error: no type named 'type' in 'boost::result_of<boost::phoenix::evaluator (const boost::phoenix::actor<boost::spirit::argument<0> > &, const boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, const boost::spirit::unused_type &, const boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &> &)>'
                typedef typename boost::add_reference< typename boost::add_const< typename boost::result_of< boost::phoenix::evaluator( A0 , Context ) >::type >::type >::type a0;
                                                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
/usr/local/include/boost/phoenix/core/detail/preprocessed/function_eval_10.hpp:76:22: note: in instantiation of template class 'boost::phoenix::detail::function_eval::result<boost::phoenix::detail::function_eval (const boost::spirit::terminal<boost::spirit::tag::lit> &, const boost::phoenix::actor<boost::spirit::argument<0> > &, const boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, const boost::spirit::unused_type &, const boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &> &)>' requested here
            typename result<
                     ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/function_eval_10.hpp:83:13: note: while substituting deduced template arguments into function template 'operator()' [with F = boost::spirit::terminal<boost::spirit::tag::lit>, A0 = const boost::phoenix::actor<boost::spirit::argument<0> >, Context = boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, const boost::spirit::unused_type &, const boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &>]
            operator()(F const & f, A0 & a0, Context const & ctx) const
            ^
/usr/local/include/boost/utility/detail/result_of_iterate.hpp:138:8: note: during template argument deduction for class template partial specialization 'cpp0x_result_of_impl<type-parameter-0-0 (type-parameter-0-1, type-parameter-0-2, type-parameter-0-3), typename result_of_always_void<decltype(boost::declval<F>()(boost::declval<T0>(), boost::declval<T1>(), boost::declval<T2>()))>::type>' [with F = boost::phoenix::detail::function_eval, T0 = const boost::spirit::terminal<boost::spirit::tag::lit> &, T1 = const boost::phoenix::actor<boost::spirit::argument<0> > &, T2 = boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, const boost::spirit::unused_type &, const boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &>]
struct cpp0x_result_of_impl<F(BOOST_PP_ENUM_PARAMS(BOOST_PP_ITERATION(),T)),
       ^
/usr/local/include/boost/utility/detail/result_of_iterate.hpp:43:7: note: in instantiation of template class 'boost::detail::cpp0x_result_of<boost::phoenix::detail::function_eval (const boost::spirit::terminal<boost::spirit::tag::lit> &, const boost::phoenix::actor<boost::spirit::argument<0> > &, boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, const boost::spirit::unused_type &, const boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &>)>' requested here
    : detail::cpp0x_result_of<F(BOOST_RESULT_OF_ARGS)> { };
      ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/call_10.hpp:62:33: note: in instantiation of template class 'boost::result_of<boost::phoenix::detail::function_eval (const boost::spirit::terminal<boost::spirit::tag::lit> &, const boost::phoenix::actor<boost::spirit::argument<0> > &, boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> > *, const boost::spirit::unused_type &, const boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &>)>' requested here
                typename boost::result_of<
                                ^
/usr/local/include/boost/phoenix/core/call.hpp:61:15: note: (skipping 68 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)
            : detail::call_impl<Fun, Expr, State, Data>
              ^
/usr/local/include/boost/function/function_template.hpp:1124:5: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::function<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
    self_type(f).swap(*this);
    ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:182:19: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::operator=<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
            lhs.f = detail::bind_parser<Auto>(
                  ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:220:13: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::define<mpl_::bool_<false>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
            define<mpl::false_>(*this, expr, traits::matches<qi::domain, Expr>());
            ^
main.cpp:21:20: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::operator=<boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
        start_elem = 
                   ^
main.cpp:36:40: note: in instantiation of member function 'json_start_elem_grammar_object<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, char>::json_start_elem_grammar_object' requested here
    json_start_elem_grammar_object<It> p;
                                       ^
In file included from main.cpp:3:
In file included from /usr/local/include/boost/spirit/include/qi.hpp:16:
In file included from /usr/local/include/boost/spirit/home/qi.hpp:14:
In file included from /usr/local/include/boost/spirit/home/qi/action.hpp:14:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:14:
In file included from /usr/local/include/boost/spirit/home/qi/meta_compiler.hpp:15:
In file included from /usr/local/include/boost/spirit/home/qi/domain.hpp:17:
/usr/local/include/boost/spirit/home/support/argument.hpp:99:52: error: no type named 'type' in 'boost::fusion::result_of::size<boost::spirit::unused_type>'
                fusion::result_of::size<Sequence>::type
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
/usr/local/include/boost/spirit/home/support/argument.hpp:118:40: note: in instantiation of template class 'boost::spirit::result_of::get_arg<boost::spirit::unused_type, 1>' requested here
        struct get_arg<Sequence&, N> : get_arg<Sequence, N>
                                       ^
/usr/local/include/boost/spirit/home/support/argument.hpp:166:41: note: in instantiation of template class 'boost::spirit::result_of::get_arg<boost::spirit::unused_type &, 1>' requested here
            typedef typename result_of::get_arg<arg_type, N>::type type;
                                        ^
/usr/local/include/boost/phoenix/core/v2_eval.hpp:29:15: note: in instantiation of template class 'boost::spirit::argument<1>::result<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> > *, boost::spirit::unused_type &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> >' requested here
            : Eval::template result<typename proto::detail::uncvref<Env>::type>
              ^
/usr/local/include/boost/proto/detail/poly_function.hpp:205:31: note: in instantiation of template class 'boost::phoenix::v2_eval::result<boost::phoenix::v2_eval (boost::spirit::argument<1>, boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> > *, boost::spirit::unused_type &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &)>' requested here
        typedef typename Fun::template result<Sig>::type result_type;
                              ^
/usr/local/include/boost/proto/transform/call.hpp:246:38: note: in instantiation of template class 'boost::proto::detail::poly_function_traits<boost::phoenix::v2_eval, boost::phoenix::v2_eval (boost::spirit::argument<1>, boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> > *, boost::spirit::unused_type &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &), mpl_::size_t<3> >' requested here
            typedef typename detail::poly_function_traits<Fun, Fun(a0, a1)>::result_type result_type;
                                     ^
/usr/local/include/boost/proto/transform/call.hpp:312:13: note: (skipping 96 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)
          : impl2<Expr, State, Data, detail::is_transform_<Fun>::value>
            ^
/usr/local/include/boost/function/function_template.hpp:1124:5: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::function<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
    self_type(f).swap(*this);
    ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:182:19: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::operator=<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
            lhs.f = detail::bind_parser<Auto>(
                  ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:220:13: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::define<mpl_::bool_<false>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
            define<mpl::false_>(*this, expr, traits::matches<qi::domain, Expr>());
            ^
main.cpp:21:20: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::operator=<boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
        start_elem = 
                   ^
main.cpp:36:40: note: in instantiation of member function 'json_start_elem_grammar_object<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, char>::json_start_elem_grammar_object' requested here
    json_start_elem_grammar_object<It> p;
                                       ^
In file included from main.cpp:2:
In file included from /usr/local/include/boost/fusion/adapted.hpp:17:
In file included from /usr/local/include/boost/fusion/adapted/struct.hpp:19:
In file included from /usr/local/include/boost/fusion/adapted/struct/define_struct_inline.hpp:12:
In file included from /usr/local/include/boost/fusion/adapted/struct/detail/define_struct_inline.hpp:50:
In file included from /usr/local/include/boost/fusion/sequence/intrinsic/at_c.hpp:10:
/usr/local/include/boost/fusion/sequence/intrinsic/at.hpp:62:15: error: implicit instantiation of undefined template 'boost::fusion::extension::at_impl<boost::fusion::non_fusion_tag>::apply<boost::spirit::unused_type, mpl_::int_<1> >'
            : extension::at_impl<typename detail::tag_of<Sequence>::type>::
              ^
/usr/local/include/boost/fusion/sequence/intrinsic/at.hpp:68:15: note: in instantiation of template class 'boost::fusion::result_of::at<boost::spirit::unused_type, mpl_::int_<1> >' requested here
            : at<Sequence, mpl::int_<N> >
              ^
/usr/local/include/boost/spirit/home/support/argument.hpp:108:36: note: in instantiation of template class 'boost::fusion::result_of::at_c<boost::spirit::unused_type, 1>' requested here
                fusion::result_of::at_c<Sequence, N>::type
                                   ^
/usr/local/include/boost/spirit/home/support/argument.hpp:118:40: note: in instantiation of template class 'boost::spirit::result_of::get_arg<boost::spirit::unused_type, 1>' requested here
        struct get_arg<Sequence&, N> : get_arg<Sequence, N>
                                       ^
/usr/local/include/boost/spirit/home/support/argument.hpp:166:41: note: in instantiation of template class 'boost::spirit::result_of::get_arg<boost::spirit::unused_type &, 1>' requested here
            typedef typename result_of::get_arg<arg_type, N>::type type;
                                        ^
/usr/local/include/boost/phoenix/core/v2_eval.hpp:29:15: note: in instantiation of template class 'boost::spirit::argument<1>::result<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> > *, boost::spirit::unused_type &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> >' requested here
            : Eval::template result<typename proto::detail::uncvref<Env>::type>
              ^
/usr/local/include/boost/proto/detail/poly_function.hpp:205:31: note: (skipping 98 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)
        typedef typename Fun::template result<Sig>::type result_type;
                              ^
/usr/local/include/boost/function/function_template.hpp:1124:5: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::function<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
    self_type(f).swap(*this);
    ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:182:19: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::operator=<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
            lhs.f = detail::bind_parser<Auto>(
                  ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:220:13: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::define<mpl_::bool_<false>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
            define<mpl::false_>(*this, expr, traits::matches<qi::domain, Expr>());
            ^
main.cpp:21:20: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::operator=<boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
        start_elem = 
                   ^
main.cpp:36:40: note: in instantiation of member function 'json_start_elem_grammar_object<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, char>::json_start_elem_grammar_object' requested here
    json_start_elem_grammar_object<It> p;
                                       ^
/usr/local/include/boost/fusion/sequence/intrinsic/at.hpp:32:20: note: template is declared here
            struct apply;
                   ^
In file included from main.cpp:3:
In file included from /usr/local/include/boost/spirit/include/qi.hpp:16:
In file included from /usr/local/include/boost/spirit/home/qi.hpp:15:
In file included from /usr/local/include/boost/spirit/home/qi/auto.hpp:15:
In file included from /usr/local/include/boost/spirit/home/qi/auto/auto.hpp:13:
In file included from /usr/local/include/boost/spirit/home/support/common_terminals.hpp:15:
In file included from /usr/local/include/boost/spirit/home/support/terminal.hpp:17:
In file included from /usr/local/include/boost/spirit/include/phoenix_function.hpp:15:
In file included from /usr/local/include/boost/phoenix/function.hpp:11:
In file included from /usr/local/include/boost/phoenix/function/function.hpp:13:
In file included from /usr/local/include/boost/phoenix/core/detail/function_eval.hpp:14:
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/function_eval.hpp:12:
/usr/local/include/boost/phoenix/core/detail/preprocessed/function_eval_10.hpp:69:155: error: no type named 'type' in 'boost::result_of<boost::phoenix::evaluator (const boost::phoenix::actor<boost::spirit::argument<1> > &, const boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> > *, boost::spirit::unused_type &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &> &)>'
                typedef typename boost::add_reference< typename boost::add_const< typename boost::result_of< boost::phoenix::evaluator( A0 , Context ) >::type >::type >::type a0;
                                                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
/usr/local/include/boost/phoenix/core/detail/preprocessed/function_eval_10.hpp:76:22: note: in instantiation of template class 'boost::phoenix::detail::function_eval::result<boost::phoenix::detail::function_eval (const boost::spirit::terminal<boost::spirit::tag::lit> &, const boost::phoenix::actor<boost::spirit::argument<1> > &, const boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> > *, boost::spirit::unused_type &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &> &)>' requested here
            typename result<
                     ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/function_eval_10.hpp:83:13: note: while substituting deduced template arguments into function template 'operator()' [with F = boost::spirit::terminal<boost::spirit::tag::lit>, A0 = const boost::phoenix::actor<boost::spirit::argument<1> >, Context = boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> > *, boost::spirit::unused_type &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &>]
            operator()(F const & f, A0 & a0, Context const & ctx) const
            ^
/usr/local/include/boost/utility/detail/result_of_iterate.hpp:138:8: note: during template argument deduction for class template partial specialization 'cpp0x_result_of_impl<type-parameter-0-0 (type-parameter-0-1, type-parameter-0-2, type-parameter-0-3), typename result_of_always_void<decltype(boost::declval<F>()(boost::declval<T0>(), boost::declval<T1>(), boost::declval<T2>()))>::type>' [with F = boost::phoenix::detail::function_eval, T0 = const boost::spirit::terminal<boost::spirit::tag::lit> &, T1 = const boost::phoenix::actor<boost::spirit::argument<1> > &, T2 = boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> > *, boost::spirit::unused_type &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &>]
struct cpp0x_result_of_impl<F(BOOST_PP_ENUM_PARAMS(BOOST_PP_ITERATION(),T)),
       ^
/usr/local/include/boost/utility/detail/result_of_iterate.hpp:43:7: note: in instantiation of template class 'boost::detail::cpp0x_result_of<boost::phoenix::detail::function_eval (const boost::spirit::terminal<boost::spirit::tag::lit> &, const boost::phoenix::actor<boost::spirit::argument<1> > &, boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> > *, boost::spirit::unused_type &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &>)>' requested here
    : detail::cpp0x_result_of<F(BOOST_RESULT_OF_ARGS)> { };
      ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/call_10.hpp:62:33: note: in instantiation of template class 'boost::result_of<boost::phoenix::detail::function_eval (const boost::spirit::terminal<boost::spirit::tag::lit> &, const boost::phoenix::actor<boost::spirit::argument<1> > &, boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> > *, boost::spirit::unused_type &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &>)>' requested here
                typename boost::result_of<
                                ^
/usr/local/include/boost/phoenix/core/call.hpp:61:15: note: (skipping 77 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)
            : detail::call_impl<Fun, Expr, State, Data>
              ^
/usr/local/include/boost/function/function_template.hpp:1124:5: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::function<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
    self_type(f).swap(*this);
    ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:182:19: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::operator=<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
            lhs.f = detail::bind_parser<Auto>(
                  ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:220:13: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::define<mpl_::bool_<false>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
            define<mpl::false_>(*this, expr, traits::matches<qi::domain, Expr>());
            ^
main.cpp:21:20: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::operator=<boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
        start_elem = 
                   ^
main.cpp:36:40: note: in instantiation of member function 'json_start_elem_grammar_object<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, char>::json_start_elem_grammar_object' requested here
    json_start_elem_grammar_object<It> p;
                                       ^
In file included from main.cpp:3:
In file included from /usr/local/include/boost/spirit/include/qi.hpp:16:
In file included from /usr/local/include/boost/spirit/home/qi.hpp:14:
In file included from /usr/local/include/boost/spirit/home/qi/action.hpp:14:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:14:
In file included from /usr/local/include/boost/spirit/home/qi/meta_compiler.hpp:15:
In file included from /usr/local/include/boost/spirit/home/qi/domain.hpp:17:
/usr/local/include/boost/spirit/home/support/argument.hpp:166:63: error: no type named 'type' in 'boost::spirit::result_of::get_arg<boost::spirit::unused_type &, 1>'
            typedef typename result_of::get_arg<arg_type, N>::type type;
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
/usr/local/include/boost/phoenix/core/v2_eval.hpp:29:15: note: in instantiation of template class 'boost::spirit::argument<1>::result<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> > *, boost::spirit::unused_type &, const boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> >' requested here
            : Eval::template result<typename proto::detail::uncvref<Env>::type>
              ^
/usr/local/include/boost/proto/detail/poly_function.hpp:205:31: note: in instantiation of template class 'boost::phoenix::v2_eval::result<boost::phoenix::v2_eval (boost::spirit::argument<1>, boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> > *, boost::spirit::unused_type &, const boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &)>' requested here
        typedef typename Fun::template result<Sig>::type result_type;
                              ^
/usr/local/include/boost/proto/transform/call.hpp:246:38: note: in instantiation of template class 'boost::proto::detail::poly_function_traits<boost::phoenix::v2_eval, boost::phoenix::v2_eval (boost::spirit::argument<1>, boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> > *, boost::spirit::unused_type &, const boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &), mpl_::size_t<3> >' requested here
            typedef typename detail::poly_function_traits<Fun, Fun(a0, a1)>::result_type result_type;
                                     ^
/usr/local/include/boost/proto/transform/call.hpp:312:13: note: in instantiation of template class 'boost::proto::call<boost::phoenix::v2_eval (boost::proto::make<boost::spirit::argument<1> ()>, boost::proto::call<boost::phoenix::functional::env (boost::proto::_state)>)>::impl2<const boost::spirit::argument<1> &, boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> > *, boost::spirit::unused_type &, const boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &>, const boost::phoenix::default_actions &, false>' requested here
          : impl2<Expr, State, Data, detail::is_transform_<Fun>::value>
            ^
/usr/local/include/boost/proto/transform/call.hpp:268:35: note: in instantiation of template class 'boost::proto::call<boost::phoenix::v2_eval (boost::proto::make<boost::spirit::argument<1> ()>, boost::proto::call<boost::phoenix::functional::env (boost::proto::_state)>)>::impl<const boost::spirit::argument<1> &, boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> > *, boost::spirit::unused_type &, const boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &>, const boost::phoenix::default_actions &>' requested here
            typedef typename Fun::template impl<a0, a1, Data>::result_type result_type;
                                  ^
/usr/local/include/boost/proto/transform/call.hpp:312:13: note: (skipping 94 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)
          : impl2<Expr, State, Data, detail::is_transform_<Fun>::value>
            ^
/usr/local/include/boost/function/function_template.hpp:1124:5: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::function<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
    self_type(f).swap(*this);
    ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:182:19: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::operator=<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
            lhs.f = detail::bind_parser<Auto>(
                  ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:220:13: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::define<mpl_::bool_<false>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
            define<mpl::false_>(*this, expr, traits::matches<qi::domain, Expr>());
            ^
main.cpp:21:20: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::operator=<boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
        start_elem = 
                   ^
main.cpp:36:40: note: in instantiation of member function 'json_start_elem_grammar_object<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, char>::json_start_elem_grammar_object' requested here
    json_start_elem_grammar_object<It> p;
                                       ^
In file included from main.cpp:3:
In file included from /usr/local/include/boost/spirit/include/qi.hpp:16:
In file included from /usr/local/include/boost/spirit/home/qi.hpp:15:
In file included from /usr/local/include/boost/spirit/home/qi/auto.hpp:15:
In file included from /usr/local/include/boost/spirit/home/qi/auto/auto.hpp:13:
In file included from /usr/local/include/boost/spirit/home/support/common_terminals.hpp:15:
In file included from /usr/local/include/boost/spirit/home/support/terminal.hpp:17:
In file included from /usr/local/include/boost/spirit/include/phoenix_function.hpp:15:
In file included from /usr/local/include/boost/phoenix/function.hpp:11:
In file included from /usr/local/include/boost/phoenix/function/function.hpp:13:
In file included from /usr/local/include/boost/phoenix/core/detail/function_eval.hpp:14:
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/function_eval.hpp:12:
/usr/local/include/boost/phoenix/core/detail/preprocessed/function_eval_10.hpp:69:155: error: no type named 'type' in 'boost::result_of<boost::phoenix::evaluator (const boost::phoenix::actor<boost::spirit::argument<1> > &, const boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> > *, boost::spirit::unused_type &, const boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &> &)>'
                typedef typename boost::add_reference< typename boost::add_const< typename boost::result_of< boost::phoenix::evaluator( A0 , Context ) >::type >::type >::type a0;
                                                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
/usr/local/include/boost/phoenix/core/detail/preprocessed/function_eval_10.hpp:76:22: note: in instantiation of template class 'boost::phoenix::detail::function_eval::result<boost::phoenix::detail::function_eval (const boost::spirit::terminal<boost::spirit::tag::lit> &, const boost::phoenix::actor<boost::spirit::argument<1> > &, const boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> > *, boost::spirit::unused_type &, const boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &> &)>' requested here
            typename result<
                     ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/function_eval_10.hpp:83:13: note: while substituting deduced template arguments into function template 'operator()' [with F = boost::spirit::terminal<boost::spirit::tag::lit>, A0 = const boost::phoenix::actor<boost::spirit::argument<1> >, Context = boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> > *, boost::spirit::unused_type &, const boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &>]
            operator()(F const & f, A0 & a0, Context const & ctx) const
            ^
/usr/local/include/boost/utility/detail/result_of_iterate.hpp:138:8: note: during template argument deduction for class template partial specialization 'cpp0x_result_of_impl<type-parameter-0-0 (type-parameter-0-1, type-parameter-0-2, type-parameter-0-3), typename result_of_always_void<decltype(boost::declval<F>()(boost::declval<T0>(), boost::declval<T1>(), boost::declval<T2>()))>::type>' [with F = boost::phoenix::detail::function_eval, T0 = const boost::spirit::terminal<boost::spirit::tag::lit> &, T1 = const boost::phoenix::actor<boost::spirit::argument<1> > &, T2 = boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> > *, boost::spirit::unused_type &, const boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &>]
struct cpp0x_result_of_impl<F(BOOST_PP_ENUM_PARAMS(BOOST_PP_ITERATION(),T)),
       ^
/usr/local/include/boost/utility/detail/result_of_iterate.hpp:43:7: note: in instantiation of template class 'boost::detail::cpp0x_result_of<boost::phoenix::detail::function_eval (const boost::spirit::terminal<boost::spirit::tag::lit> &, const boost::phoenix::actor<boost::spirit::argument<1> > &, boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> > *, boost::spirit::unused_type &, const boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &>)>' requested here
    : detail::cpp0x_result_of<F(BOOST_RESULT_OF_ARGS)> { };
      ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/call_10.hpp:62:33: note: in instantiation of template class 'boost::result_of<boost::phoenix::detail::function_eval (const boost::spirit::terminal<boost::spirit::tag::lit> &, const boost::phoenix::actor<boost::spirit::argument<1> > &, boost::phoenix::vector2<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> > *, boost::spirit::unused_type &, const boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &, const boost::phoenix::default_actions &>)>' requested here
                typename boost::result_of<
                                ^
/usr/local/include/boost/phoenix/core/call.hpp:61:15: note: (skipping 77 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)
            : detail::call_impl<Fun, Expr, State, Data>
              ^
/usr/local/include/boost/function/function_template.hpp:1124:5: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::function<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
    self_type(f).swap(*this);
    ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:182:19: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::operator=<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
            lhs.f = detail::bind_parser<Auto>(
                  ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:220:13: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::define<mpl_::bool_<false>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
            define<mpl::false_>(*this, expr, traits::matches<qi::domain, Expr>());
            ^
main.cpp:21:20: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::operator=<boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
        start_elem = 
                   ^
main.cpp:36:40: note: in instantiation of member function 'json_start_elem_grammar_object<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, char>::json_start_elem_grammar_object' requested here
    json_start_elem_grammar_object<It> p;
                                       ^
In file included from main.cpp:3:
In file included from /usr/local/include/boost/spirit/include/qi.hpp:16:
In file included from /usr/local/include/boost/spirit/home/qi.hpp:14:
In file included from /usr/local/include/boost/spirit/home/qi/action.hpp:14:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:14:
In file included from /usr/local/include/boost/spirit/home/qi/meta_compiler.hpp:15:
In file included from /usr/local/include/boost/spirit/home/qi/domain.hpp:17:
/usr/local/include/boost/spirit/home/support/argument.hpp:99:52: error: no type named 'type' in 'boost::fusion::result_of::size<const boost::spirit::unused_type>'
                fusion::result_of::size<Sequence>::type
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
/usr/local/include/boost/spirit/home/support/argument.hpp:118:40: note: in instantiation of template class 'boost::spirit::result_of::get_arg<const boost::spirit::unused_type, 1>' requested here
        struct get_arg<Sequence&, N> : get_arg<Sequence, N>
                                       ^
/usr/local/include/boost/spirit/home/support/argument.hpp:166:41: note: in instantiation of template class 'boost::spirit::result_of::get_arg<const boost::spirit::unused_type &, 1>' requested here
            typedef typename result_of::get_arg<arg_type, N>::type type;
                                        ^
/usr/local/include/boost/phoenix/core/v2_eval.hpp:29:15: note: in instantiation of template class 'boost::spirit::argument<1>::result<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> > *, const boost::spirit::unused_type &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> >' requested here
            : Eval::template result<typename proto::detail::uncvref<Env>::type>
              ^
/usr/local/include/boost/proto/detail/poly_function.hpp:205:31: note: in instantiation of template class 'boost::phoenix::v2_eval::result<boost::phoenix::v2_eval (boost::spirit::argument<1>, boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> > *, const boost::spirit::unused_type &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &)>' requested here
        typedef typename Fun::template result<Sig>::type result_type;
                              ^
/usr/local/include/boost/proto/transform/call.hpp:246:38: note: in instantiation of template class 'boost::proto::detail::poly_function_traits<boost::phoenix::v2_eval, boost::phoenix::v2_eval (boost::spirit::argument<1>, boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> > *, const boost::spirit::unused_type &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> &), mpl_::size_t<3> >' requested here
            typedef typename detail::poly_function_traits<Fun, Fun(a0, a1)>::result_type result_type;
                                     ^
/usr/local/include/boost/proto/transform/call.hpp:312:13: note: (skipping 96 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)
          : impl2<Expr, State, Data, detail::is_transform_<Fun>::value>
            ^
/usr/local/include/boost/function/function_template.hpp:1124:5: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::function<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
    self_type(f).swap(*this);
    ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:182:19: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::operator=<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
            lhs.f = detail::bind_parser<Auto>(
                  ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:220:13: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::define<mpl_::bool_<false>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
            define<mpl::false_>(*this, expr, traits::matches<qi::domain, Expr>());
            ^
main.cpp:21:20: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::operator=<boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
        start_elem = 
                   ^
main.cpp:36:40: note: in instantiation of member function 'json_start_elem_grammar_object<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, char>::json_start_elem_grammar_object' requested here
    json_start_elem_grammar_object<It> p;
                                       ^
In file included from main.cpp:2:
In file included from /usr/local/include/boost/fusion/adapted.hpp:17:
In file included from /usr/local/include/boost/fusion/adapted/struct.hpp:19:
In file included from /usr/local/include/boost/fusion/adapted/struct/define_struct_inline.hpp:12:
In file included from /usr/local/include/boost/fusion/adapted/struct/detail/define_struct_inline.hpp:50:
In file included from /usr/local/include/boost/fusion/sequence/intrinsic/at_c.hpp:10:
/usr/local/include/boost/fusion/sequence/intrinsic/at.hpp:62:15: error: implicit instantiation of undefined template 'boost::fusion::extension::at_impl<boost::fusion::non_fusion_tag>::apply<const boost::spirit::unused_type, mpl_::int_<1> >'
            : extension::at_impl<typename detail::tag_of<Sequence>::type>::
              ^
/usr/local/include/boost/fusion/sequence/intrinsic/at.hpp:68:15: note: in instantiation of template class 'boost::fusion::result_of::at<const boost::spirit::unused_type, mpl_::int_<1> >' requested here
            : at<Sequence, mpl::int_<N> >
              ^
/usr/local/include/boost/spirit/home/support/argument.hpp:108:36: note: in instantiation of template class 'boost::fusion::result_of::at_c<const boost::spirit::unused_type, 1>' requested here
                fusion::result_of::at_c<Sequence, N>::type
                                   ^
/usr/local/include/boost/spirit/home/support/argument.hpp:118:40: note: in instantiation of template class 'boost::spirit::result_of::get_arg<const boost::spirit::unused_type, 1>' requested here
        struct get_arg<Sequence&, N> : get_arg<Sequence, N>
                                       ^
/usr/local/include/boost/spirit/home/support/argument.hpp:166:41: note: in instantiation of template class 'boost::spirit::result_of::get_arg<const boost::spirit::unused_type &, 1>' requested here
            typedef typename result_of::get_arg<arg_type, N>::type type;
                                        ^
/usr/local/include/boost/phoenix/core/v2_eval.hpp:29:15: note: in instantiation of template class 'boost::spirit::argument<1>::result<boost::phoenix::vector3<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> > *, const boost::spirit::unused_type &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &> >' requested here
            : Eval::template result<typename proto::detail::uncvref<Env>::type>
              ^
/usr/local/include/boost/proto/detail/poly_function.hpp:205:31: note: (skipping 98 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)
        typedef typename Fun::template result<Sig>::type result_type;
                              ^
/usr/local/include/boost/function/function_template.hpp:1124:5: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::function<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
    self_type(f).swap(*this);
    ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:182:19: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<boost::spirit::unused_type &, boost::fusion::cons<const char *, boost::fusion::cons<char, boost::fusion::nil_> > >, boost::fusion::vector0<void> > &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> > &)>::operator=<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::expect<boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false>, boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::optional<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, true, false> >, boost::fusion::nil_> > > > > > >, mpl_::bool_<false> > >' requested here
            lhs.f = detail::bind_parser<Auto>(
                  ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:220:13: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::define<mpl_::bool_<false>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
            define<mpl::false_>(*this, expr, traits::matches<qi::domain, Expr>());
            ^
main.cpp:21:20: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, void (const char *, char), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::blank, boost::spirit::char_encoding::ascii> >, 0>, boost::spirit::unused_type, boost::spirit::unused_type>::operator=<boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater, boost::proto::argsns_::list2<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2> >, 1> >, 0> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char &>, 0> >, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::lit, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::lit>, boost::phoenix::actor<boost::spirit::argument<1> > >, 2> >, 1> >, 0> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::negate, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::lit, boost::fusion::vector1<char> > >, 0> &>, 1> &>, 2> >' requested here
        start_elem = 
                   ^
main.cpp:36:40: note: in instantiation of member function 'json_start_elem_grammar_object<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >, char>::json_start_elem_grammar_object' requested here
    json_start_elem_grammar_object<It> p;
                                       ^
/usr/local/include/boost/fusion/sequence/intrinsic/at.hpp:32:20: note: template is declared here
            struct apply;
                   ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
