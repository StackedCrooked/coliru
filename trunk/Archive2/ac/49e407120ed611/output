main.cpp: In function 'int main()':
main.cpp:20:39: error: no matching function for call to 'boost::bimaps::bimap<boost::bimaps::list_of<int>, boost::bimaps::list_of<long unsigned int> >::insert(value_type)'
 my_bimap.insert( value_type( 1, 100 ) );
                                       ^
main.cpp:20:39: note: candidates are:
In file included from /usr/local/include/boost/bimap/container_adaptor/list_adaptor.hpp:21:0,
                 from /usr/local/include/boost/bimap/container_adaptor/list_map_adaptor.hpp:24,
                 from /usr/local/include/boost/bimap/views/list_map_view.hpp:21,
                 from /usr/local/include/boost/bimap/list_of.hpp:37,
                 from main.cpp:4:
/usr/local/include/boost/bimap/container_adaptor/sequence_container_adaptor.hpp:286:5: note: std::pair<typename boost::bimaps::container_adaptor::sequence_container_adaptor_base<Base, Iterator, ConstIterator, ReverseIterator, ConstReverseIterator, IteratorToBaseConverter, IteratorFromBaseConverter, ReverseIteratorFromBaseConverter, ValueToBaseConverter, ValueFromBaseConverter, FunctorsFromDerivedClasses>::type::iterator, bool> boost::bimaps::container_adaptor::sequence_container_adaptor<Base, Iterator, ConstIterator, ReverseIterator, ConstReverseIterator, IteratorToBaseConverter, IteratorFromBaseConverter, ReverseIteratorFromBaseConverter, ValueToBaseConverter, ValueFromBaseConverter, FunctorsFromDerivedClasses>::insert(typename boost::bimaps::container_adaptor::sequence_container_adaptor_base<Base, Iterator, ConstIterator, ReverseIterator, ConstReverseIterator, IteratorToBaseConverter, IteratorFromBaseConverter, ReverseIteratorFromBaseConverter, ValueToBaseConverter, ValueFromBaseConverter, FunctorsFromDerivedClasses>::type::iterator, typename boost::call_traits<typename boost::bimaps::container_adaptor::sequence_container_adaptor_base<Base, Iterator, ConstIterator, ReverseIterator, ConstReverseIterator, IteratorToBaseConverter, IteratorFromBaseConverter, ReverseIteratorFromBaseConverter, ValueToBaseConverter, ValueFromBaseConverter, FunctorsFromDerivedClasses>::type::value_type>::param_type) [with Base = boost::multi_index::detail::sequenced_index<boost::multi_index::detail::nth_layer<2, boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, boost::bimaps::detail::bimap_core<boost::bimaps::list_of<int>, boost::bimaps::list_of<long unsigned int>, mpl_::na, mpl_::na, mpl_::na>::core_indices, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > >, boost::mpl::v_item<boost::bimaps::relation::member_at::left, boost::mpl::vector0<mpl_::na>, 0> >; Iterator = boost::bimaps::detail::set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >; ConstIterator = boost::bimaps::detail::const_set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >; ReverseIterator = boost::bimaps::detail::set_view_iterator<boost::reverse_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > > >; ConstReverseIterator = boost::bimaps::detail::const_set_view_iterator<boost::reverse_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > > >; IteratorToBaseConverter = boost::bimaps::container_adaptor::support::iterator_facade_to_base<boost::bimaps::detail::set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >, boost::bimaps::detail::const_set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > > >; IteratorFromBaseConverter = mpl_::na; ReverseIteratorFromBaseConverter = mpl_::na; ValueToBaseConverter = boost::bimaps::relation::detail::get_mutable_relation_functor<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> >; ValueFromBaseConverter = boost::bimaps::relation::support::get_above_view_functor<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> >; FunctorsFromDerivedClasses = boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>; typename boost::bimaps::container_adaptor::sequence_container_adaptor_base<Base, Iterator, ConstIterator, ReverseIterator, ConstReverseIterator, IteratorToBaseConverter, IteratorFromBaseConverter, ReverseIteratorFromBaseConverter, ValueToBaseConverter, ValueFromBaseConverter, FunctorsFromDerivedClasses>::type::iterator = boost::bimaps::detail::set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >; typename boost::bimaps::container_adaptor::sequence_container_adaptor_base<Base, Iterator, ConstIterator, ReverseIterator, ConstReverseIterator, IteratorToBaseConverter, IteratorFromBaseConverter, ReverseIteratorFromBaseConverter, ValueToBaseConverter, ValueFromBaseConverter, FunctorsFromDerivedClasses>::type::iterator = boost::bimaps::detail::set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >; typename boost::call_traits<typename boost::bimaps::container_adaptor::sequence_container_adaptor_base<Base, Iterator, ConstIterator, ReverseIterator, ConstReverseIterator, IteratorToBaseConverter, IteratorFromBaseConverter, ReverseIteratorFromBaseConverter, ValueToBaseConverter, ValueFromBaseConverter, FunctorsFromDerivedClasses>::type::value_type>::param_type = const boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, false>&]
     insert(BOOST_DEDUCED_TYPENAME base_::iterator position,
     ^
/usr/local/include/boost/bimap/container_adaptor/sequence_container_adaptor.hpp:286:5: note:   candidate expects 2 arguments, 1 provided
/usr/local/include/boost/bimap/container_adaptor/sequence_container_adaptor.hpp:306:10: note: void boost::bimaps::container_adaptor::sequence_container_adaptor<Base, Iterator, ConstIterator, ReverseIterator, ConstReverseIterator, IteratorToBaseConverter, IteratorFromBaseConverter, ReverseIteratorFromBaseConverter, ValueToBaseConverter, ValueFromBaseConverter, FunctorsFromDerivedClasses>::insert(typename boost::bimaps::container_adaptor::sequence_container_adaptor_base<Base, Iterator, ConstIterator, ReverseIterator, ConstReverseIterator, IteratorToBaseConverter, IteratorFromBaseConverter, ReverseIteratorFromBaseConverter, ValueToBaseConverter, ValueFromBaseConverter, FunctorsFromDerivedClasses>::type::iterator, typename boost::bimaps::container_adaptor::sequence_container_adaptor_base<Base, Iterator, ConstIterator, ReverseIterator, ConstReverseIterator, IteratorToBaseConverter, IteratorFromBaseConverter, ReverseIteratorFromBaseConverter, ValueToBaseConverter, ValueFromBaseConverter, FunctorsFromDerivedClasses>::type::size_type, typename boost::call_traits<typename boost::bimaps::container_adaptor::sequence_container_adaptor_base<Base, Iterator, ConstIterator, ReverseIterator, ConstReverseIterator, IteratorToBaseConverter, IteratorFromBaseConverter, ReverseIteratorFromBaseConverter, ValueToBaseConverter, ValueFromBaseConverter, FunctorsFromDerivedClasses>::type::value_type>::param_type) [with Base = boost::multi_index::detail::sequenced_index<boost::multi_index::detail::nth_layer<2, boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, boost::bimaps::detail::bimap_core<boost::bimaps::list_of<int>, boost::bimaps::list_of<long unsigned int>, mpl_::na, mpl_::na, mpl_::na>::core_indices, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > >, boost::mpl::v_item<boost::bimaps::relation::member_at::left, boost::mpl::vector0<mpl_::na>, 0> >; Iterator = boost::bimaps::detail::set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >; ConstIterator = boost::bimaps::detail::const_set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >; ReverseIterator = boost::bimaps::detail::set_view_iterator<boost::reverse_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > > >; ConstReverseIterator = boost::bimaps::detail::const_set_view_iterator<boost::reverse_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > > >; IteratorToBaseConverter = boost::bimaps::container_adaptor::support::iterator_facade_to_base<boost::bimaps::detail::set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >, boost::bimaps::detail::const_set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > > >; IteratorFromBaseConverter = mpl_::na; ReverseIteratorFromBaseConverter = mpl_::na; ValueToBaseConverter = boost::bimaps::relation::detail::get_mutable_relation_functor<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> >; ValueFromBaseConverter = boost::bimaps::relation::support::get_above_view_functor<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> >; FunctorsFromDerivedClasses = boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>; typename boost::bimaps::container_adaptor::sequence_container_adaptor_base<Base, Iterator, ConstIterator, ReverseIterator, ConstReverseIterator, IteratorToBaseConverter, IteratorFromBaseConverter, ReverseIteratorFromBaseConverter, ValueToBaseConverter, ValueFromBaseConverter, FunctorsFromDerivedClasses>::type::iterator = boost::bimaps::detail::set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >; typename boost::bimaps::container_adaptor::sequence_container_adaptor_base<Base, Iterator, ConstIterator, ReverseIterator, ConstReverseIterator, IteratorToBaseConverter, IteratorFromBaseConverter, ReverseIteratorFromBaseConverter, ValueToBaseConverter, ValueFromBaseConverter, FunctorsFromDerivedClasses>::type::size_type = long unsigned int; typename boost::call_traits<typename boost::bimaps::container_adaptor::sequence_container_adaptor_base<Base, Iterator, ConstIterator, ReverseIterator, ConstReverseIterator, IteratorToBaseConverter, IteratorFromBaseConverter, ReverseIteratorFromBaseConverter, ValueToBaseConverter, ValueFromBaseConverter, FunctorsFromDerivedClasses>::type::value_type>::param_type = const boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, false>&]
     void insert(BOOST_DEDUCED_TYPENAME base_::iterator position,
          ^
/usr/local/include/boost/bimap/container_adaptor/sequence_container_adaptor.hpp:306:10: note:   candidate expects 3 arguments, 1 provided
/usr/local/include/boost/bimap/container_adaptor/sequence_container_adaptor.hpp:320:10: note: template<class InputIterator> void boost::bimaps::container_adaptor::sequence_container_adaptor<Base, Iterator, ConstIterator, ReverseIterator, ConstReverseIterator, IteratorToBaseConverter, IteratorFromBaseConverter, ReverseIteratorFromBaseConverter, ValueToBaseConverter, ValueFromBaseConverter, FunctorsFromDerivedClasses>::insert(typename boost::bimaps::container_adaptor::sequence_container_adaptor_base<Base, Iterator, ConstIterator, ReverseIterator, ConstReverseIterator, IteratorToBaseConverter, IteratorFromBaseConverter, ReverseIteratorFromBaseConverter, ValueToBaseConverter, ValueFromBaseConverter, FunctorsFromDerivedClasses>::type::iterator, InputIterator, InputIterator) [with InputIterator = InputIterator; Base = boost::multi_index::detail::sequenced_index<boost::multi_index::detail::nth_layer<2, boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, boost::bimaps::detail::bimap_core<boost::bimaps::list_of<int>, boost::bimaps::list_of<long unsigned int>, mpl_::na, mpl_::na, mpl_::na>::core_indices, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > >, boost::mpl::v_item<boost::bimaps::relation::member_at::left, boost::mpl::vector0<mpl_::na>, 0> >; Iterator = boost::bimaps::detail::set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >; ConstIterator = boost::bimaps::detail::const_set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >; ReverseIterator = boost::bimaps::detail::set_view_iterator<boost::reverse_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > > >; ConstReverseIterator = boost::bimaps::detail::const_set_view_iterator<boost::reverse_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > > >; IteratorToBaseConverter = boost::bimaps::container_adaptor::support::iterator_facade_to_base<boost::bimaps::detail::set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >, boost::bimaps::detail::const_set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > > >; IteratorFromBaseConverter = mpl_::na; ReverseIteratorFromBaseConverter = mpl_::na; ValueToBaseConverter = boost::bimaps::relation::detail::get_mutable_relation_functor<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> >; ValueFromBaseConverter = boost::bimaps::relation::support::get_above_view_functor<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> >; FunctorsFromDerivedClasses = boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>]
     void insert(BOOST_DEDUCED_TYPENAME base_::iterator position,
          ^
/usr/local/include/boost/bimap/container_adaptor/sequence_container_adaptor.hpp:320:10: note:   template argument deduction/substitution failed:
main.cpp:20:39: note:   cannot convert 'boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, false>(1, 100ul)' (type 'value_type {aka boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, false>}') to type 'boost::bimaps::container_adaptor::container_adaptor<boost::multi_index::detail::sequenced_index<boost::multi_index::detail::nth_layer<2, boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, boost::bimaps::detail::bimap_core<boost::bimaps::list_of<int>, boost::bimaps::list_of<long unsigned int>, mpl_::na, mpl_::na, mpl_::na>::core_indices, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > >, boost::mpl::v_item<boost::bimaps::relation::member_at::left, boost::mpl::vector0<mpl_::na>, 0> >, boost::bimaps::detail::set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >, boost::bimaps::detail::const_set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >, boost::bimaps::container_adaptor::support::iterator_facade_to_base<boost::bimaps::detail::set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >, boost::bimaps::detail::const_set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > > >, mpl_::na, boost::bimaps::relation::detail::get_mutable_relation_functor<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> >, boost::bimaps::relation::support::get_above_view_functor<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> >, boost::mpl::v_item<boost::bimaps::container_adaptor::detail::iterator_from_base_identity<boost::reverse_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >, boost::bimaps::detail::set_view_iterator<boost::reverse_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > > >, boost::reverse_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >, boost::bimaps::detail::const_set_view_iterator<boost::reverse_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > > > >, boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, 1> >::iterator {aka boost::bimaps::detail::set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >}'
 my_bimap.insert( value_type( 1, 100 ) );
                                       ^
main.cpp:21:39: error: no matching function for call to 'boost::bimaps::bimap<boost::bimaps::list_of<int>, boost::bimaps::list_of<long unsigned int> >::insert(value_type)'
 my_bimap.insert( value_type( 2, 200 ) );
                                       ^
main.cpp:21:39: note: candidates are:
In file included from /usr/local/include/boost/bimap/container_adaptor/list_adaptor.hpp:21:0,
                 from /usr/local/include/boost/bimap/container_adaptor/list_map_adaptor.hpp:24,
                 from /usr/local/include/boost/bimap/views/list_map_view.hpp:21,
                 from /usr/local/include/boost/bimap/list_of.hpp:37,
                 from main.cpp:4:
/usr/local/include/boost/bimap/container_adaptor/sequence_container_adaptor.hpp:286:5: note: std::pair<typename boost::bimaps::container_adaptor::sequence_container_adaptor_base<Base, Iterator, ConstIterator, ReverseIterator, ConstReverseIterator, IteratorToBaseConverter, IteratorFromBaseConverter, ReverseIteratorFromBaseConverter, ValueToBaseConverter, ValueFromBaseConverter, FunctorsFromDerivedClasses>::type::iterator, bool> boost::bimaps::container_adaptor::sequence_container_adaptor<Base, Iterator, ConstIterator, ReverseIterator, ConstReverseIterator, IteratorToBaseConverter, IteratorFromBaseConverter, ReverseIteratorFromBaseConverter, ValueToBaseConverter, ValueFromBaseConverter, FunctorsFromDerivedClasses>::insert(typename boost::bimaps::container_adaptor::sequence_container_adaptor_base<Base, Iterator, ConstIterator, ReverseIterator, ConstReverseIterator, IteratorToBaseConverter, IteratorFromBaseConverter, ReverseIteratorFromBaseConverter, ValueToBaseConverter, ValueFromBaseConverter, FunctorsFromDerivedClasses>::type::iterator, typename boost::call_traits<typename boost::bimaps::container_adaptor::sequence_container_adaptor_base<Base, Iterator, ConstIterator, ReverseIterator, ConstReverseIterator, IteratorToBaseConverter, IteratorFromBaseConverter, ReverseIteratorFromBaseConverter, ValueToBaseConverter, ValueFromBaseConverter, FunctorsFromDerivedClasses>::type::value_type>::param_type) [with Base = boost::multi_index::detail::sequenced_index<boost::multi_index::detail::nth_layer<2, boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, boost::bimaps::detail::bimap_core<boost::bimaps::list_of<int>, boost::bimaps::list_of<long unsigned int>, mpl_::na, mpl_::na, mpl_::na>::core_indices, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > >, boost::mpl::v_item<boost::bimaps::relation::member_at::left, boost::mpl::vector0<mpl_::na>, 0> >; Iterator = boost::bimaps::detail::set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >; ConstIterator = boost::bimaps::detail::const_set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >; ReverseIterator = boost::bimaps::detail::set_view_iterator<boost::reverse_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > > >; ConstReverseIterator = boost::bimaps::detail::const_set_view_iterator<boost::reverse_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > > >; IteratorToBaseConverter = boost::bimaps::container_adaptor::support::iterator_facade_to_base<boost::bimaps::detail::set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >, boost::bimaps::detail::const_set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > > >; IteratorFromBaseConverter = mpl_::na; ReverseIteratorFromBaseConverter = mpl_::na; ValueToBaseConverter = boost::bimaps::relation::detail::get_mutable_relation_functor<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> >; ValueFromBaseConverter = boost::bimaps::relation::support::get_above_view_functor<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> >; FunctorsFromDerivedClasses = boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>; typename boost::bimaps::container_adaptor::sequence_container_adaptor_base<Base, Iterator, ConstIterator, ReverseIterator, ConstReverseIterator, IteratorToBaseConverter, IteratorFromBaseConverter, ReverseIteratorFromBaseConverter, ValueToBaseConverter, ValueFromBaseConverter, FunctorsFromDerivedClasses>::type::iterator = boost::bimaps::detail::set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >; typename boost::bimaps::container_adaptor::sequence_container_adaptor_base<Base, Iterator, ConstIterator, ReverseIterator, ConstReverseIterator, IteratorToBaseConverter, IteratorFromBaseConverter, ReverseIteratorFromBaseConverter, ValueToBaseConverter, ValueFromBaseConverter, FunctorsFromDerivedClasses>::type::iterator = boost::bimaps::detail::set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >; typename boost::call_traits<typename boost::bimaps::container_adaptor::sequence_container_adaptor_base<Base, Iterator, ConstIterator, ReverseIterator, ConstReverseIterator, IteratorToBaseConverter, IteratorFromBaseConverter, ReverseIteratorFromBaseConverter, ValueToBaseConverter, ValueFromBaseConverter, FunctorsFromDerivedClasses>::type::value_type>::param_type = const boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, false>&]
     insert(BOOST_DEDUCED_TYPENAME base_::iterator position,
     ^
/usr/local/include/boost/bimap/container_adaptor/sequence_container_adaptor.hpp:286:5: note:   candidate expects 2 arguments, 1 provided
/usr/local/include/boost/bimap/container_adaptor/sequence_container_adaptor.hpp:306:10: note: void boost::bimaps::container_adaptor::sequence_container_adaptor<Base, Iterator, ConstIterator, ReverseIterator, ConstReverseIterator, IteratorToBaseConverter, IteratorFromBaseConverter, ReverseIteratorFromBaseConverter, ValueToBaseConverter, ValueFromBaseConverter, FunctorsFromDerivedClasses>::insert(typename boost::bimaps::container_adaptor::sequence_container_adaptor_base<Base, Iterator, ConstIterator, ReverseIterator, ConstReverseIterator, IteratorToBaseConverter, IteratorFromBaseConverter, ReverseIteratorFromBaseConverter, ValueToBaseConverter, ValueFromBaseConverter, FunctorsFromDerivedClasses>::type::iterator, typename boost::bimaps::container_adaptor::sequence_container_adaptor_base<Base, Iterator, ConstIterator, ReverseIterator, ConstReverseIterator, IteratorToBaseConverter, IteratorFromBaseConverter, ReverseIteratorFromBaseConverter, ValueToBaseConverter, ValueFromBaseConverter, FunctorsFromDerivedClasses>::type::size_type, typename boost::call_traits<typename boost::bimaps::container_adaptor::sequence_container_adaptor_base<Base, Iterator, ConstIterator, ReverseIterator, ConstReverseIterator, IteratorToBaseConverter, IteratorFromBaseConverter, ReverseIteratorFromBaseConverter, ValueToBaseConverter, ValueFromBaseConverter, FunctorsFromDerivedClasses>::type::value_type>::param_type) [with Base = boost::multi_index::detail::sequenced_index<boost::multi_index::detail::nth_layer<2, boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, boost::bimaps::detail::bimap_core<boost::bimaps::list_of<int>, boost::bimaps::list_of<long unsigned int>, mpl_::na, mpl_::na, mpl_::na>::core_indices, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > >, boost::mpl::v_item<boost::bimaps::relation::member_at::left, boost::mpl::vector0<mpl_::na>, 0> >; Iterator = boost::bimaps::detail::set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >; ConstIterator = boost::bimaps::detail::const_set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >; ReverseIterator = boost::bimaps::detail::set_view_iterator<boost::reverse_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > > >; ConstReverseIterator = boost::bimaps::detail::const_set_view_iterator<boost::reverse_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > > >; IteratorToBaseConverter = boost::bimaps::container_adaptor::support::iterator_facade_to_base<boost::bimaps::detail::set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >, boost::bimaps::detail::const_set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > > >; IteratorFromBaseConverter = mpl_::na; ReverseIteratorFromBaseConverter = mpl_::na; ValueToBaseConverter = boost::bimaps::relation::detail::get_mutable_relation_functor<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> >; ValueFromBaseConverter = boost::bimaps::relation::support::get_above_view_functor<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> >; FunctorsFromDerivedClasses = boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>; typename boost::bimaps::container_adaptor::sequence_container_adaptor_base<Base, Iterator, ConstIterator, ReverseIterator, ConstReverseIterator, IteratorToBaseConverter, IteratorFromBaseConverter, ReverseIteratorFromBaseConverter, ValueToBaseConverter, ValueFromBaseConverter, FunctorsFromDerivedClasses>::type::iterator = boost::bimaps::detail::set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >; typename boost::bimaps::container_adaptor::sequence_container_adaptor_base<Base, Iterator, ConstIterator, ReverseIterator, ConstReverseIterator, IteratorToBaseConverter, IteratorFromBaseConverter, ReverseIteratorFromBaseConverter, ValueToBaseConverter, ValueFromBaseConverter, FunctorsFromDerivedClasses>::type::size_type = long unsigned int; typename boost::call_traits<typename boost::bimaps::container_adaptor::sequence_container_adaptor_base<Base, Iterator, ConstIterator, ReverseIterator, ConstReverseIterator, IteratorToBaseConverter, IteratorFromBaseConverter, ReverseIteratorFromBaseConverter, ValueToBaseConverter, ValueFromBaseConverter, FunctorsFromDerivedClasses>::type::value_type>::param_type = const boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, false>&]
     void insert(BOOST_DEDUCED_TYPENAME base_::iterator position,
          ^
/usr/local/include/boost/bimap/container_adaptor/sequence_container_adaptor.hpp:306:10: note:   candidate expects 3 arguments, 1 provided
/usr/local/include/boost/bimap/container_adaptor/sequence_container_adaptor.hpp:320:10: note: template<class InputIterator> void boost::bimaps::container_adaptor::sequence_container_adaptor<Base, Iterator, ConstIterator, ReverseIterator, ConstReverseIterator, IteratorToBaseConverter, IteratorFromBaseConverter, ReverseIteratorFromBaseConverter, ValueToBaseConverter, ValueFromBaseConverter, FunctorsFromDerivedClasses>::insert(typename boost::bimaps::container_adaptor::sequence_container_adaptor_base<Base, Iterator, ConstIterator, ReverseIterator, ConstReverseIterator, IteratorToBaseConverter, IteratorFromBaseConverter, ReverseIteratorFromBaseConverter, ValueToBaseConverter, ValueFromBaseConverter, FunctorsFromDerivedClasses>::type::iterator, InputIterator, InputIterator) [with InputIterator = InputIterator; Base = boost::multi_index::detail::sequenced_index<boost::multi_index::detail::nth_layer<2, boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, boost::bimaps::detail::bimap_core<boost::bimaps::list_of<int>, boost::bimaps::list_of<long unsigned int>, mpl_::na, mpl_::na, mpl_::na>::core_indices, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > >, boost::mpl::v_item<boost::bimaps::relation::member_at::left, boost::mpl::vector0<mpl_::na>, 0> >; Iterator = boost::bimaps::detail::set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >; ConstIterator = boost::bimaps::detail::const_set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >; ReverseIterator = boost::bimaps::detail::set_view_iterator<boost::reverse_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > > >; ConstReverseIterator = boost::bimaps::detail::const_set_view_iterator<boost::reverse_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > > >; IteratorToBaseConverter = boost::bimaps::container_adaptor::support::iterator_facade_to_base<boost::bimaps::detail::set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >, boost::bimaps::detail::const_set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > > >; IteratorFromBaseConverter = mpl_::na; ReverseIteratorFromBaseConverter = mpl_::na; ValueToBaseConverter = boost::bimaps::relation::detail::get_mutable_relation_functor<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> >; ValueFromBaseConverter = boost::bimaps::relation::support::get_above_view_functor<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> >; FunctorsFromDerivedClasses = boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>]
     void insert(BOOST_DEDUCED_TYPENAME base_::iterator position,
          ^
/usr/local/include/boost/bimap/container_adaptor/sequence_container_adaptor.hpp:320:10: note:   template argument deduction/substitution failed:
main.cpp:21:39: note:   cannot convert 'boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, false>(2, 200ul)' (type 'value_type {aka boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, false>}') to type 'boost::bimaps::container_adaptor::container_adaptor<boost::multi_index::detail::sequenced_index<boost::multi_index::detail::nth_layer<2, boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, boost::bimaps::detail::bimap_core<boost::bimaps::list_of<int>, boost::bimaps::list_of<long unsigned int>, mpl_::na, mpl_::na, mpl_::na>::core_indices, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > >, boost::mpl::v_item<boost::bimaps::relation::member_at::left, boost::mpl::vector0<mpl_::na>, 0> >, boost::bimaps::detail::set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >, boost::bimaps::detail::const_set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >, boost::bimaps::container_adaptor::support::iterator_facade_to_base<boost::bimaps::detail::set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >, boost::bimaps::detail::const_set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > > >, mpl_::na, boost::bimaps::relation::detail::get_mutable_relation_functor<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> >, boost::bimaps::relation::support::get_above_view_functor<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> >, boost::mpl::v_item<boost::bimaps::container_adaptor::detail::iterator_from_base_identity<boost::reverse_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >, boost::bimaps::detail::set_view_iterator<boost::reverse_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > > >, boost::reverse_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >, boost::bimaps::detail::const_set_view_iterator<boost::reverse_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > > > >, boost::mpl::vector<mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, 1> >::iterator {aka boost::bimaps::detail::set_view_iterator<boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::index_node_base<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true>, std::allocator<boost::bimaps::relation::mutant_relation<boost::bimaps::tags::tagged<int, boost::bimaps::relation::member_at::left>, boost::bimaps::tags::tagged<long unsigned int, boost::bimaps::relation::member_at::right>, mpl_::na, true> > > > > >}'
 my_bimap.insert( value_type( 2, 200 ) );
                                       ^
main.cpp:34:1: error: 'z' was not declared in this scope
 z = boost::get( Rmy_asso_bimap, y  );
 ^
In file included from main.cpp:2:0:
/usr/local/include/boost/property_map/property_map.hpp: In instantiation of 'boost::associative_property_map<UniquePairAssociativeContainer>::value_type& boost::associative_property_map<UniquePairAssociativeContainer>::operator[](const key_type&) const [with UniquePairAssociativeContainer = boost::bimaps::views::list_map_view<boost::bimaps::relation::member_at::right, boost::bimaps::detail::bimap_core<boost::bimaps::list_of<int>, boost::bimaps::list_of<long unsigned int>, mpl_::na, mpl_::na, mpl_::na> >; boost::associative_property_map<UniquePairAssociativeContainer>::reference = int&; boost::associative_property_map<UniquePairAssociativeContainer>::value_type = int; boost::associative_property_map<UniquePairAssociativeContainer>::key_type = long unsigned int]':
/usr/local/include/boost/property_map/property_map.hpp:364:40:   required from 'void boost::put(const boost::put_get_helper<Reference, PropertyMap>&, K, const V&) [with PropertyMap = boost::associative_property_map<boost::bimaps::views::list_map_view<boost::bimaps::relation::member_at::right, boost::bimaps::detail::bimap_core<boost::bimaps::list_of<int>, boost::bimaps::list_of<long unsigned int>, mpl_::na, mpl_::na, mpl_::na> > >; Reference = int&; K = int; V = int]'
main.cpp:27:36:   required from here
/usr/local/include/boost/property_map/property_map.hpp:502:20: error: no match for 'operator[]' (operand types are 'boost::associative_property_map<boost::bimaps::views::list_map_view<boost::bimaps::relation::member_at::right, boost::bimaps::detail::bimap_core<boost::bimaps::list_of<int>, boost::bimaps::list_of<long unsigned int>, mpl_::na, mpl_::na, mpl_::na> > >::C {aka boost::bimaps::views::list_map_view<boost::bimaps::relation::member_at::right, boost::bimaps::detail::bimap_core<boost::bimaps::list_of<int>, boost::bimaps::list_of<long unsigned int>, mpl_::na, mpl_::na, mpl_::na> >}' and 'const key_type {aka const long unsigned int}')
       return (*m_c)[k];
                    ^
