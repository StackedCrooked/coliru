main.cpp: In instantiation of 'decltype (test::c.*test::f()) test(C, F) [with C = X; F = void (X::*)(); decltype (test::c.*test::f()) = void]':
main.cpp:30:17:   required from here
main.cpp:13:13: warning: parameter 'c' set but not used [-Wunused-but-set-parameter]
 auto test(C c, F f) -> decltype((c.*f)())
             ^
main.cpp:13:18: warning: parameter 'f' set but not used [-Wunused-but-set-parameter]
 auto test(C c, F f) -> decltype((c.*f)())
                  ^
main.cpp: In instantiation of 'decltype (test::c->*test::f()) test(C, F) [with C = X*; F = void (X::*)(); decltype (test::c->*test::f()) = void]':
main.cpp:31:17:   required from here
main.cpp:21:13: warning: parameter 'c' set but not used [-Wunused-but-set-parameter]
 auto test(C c, F f) -> decltype((c->*f)())
             ^
main.cpp:21:18: warning: parameter 'f' set but not used [-Wunused-but-set-parameter]
 auto test(C c, F f) -> decltype((c->*f)())
                  ^
Reference overload called
Pointer overload called
Catch-all overload called
