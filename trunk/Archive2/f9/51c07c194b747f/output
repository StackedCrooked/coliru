main.cpp: In lambda function:
main.cpp:188:4: error: no matching function for call to 'bind(monad::Continuator<int, int>, use_monad::run(int, std::function<void(int, int)>)::<lambda(int, int)>::<lambda(int, int)>::<lambda(int, int)>)'
   });});});
    ^
main.cpp:188:4: note: candidate is:
main.cpp:35:7: note: template<class ... Args> monad::Continuator<Args ...> monad::bind(monad::Continuator<Args ...>, std::function<std::function<void(std::function<void(Args ...)>)>(Args ...)>)
  auto bind(                Continuator<Args...> continuator,
       ^
main.cpp:35:7: note:   template argument deduction/substitution failed:
main.cpp:188:4: note:   'use_monad::run(int, std::function<void(int, int)>)::<lambda(int, int)>::<lambda(int, int)>::<lambda(int, int)>' is not derived from 'std::function<std::function<void(std::function<void(Args ...)>)>(Args ...)>'
   });});});
    ^
main.cpp: In lambda function:
main.cpp:188:7: error: no matching function for call to 'bind(monad::Continuator<int, int>, use_monad::run(int, std::function<void(int, int)>)::<lambda(int, int)>::<lambda(int, int)>)'
   });});});
       ^
main.cpp:188:7: note: candidate is:
main.cpp:35:7: note: template<class ... Args> monad::Continuator<Args ...> monad::bind(monad::Continuator<Args ...>, std::function<std::function<void(std::function<void(Args ...)>)>(Args ...)>)
  auto bind(                Continuator<Args...> continuator,
       ^
main.cpp:35:7: note:   template argument deduction/substitution failed:
main.cpp:188:7: note:   'use_monad::run(int, std::function<void(int, int)>)::<lambda(int, int)>::<lambda(int, int)>' is not derived from 'std::function<std::function<void(std::function<void(Args ...)>)>(Args ...)>'
   });});});
       ^
main.cpp: In function 'void use_monad::run(int, std::function<void(int, int)>)':
main.cpp:188:10: error: no matching function for call to 'bind(monad::Continuator<int, int>, use_monad::run(int, std::function<void(int, int)>)::<lambda(int, int)>)'
   });});});
          ^
main.cpp:188:10: note: candidate is:
main.cpp:35:7: note: template<class ... Args> monad::Continuator<Args ...> monad::bind(monad::Continuator<Args ...>, std::function<std::function<void(std::function<void(Args ...)>)>(Args ...)>)
  auto bind(                Continuator<Args...> continuator,
       ^
main.cpp:35:7: note:   template argument deduction/substitution failed:
main.cpp:188:10: note:   'use_monad::run(int, std::function<void(int, int)>)::<lambda(int, int)>' is not derived from 'std::function<std::function<void(std::function<void(Args ...)>)>(Args ...)>'
   });});});
          ^
