main.cpp: In instantiation of 'dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]':
/usr/local/include/c++/4.9.0/bits/stl_algo.h:746:21:   required from '_OIter std::copy_if(_IIter, _IIter, _OIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; _OIter = std::back_insert_iterator<std::vector<std::vector<std::type_index> > >; _Predicate = dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]::<lambda(auto:1)>]'
main.cpp:26:6:   required from 'Iterator dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]'
main.cpp:40:58:   required from here
main.cpp:19:48: error: expansion pattern 'args#0' contains no argument packs
         if(potential_candidate.size() != sizeof...(args)) {
                                                ^
In file included from /usr/local/include/boost/fusion/view/joint_view/joint_view.hpp:16:0,
                 from /usr/local/include/boost/fusion/algorithm/transformation/push_back.hpp:12,
                 from /usr/local/include/boost/fusion/view/iterator_range/detail/segmented_iterator_range.hpp:20,
                 from /usr/local/include/boost/fusion/view/iterator_range/detail/segments_impl.hpp:14,
                 from /usr/local/include/boost/fusion/view/iterator_range/iterator_range.hpp:22,
                 from /usr/local/include/boost/fusion/view/iterator_range.hpp:11,
                 from /usr/local/include/boost/fusion/sequence/intrinsic/detail/segmented_begin.hpp:13,
                 from /usr/local/include/boost/fusion/sequence/intrinsic/begin.hpp:18,
                 from /usr/local/include/boost/fusion/iterator/segmented_iterator.hpp:13,
                 from /usr/local/include/boost/fusion/sequence/intrinsic/detail/segmented_end.hpp:12,
                 from /usr/local/include/boost/fusion/sequence/intrinsic/end.hpp:18,
                 from /usr/local/include/boost/fusion/mpl/back.hpp:12,
                 from /usr/local/include/boost/fusion/mpl.hpp:15,
                 from /usr/local/include/boost/fusion/view/detail/strictest_traversal.hpp:16,
                 from /usr/local/include/boost/fusion/view/transform_view/transform_view.hpp:21,
                 from /usr/local/include/boost/fusion/algorithm/transformation/transform.hpp:11,
                 from /usr/local/include/boost/fusion/include/transform.hpp:11,
                 from main.cpp:10:
/usr/local/include/boost/fusion/sequence/intrinsic/size.hpp: In instantiation of 'struct boost::fusion::extension::size_impl<boost::fusion::non_fusion_tag>::unsegmented_size<const std::vector<std::type_index> >':
/usr/local/include/boost/fusion/sequence/intrinsic/size.hpp:37:20:   required from 'struct boost::fusion::extension::size_impl<boost::fusion::non_fusion_tag>::apply<const std::vector<std::type_index> >'
/usr/local/include/boost/fusion/sequence/intrinsic/size.hpp:69:16:   required from 'struct boost::fusion::result_of::size<const std::vector<std::type_index> >'
/usr/local/include/boost/fusion/view/transform_view/transform_view.hpp:41:9:   required from 'struct boost::fusion::transform_view<const std::vector<std::type_index>, const std::tuple<int, double>, dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]::<lambda(std::type_index, auto:2)> >'
main.cpp:24:10:   required from 'dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]'
/usr/local/include/c++/4.9.0/bits/stl_algo.h:746:21:   required from '_OIter std::copy_if(_IIter, _IIter, _OIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; _OIter = std::back_insert_iterator<std::vector<std::vector<std::type_index> > >; _Predicate = dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]::<lambda(auto:1)>]'
main.cpp:26:6:   required from 'Iterator dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]'
main.cpp:40:58:   required from here
/usr/local/include/boost/fusion/sequence/intrinsic/size.hpp:34:20: error: no type named 'size' in 'const class std::vector<std::type_index>'
             struct unsegmented_size : Sequence::size {};
                    ^
/usr/local/include/boost/fusion/sequence/intrinsic/size.hpp: In instantiation of 'struct boost::fusion::result_of::size<const std::vector<std::type_index> >':
/usr/local/include/boost/fusion/view/transform_view/transform_view.hpp:41:9:   required from 'struct boost::fusion::transform_view<const std::vector<std::type_index>, const std::tuple<int, double>, dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]::<lambda(std::type_index, auto:2)> >'
main.cpp:24:10:   required from 'dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]'
/usr/local/include/c++/4.9.0/bits/stl_algo.h:746:21:   required from '_OIter std::copy_if(_IIter, _IIter, _OIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; _OIter = std::back_insert_iterator<std::vector<std::vector<std::type_index> > >; _Predicate = dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]::<lambda(auto:1)>]'
main.cpp:26:6:   required from 'Iterator dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]'
main.cpp:40:58:   required from here
/usr/local/include/boost/fusion/sequence/intrinsic/size.hpp:75:44: error: no type named 'type' in 'struct boost::fusion::extension::size_impl<boost::fusion::non_fusion_tag>::apply<const std::vector<std::type_index> >'
             template apply<Sequence>::type size_application;
                                            ^
In file included from /usr/local/include/boost/fusion/support/category_of.hpp:11:0,
                 from /usr/local/include/boost/fusion/iterator/iterator_facade.hpp:14,
                 from /usr/local/include/boost/fusion/adapted/std_tuple/std_tuple_iterator.hpp:11,
                 from /usr/local/include/boost/fusion/adapted/std_tuple/detail/begin_impl.hpp:11,
                 from /usr/local/include/boost/fusion/adapted/std_tuple.hpp:14,
                 from main.cpp:9:
/usr/local/include/boost/fusion/support/detail/category_of.hpp: In instantiation of 'struct boost::fusion::detail::fusion_category_of<const std::vector<std::type_index> >':
/usr/local/include/boost/fusion/support/category_of.hpp:45:20:   required from 'struct boost::fusion::extension::category_of_impl<boost::fusion::non_fusion_tag>::apply<const std::vector<std::type_index> >'
/usr/local/include/boost/fusion/support/category_of.hpp:64:16:   required from 'struct boost::fusion::traits::category_of<const std::vector<std::type_index> >'
/usr/local/include/boost/fusion/view/transform_view/transform_view.hpp:46:63:   required from 'struct boost::fusion::transform_view<const std::vector<std::type_index>, const std::tuple<int, double>, dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]::<lambda(std::type_index, auto:2)> >'
main.cpp:24:10:   required from 'dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]'
/usr/local/include/c++/4.9.0/bits/stl_algo.h:746:21:   required from '_OIter std::copy_if(_IIter, _IIter, _OIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; _OIter = std::back_insert_iterator<std::vector<std::vector<std::type_index> > >; _Predicate = dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]::<lambda(auto:1)>]'
main.cpp:26:6:   required from 'Iterator dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]'
main.cpp:40:58:   required from here
/usr/local/include/boost/fusion/support/detail/category_of.hpp:15:38: error: no type named 'category' in 'const class std::vector<std::type_index>'
         typedef typename T::category type;
                                      ^
In file included from /usr/local/include/boost/fusion/algorithm/iteration/fold.hpp:33:0,
                 from /usr/local/include/boost/fusion/view/detail/strictest_traversal.hpp:17,
                 from /usr/local/include/boost/fusion/view/transform_view/transform_view.hpp:21,
                 from /usr/local/include/boost/fusion/algorithm/transformation/transform.hpp:11,
                 from /usr/local/include/boost/fusion/include/transform.hpp:11,
                 from main.cpp:10:
/usr/local/include/boost/fusion/algorithm/iteration/detail/preprocessed/fold.hpp: In instantiation of 'struct boost::fusion::detail::result_of_first_unrolledfold<const boost::fusion::random_access_traversal_tag&, boost::fusion::vector_iterator<boost::fusion::vector2<const std::vector<std::type_index>, const std::tuple<int, double> >, 0>, boost::fusion::detail::strictest_traversal_impl, 2>':
/usr/local/include/boost/fusion/algorithm/iteration/detail/preprocessed/fold.hpp:284:13:   required from 'struct boost::fusion::detail::fold_impl<2, const boost::fusion::random_access_traversal_tag&, boost::fusion::vector2<const std::vector<std::type_index>, const std::tuple<int, double> >, boost::fusion::detail::strictest_traversal_impl>'
/usr/local/include/boost/fusion/algorithm/iteration/detail/preprocessed/fold.hpp:313:16:   required from 'struct boost::fusion::detail::result_of_fold<boost::fusion::vector2<const std::vector<std::type_index>, const std::tuple<int, double> >, boost::fusion::random_access_traversal_tag, boost::fusion::detail::strictest_traversal_impl, false>'
/usr/local/include/boost/fusion/algorithm/iteration/detail/preprocessed/fold.hpp:327:16:   required from 'struct boost::fusion::result_of::fold<boost::fusion::vector2<const std::vector<std::type_index>, const std::tuple<int, double> >, boost::fusion::random_access_traversal_tag, boost::fusion::detail::strictest_traversal_impl>'
/usr/local/include/boost/fusion/view/detail/strictest_traversal.hpp:69:16:   required from 'struct boost::fusion::detail::strictest_traversal<boost::fusion::vector2<const std::vector<std::type_index>, const std::tuple<int, double> > >'
/usr/local/include/boost/fusion/view/transform_view/transform_view.hpp:49:59:   required from 'struct boost::fusion::transform_view<const std::vector<std::type_index>, const std::tuple<int, double>, dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]::<lambda(std::type_index, auto:2)> >'
main.cpp:24:10:   required from 'dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]'
/usr/local/include/c++/4.9.0/bits/stl_algo.h:746:21:   required from '_OIter std::copy_if(_IIter, _IIter, _OIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; _OIter = std::back_insert_iterator<std::vector<std::vector<std::type_index> > >; _Predicate = dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]::<lambda(auto:1)>]'
main.cpp:26:6:   required from 'Iterator dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]'
main.cpp:40:58:   required from here
/usr/local/include/boost/fusion/algorithm/iteration/detail/preprocessed/fold.hpp:272:13: error: no type named 'type' in 'struct boost::result_of<boost::fusion::detail::strictest_traversal_impl(const boost::fusion::random_access_traversal_tag&, const std::vector<std::type_index>&)>'
             type;
             ^
In file included from /usr/local/include/boost/fusion/algorithm/transformation/transform.hpp:11:0,
                 from /usr/local/include/boost/fusion/include/transform.hpp:11,
                 from main.cpp:10:
/usr/local/include/boost/fusion/view/transform_view/transform_view.hpp: In instantiation of 'struct boost::fusion::transform_view<const std::vector<std::type_index>, const std::tuple<int, double>, dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]::<lambda(std::type_index, auto:2)> >':
main.cpp:24:10:   required from 'dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]'
/usr/local/include/c++/4.9.0/bits/stl_algo.h:746:21:   required from '_OIter std::copy_if(_IIter, _IIter, _OIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; _OIter = std::back_insert_iterator<std::vector<std::vector<std::type_index> > >; _Predicate = dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]::<lambda(auto:1)>]'
main.cpp:26:6:   required from 'Iterator dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]'
main.cpp:40:58:   required from here
/usr/local/include/boost/fusion/view/transform_view/transform_view.hpp:50:60: error: no type named 'type' in 'struct boost::fusion::result_of::begin<const std::vector<std::type_index> >'
         typedef typename result_of::begin<Sequence1>::type first1_type;
                                                            ^
/usr/local/include/boost/fusion/view/transform_view/transform_view.hpp:52:58: error: no type named 'type' in 'struct boost::fusion::result_of::end<const std::vector<std::type_index> >'
         typedef typename result_of::end<Sequence1>::type last1_type;
                                                          ^
/usr/local/include/boost/fusion/view/transform_view/transform_view.hpp:54:59: error: no type named 'type' in 'struct boost::fusion::result_of::size<const std::vector<std::type_index> >'
         typedef typename result_of::size<Sequence1>::type size;
                                                           ^
In file included from /usr/local/include/boost/fusion/support/is_view.hpp:12:0,
                 from /usr/local/include/boost/fusion/view/transform_view/transform_view.hpp:13,
                 from /usr/local/include/boost/fusion/algorithm/transformation/transform.hpp:11,
                 from /usr/local/include/boost/fusion/include/transform.hpp:11,
                 from main.cpp:10:
/usr/local/include/boost/fusion/support/detail/is_view.hpp: In instantiation of 'struct boost::fusion::detail::fusion_is_view<const std::vector<std::type_index> >':
/usr/local/include/boost/fusion/support/is_view.hpp:30:20:   required from 'struct boost::fusion::extension::is_view_impl<boost::fusion::non_fusion_tag>::apply<const std::vector<std::type_index> >'
/usr/local/include/boost/fusion/support/is_view.hpp:58:16:   required from 'struct boost::fusion::traits::is_view<const std::vector<std::type_index> >'
/usr/local/include/boost/mpl/if.hpp:67:11:   required from 'struct boost::mpl::if_<boost::fusion::traits::is_view<const std::vector<std::type_index> >, const std::vector<std::type_index>, const std::vector<std::type_index>&>'
/usr/local/include/boost/fusion/view/transform_view/transform_view.hpp:76:84:   required from 'struct boost::fusion::transform_view<const std::vector<std::type_index>, const std::tuple<int, double>, dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]::<lambda(std::type_index, auto:2)> >'
main.cpp:24:10:   required from 'dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]'
/usr/local/include/c++/4.9.0/bits/stl_algo.h:746:21:   required from '_OIter std::copy_if(_IIter, _IIter, _OIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; _OIter = std::back_insert_iterator<std::vector<std::vector<std::type_index> > >; _Predicate = dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]::<lambda(auto:1)>]'
main.cpp:26:6:   required from 'Iterator dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]'
main.cpp:40:58:   required from here
/usr/local/include/boost/fusion/support/detail/is_view.hpp:15:37: error: no type named 'is_view' in 'const class std::vector<std::type_index>'
         typedef typename T::is_view type;
                                     ^
In file included from /usr/local/include/boost/fusion/iterator/detail/advance.hpp:12:0,
                 from /usr/local/include/boost/fusion/iterator/iterator_facade.hpp:12,
                 from /usr/local/include/boost/fusion/adapted/std_tuple/std_tuple_iterator.hpp:11,
                 from /usr/local/include/boost/fusion/adapted/std_tuple/detail/begin_impl.hpp:11,
                 from /usr/local/include/boost/fusion/adapted/std_tuple.hpp:14,
                 from main.cpp:9:
/usr/local/include/boost/mpl/if.hpp: In instantiation of 'struct boost::mpl::if_<boost::fusion::traits::is_view<const std::vector<std::type_index> >, const std::vector<std::type_index>, const std::vector<std::type_index>&>':
/usr/local/include/boost/fusion/view/transform_view/transform_view.hpp:76:84:   required from 'struct boost::fusion::transform_view<const std::vector<std::type_index>, const std::tuple<int, double>, dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]::<lambda(std::type_index, auto:2)> >'
main.cpp:24:10:   required from 'dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]'
/usr/local/include/c++/4.9.0/bits/stl_algo.h:746:21:   required from '_OIter std::copy_if(_IIter, _IIter, _OIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; _OIter = std::back_insert_iterator<std::vector<std::vector<std::type_index> > >; _Predicate = dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]::<lambda(auto:1)>]'
main.cpp:26:6:   required from 'Iterator dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]'
main.cpp:40:58:   required from here
/usr/local/include/boost/mpl/if.hpp:67:11: error: 'value' is not a member of 'boost::fusion::traits::is_view<const std::vector<std::type_index> >'
         > almost_type_;
           ^
/usr/local/include/boost/mpl/if.hpp:70:41: error: 'value' is not a member of 'boost::fusion::traits::is_view<const std::vector<std::type_index> >'
     typedef typename almost_type_::type type;
                                         ^
main.cpp: In instantiation of 'dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]':
/usr/local/include/c++/4.9.0/bits/stl_algo.h:746:21:   required from '_OIter std::copy_if(_IIter, _IIter, _OIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; _OIter = std::back_insert_iterator<std::vector<std::vector<std::type_index> > >; _Predicate = dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]::<lambda(auto:1)>]'
main.cpp:26:6:   required from 'Iterator dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]'
main.cpp:40:58:   required from here
main.cpp:25:102: error: 'struct boost::fusion::transform_view<const std::vector<std::type_index>, const std::tuple<int, double>, dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]::<lambda(std::type_index, auto:2)> >' has no member named 'begin'
         return std::all_of(arguments_matched.begin(), arguments_matched.end(), [](auto b){ return b;});
                                                                                                      ^
main.cpp:25:102: error: 'struct boost::fusion::transform_view<const std::vector<std::type_index>, const std::tuple<int, double>, dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]::<lambda(std::type_index, auto:2)> >' has no member named 'end'
main.cpp: In instantiation of 'dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float}]':
/usr/local/include/c++/4.9.0/bits/stl_algo.h:746:21:   required from '_OIter std::copy_if(_IIter, _IIter, _OIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; _OIter = std::back_insert_iterator<std::vector<std::vector<std::type_index> > >; _Predicate = dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float}]::<lambda(auto:1)>]'
main.cpp:26:6:   required from 'Iterator dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float}]'
main.cpp:41:85:   required from here
main.cpp:19:48: error: expansion pattern 'args#0' contains no argument packs
         if(potential_candidate.size() != sizeof...(args)) {
                                                ^
In file included from /usr/local/include/boost/fusion/algorithm/iteration/fold.hpp:33:0,
                 from /usr/local/include/boost/fusion/view/detail/strictest_traversal.hpp:17,
                 from /usr/local/include/boost/fusion/view/transform_view/transform_view.hpp:21,
                 from /usr/local/include/boost/fusion/algorithm/transformation/transform.hpp:11,
                 from /usr/local/include/boost/fusion/include/transform.hpp:11,
                 from main.cpp:10:
/usr/local/include/boost/fusion/algorithm/iteration/detail/preprocessed/fold.hpp: In instantiation of 'struct boost::fusion::detail::result_of_first_unrolledfold<const boost::fusion::random_access_traversal_tag&, boost::fusion::vector_iterator<boost::fusion::vector2<const std::vector<std::type_index>, const std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float> >, 0>, boost::fusion::detail::strictest_traversal_impl, 2>':
/usr/local/include/boost/fusion/algorithm/iteration/detail/preprocessed/fold.hpp:284:13:   required from 'struct boost::fusion::detail::fold_impl<2, const boost::fusion::random_access_traversal_tag&, boost::fusion::vector2<const std::vector<std::type_index>, const std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float> >, boost::fusion::detail::strictest_traversal_impl>'
/usr/local/include/boost/fusion/algorithm/iteration/detail/preprocessed/fold.hpp:313:16:   required from 'struct boost::fusion::detail::result_of_fold<boost::fusion::vector2<const std::vector<std::type_index>, const std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float> >, boost::fusion::random_access_traversal_tag, boost::fusion::detail::strictest_traversal_impl, false>'
/usr/local/include/boost/fusion/algorithm/iteration/detail/preprocessed/fold.hpp:327:16:   required from 'struct boost::fusion::result_of::fold<boost::fusion::vector2<const std::vector<std::type_index>, const std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float> >, boost::fusion::random_access_traversal_tag, boost::fusion::detail::strictest_traversal_impl>'
/usr/local/include/boost/fusion/view/detail/strictest_traversal.hpp:69:16:   required from 'struct boost::fusion::detail::strictest_traversal<boost::fusion::vector2<const std::vector<std::type_index>, const std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float> > >'
/usr/local/include/boost/fusion/view/transform_view/transform_view.hpp:49:59:   required from 'struct boost::fusion::transform_view<const std::vector<std::type_index>, const std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float>, dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float}]::<lambda(std::type_index, auto:2)> >'
main.cpp:24:10:   required from 'dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float}]'
/usr/local/include/c++/4.9.0/bits/stl_algo.h:746:21:   required from '_OIter std::copy_if(_IIter, _IIter, _OIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; _OIter = std::back_insert_iterator<std::vector<std::vector<std::type_index> > >; _Predicate = dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float}]::<lambda(auto:1)>]'
main.cpp:26:6:   required from 'Iterator dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float}]'
main.cpp:41:85:   required from here
/usr/local/include/boost/fusion/algorithm/iteration/detail/preprocessed/fold.hpp:272:13: error: no type named 'type' in 'struct boost::result_of<boost::fusion::detail::strictest_traversal_impl(const boost::fusion::random_access_traversal_tag&, const std::vector<std::type_index>&)>'
             type;
             ^
In file included from /usr/local/include/boost/fusion/algorithm/transformation/transform.hpp:11:0,
                 from /usr/local/include/boost/fusion/include/transform.hpp:11,
                 from main.cpp:10:
/usr/local/include/boost/fusion/view/transform_view/transform_view.hpp: In instantiation of 'struct boost::fusion::transform_view<const std::vector<std::type_index>, const std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float>, dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float}]::<lambda(std::type_index, auto:2)> >':
main.cpp:24:10:   required from 'dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float}]'
/usr/local/include/c++/4.9.0/bits/stl_algo.h:746:21:   required from '_OIter std::copy_if(_IIter, _IIter, _OIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; _OIter = std::back_insert_iterator<std::vector<std::vector<std::type_index> > >; _Predicate = dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float}]::<lambda(auto:1)>]'
main.cpp:26:6:   required from 'Iterator dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float}]'
main.cpp:41:85:   required from here
/usr/local/include/boost/fusion/view/transform_view/transform_view.hpp:50:60: error: no type named 'type' in 'struct boost::fusion::result_of::begin<const std::vector<std::type_index> >'
         typedef typename result_of::begin<Sequence1>::type first1_type;
                                                            ^
/usr/local/include/boost/fusion/view/transform_view/transform_view.hpp:52:58: error: no type named 'type' in 'struct boost::fusion::result_of::end<const std::vector<std::type_index> >'
         typedef typename result_of::end<Sequence1>::type last1_type;
                                                          ^
/usr/local/include/boost/fusion/view/transform_view/transform_view.hpp:54:59: error: no type named 'type' in 'struct boost::fusion::result_of::size<const std::vector<std::type_index> >'
         typedef typename result_of::size<Sequence1>::type size;
                                                           ^
main.cpp: In instantiation of 'dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float}]':
/usr/local/include/c++/4.9.0/bits/stl_algo.h:746:21:   required from '_OIter std::copy_if(_IIter, _IIter, _OIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; _OIter = std::back_insert_iterator<std::vector<std::vector<std::type_index> > >; _Predicate = dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float}]::<lambda(auto:1)>]'
main.cpp:26:6:   required from 'Iterator dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float}]'
main.cpp:41:85:   required from here
main.cpp:25:102: error: 'struct boost::fusion::transform_view<const std::vector<std::type_index>, const std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float>, dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float}]::<lambda(std::type_index, auto:2)> >' has no member named 'begin'
         return std::all_of(arguments_matched.begin(), arguments_matched.end(), [](auto b){ return b;});
                                                                                                      ^
main.cpp:25:102: error: 'struct boost::fusion::transform_view<const std::vector<std::type_index>, const std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float>, dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float}]::<lambda(std::type_index, auto:2)> >' has no member named 'end'
main.cpp: In instantiation of 'dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*}]':
/usr/local/include/c++/4.9.0/bits/stl_algo.h:746:21:   required from '_OIter std::copy_if(_IIter, _IIter, _OIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; _OIter = std::back_insert_iterator<std::vector<std::vector<std::type_index> > >; _Predicate = dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*}]::<lambda(auto:1)>]'
main.cpp:26:6:   required from 'Iterator dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*}]'
main.cpp:42:115:   required from here
main.cpp:19:48: error: expansion pattern 'args#0' contains no argument packs
         if(potential_candidate.size() != sizeof...(args)) {
                                                ^
In file included from /usr/local/include/boost/fusion/algorithm/iteration/fold.hpp:33:0,
                 from /usr/local/include/boost/fusion/view/detail/strictest_traversal.hpp:17,
                 from /usr/local/include/boost/fusion/view/transform_view/transform_view.hpp:21,
                 from /usr/local/include/boost/fusion/algorithm/transformation/transform.hpp:11,
                 from /usr/local/include/boost/fusion/include/transform.hpp:11,
                 from main.cpp:10:
/usr/local/include/boost/fusion/algorithm/iteration/detail/preprocessed/fold.hpp: In instantiation of 'struct boost::fusion::detail::result_of_first_unrolledfold<const boost::fusion::random_access_traversal_tag&, boost::fusion::vector_iterator<boost::fusion::vector2<const std::vector<std::type_index>, const std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*> >, 0>, boost::fusion::detail::strictest_traversal_impl, 2>':
/usr/local/include/boost/fusion/algorithm/iteration/detail/preprocessed/fold.hpp:284:13:   required from 'struct boost::fusion::detail::fold_impl<2, const boost::fusion::random_access_traversal_tag&, boost::fusion::vector2<const std::vector<std::type_index>, const std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*> >, boost::fusion::detail::strictest_traversal_impl>'
/usr/local/include/boost/fusion/algorithm/iteration/detail/preprocessed/fold.hpp:313:16:   required from 'struct boost::fusion::detail::result_of_fold<boost::fusion::vector2<const std::vector<std::type_index>, const std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*> >, boost::fusion::random_access_traversal_tag, boost::fusion::detail::strictest_traversal_impl, false>'
/usr/local/include/boost/fusion/algorithm/iteration/detail/preprocessed/fold.hpp:327:16:   required from 'struct boost::fusion::result_of::fold<boost::fusion::vector2<const std::vector<std::type_index>, const std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*> >, boost::fusion::random_access_traversal_tag, boost::fusion::detail::strictest_traversal_impl>'
/usr/local/include/boost/fusion/view/detail/strictest_traversal.hpp:69:16:   required from 'struct boost::fusion::detail::strictest_traversal<boost::fusion::vector2<const std::vector<std::type_index>, const std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*> > >'
/usr/local/include/boost/fusion/view/transform_view/transform_view.hpp:49:59:   required from 'struct boost::fusion::transform_view<const std::vector<std::type_index>, const std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*>, dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*}]::<lambda(std::type_index, auto:2)> >'
main.cpp:24:10:   required from 'dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*}]'
/usr/local/include/c++/4.9.0/bits/stl_algo.h:746:21:   required from '_OIter std::copy_if(_IIter, _IIter, _OIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; _OIter = std::back_insert_iterator<std::vector<std::vector<std::type_index> > >; _Predicate = dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*}]::<lambda(auto:1)>]'
main.cpp:26:6:   required from 'Iterator dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*}]'
main.cpp:42:115:   required from here
/usr/local/include/boost/fusion/algorithm/iteration/detail/preprocessed/fold.hpp:272:13: error: no type named 'type' in 'struct boost::result_of<boost::fusion::detail::strictest_traversal_impl(const boost::fusion::random_access_traversal_tag&, const std::vector<std::type_index>&)>'
             type;
             ^
In file included from /usr/local/include/boost/fusion/algorithm/transformation/transform.hpp:11:0,
                 from /usr/local/include/boost/fusion/include/transform.hpp:11,
                 from main.cpp:10:
/usr/local/include/boost/fusion/view/transform_view/transform_view.hpp: In instantiation of 'struct boost::fusion::transform_view<const std::vector<std::type_index>, const std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*>, dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*}]::<lambda(std::type_index, auto:2)> >':
main.cpp:24:10:   required from 'dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*}]'
/usr/local/include/c++/4.9.0/bits/stl_algo.h:746:21:   required from '_OIter std::copy_if(_IIter, _IIter, _OIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; _OIter = std::back_insert_iterator<std::vector<std::vector<std::type_index> > >; _Predicate = dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*}]::<lambda(auto:1)>]'
main.cpp:26:6:   required from 'Iterator dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*}]'
main.cpp:42:115:   required from here
/usr/local/include/boost/fusion/view/transform_view/transform_view.hpp:50:60: error: no type named 'type' in 'struct boost::fusion::result_of::begin<const std::vector<std::type_index> >'
         typedef typename result_of::begin<Sequence1>::type first1_type;
                                                            ^
/usr/local/include/boost/fusion/view/transform_view/transform_view.hpp:52:58: error: no type named 'type' in 'struct boost::fusion::result_of::end<const std::vector<std::type_index> >'
         typedef typename result_of::end<Sequence1>::type last1_type;
                                                          ^
/usr/local/include/boost/fusion/view/transform_view/transform_view.hpp:54:59: error: no type named 'type' in 'struct boost::fusion::result_of::size<const std::vector<std::type_index> >'
         typedef typename result_of::size<Sequence1>::type size;
                                                           ^
main.cpp: In instantiation of 'dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*}]':
/usr/local/include/c++/4.9.0/bits/stl_algo.h:746:21:   required from '_OIter std::copy_if(_IIter, _IIter, _OIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; _OIter = std::back_insert_iterator<std::vector<std::vector<std::type_index> > >; _Predicate = dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*}]::<lambda(auto:1)>]'
main.cpp:26:6:   required from 'Iterator dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*}]'
main.cpp:42:115:   required from here
main.cpp:25:102: error: 'struct boost::fusion::transform_view<const std::vector<std::type_index>, const std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*>, dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*}]::<lambda(std::type_index, auto:2)> >' has no member named 'begin'
         return std::all_of(arguments_matched.begin(), arguments_matched.end(), [](auto b){ return b;});
                                                                                                      ^
main.cpp:25:102: error: 'struct boost::fusion::transform_view<const std::vector<std::type_index>, const std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*>, dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*}]::<lambda(std::type_index, auto:2)> >' has no member named 'end'
In file included from /usr/local/include/boost/fusion/include/transform.hpp:11:0,
                 from main.cpp:10:
/usr/local/include/boost/fusion/algorithm/transformation/transform.hpp:47:5: error: 'typename boost::fusion::result_of::transform<const Sequence1, const Sequence2, F>::type boost::fusion::transform(const Sequence1&, const Sequence2&, F) [with Sequence1 = std::vector<std::type_index>; Sequence2 = std::tuple<int, double>; F = dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]::<lambda(std::type_index, auto:2)>; typename boost::fusion::result_of::transform<const Sequence1, const Sequence2, F>::type = boost::fusion::transform_view<const std::vector<std::type_index>, const std::tuple<int, double>, dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]::<lambda(std::type_index, auto:2)> >]', declared using local type 'dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]::<lambda(std::type_index, auto:2)>', is used but never defined [-fpermissive]
     transform(Sequence1 const& seq1, Sequence2 const& seq2, F f)
     ^
/usr/local/include/boost/fusion/algorithm/transformation/transform.hpp:47:5: error: 'typename boost::fusion::result_of::transform<const Sequence1, const Sequence2, F>::type boost::fusion::transform(const Sequence1&, const Sequence2&, F) [with Sequence1 = std::vector<std::type_index>; Sequence2 = std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float>; F = dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float}]::<lambda(std::type_index, auto:2)>; typename boost::fusion::result_of::transform<const Sequence1, const Sequence2, F>::type = boost::fusion::transform_view<const std::vector<std::type_index>, const std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float>, dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float}]::<lambda(std::type_index, auto:2)> >]', declared using local type 'dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float}]::<lambda(std::type_index, auto:2)>', is used but never defined [-fpermissive]
/usr/local/include/boost/fusion/algorithm/transformation/transform.hpp:47:5: error: 'typename boost::fusion::result_of::transform<const Sequence1, const Sequence2, F>::type boost::fusion::transform(const Sequence1&, const Sequence2&, F) [with Sequence1 = std::vector<std::type_index>; Sequence2 = std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*>; F = dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*}]::<lambda(std::type_index, auto:2)>; typename boost::fusion::result_of::transform<const Sequence1, const Sequence2, F>::type = boost::fusion::transform_view<const std::vector<std::type_index>, const std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*>, dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*}]::<lambda(std::type_index, auto:2)> >]', declared using local type 'dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*}]::<lambda(std::type_index, auto:2)>', is used but never defined [-fpermissive]
main.cpp: In lambda function:
main.cpp:26:5: warning: control reaches end of non-void function [-Wreturn-type]
     });
     ^
main.cpp: In lambda function:
main.cpp:26:5: warning: control reaches end of non-void function [-Wreturn-type]
     });
     ^
main.cpp: In lambda function:
main.cpp:26:5: warning: control reaches end of non-void function [-Wreturn-type]
     });
     ^
