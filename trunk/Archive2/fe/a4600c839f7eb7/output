In file included from /usr/local/include/boost/fusion/support/category_of.hpp:11:0,
                 from /usr/local/include/boost/fusion/algorithm/query/all.hpp:12,
                 from /usr/local/include/boost/fusion/include/all.hpp:11,
                 from main.cpp:9:
/usr/local/include/boost/fusion/support/detail/category_of.hpp: In instantiation of 'struct boost::fusion::detail::fusion_category_of<std::tuple<int, double> >':
/usr/local/include/boost/fusion/support/category_of.hpp:45:20:   required from 'struct boost::fusion::extension::category_of_impl<boost::fusion::non_fusion_tag>::apply<std::tuple<int, double> >'
/usr/local/include/boost/fusion/support/category_of.hpp:64:16:   required from 'struct boost::fusion::traits::category_of<std::tuple<int, double> >'
/usr/local/include/boost/fusion/algorithm/query/all.hpp:31:82:   required from 'bool boost::fusion::all(const Sequence&, F) [with Sequence = std::tuple<int, double>; F = dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]::<lambda(auto:2, auto:3)>]'
main.cpp:24:10:   required from 'dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]'
/usr/local/include/c++/4.9.0/bits/stl_algo.h:746:21:   required from '_OIter std::copy_if(_IIter, _IIter, _OIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; _OIter = std::back_insert_iterator<std::vector<std::vector<std::type_index> > >; _Predicate = dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]::<lambda(auto:1)>]'
main.cpp:25:6:   required from 'Iterator dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {int, double}]'
main.cpp:39:58:   required from here
/usr/local/include/boost/fusion/support/detail/category_of.hpp:15:38: error: no type named 'category' in 'class std::tuple<int, double>'
         typedef typename T::category type;
                                      ^
/usr/local/include/boost/fusion/support/detail/category_of.hpp: In instantiation of 'struct boost::fusion::detail::fusion_category_of<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float> >':
/usr/local/include/boost/fusion/support/category_of.hpp:45:20:   required from 'struct boost::fusion::extension::category_of_impl<boost::fusion::non_fusion_tag>::apply<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float> >'
/usr/local/include/boost/fusion/support/category_of.hpp:64:16:   required from 'struct boost::fusion::traits::category_of<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float> >'
/usr/local/include/boost/fusion/algorithm/query/all.hpp:31:82:   required from 'bool boost::fusion::all(const Sequence&, F) [with Sequence = std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float>; F = dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float}]::<lambda(auto:2, auto:3)>]'
main.cpp:24:10:   required from 'dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float}]'
/usr/local/include/c++/4.9.0/bits/stl_algo.h:746:21:   required from '_OIter std::copy_if(_IIter, _IIter, _OIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; _OIter = std::back_insert_iterator<std::vector<std::vector<std::type_index> > >; _Predicate = dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float}]::<lambda(auto:1)>]'
main.cpp:25:6:   required from 'Iterator dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float}]'
main.cpp:40:85:   required from here
/usr/local/include/boost/fusion/support/detail/category_of.hpp:15:38: error: no type named 'category' in 'class std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float>'
/usr/local/include/boost/fusion/support/detail/category_of.hpp: In instantiation of 'struct boost::fusion::detail::fusion_category_of<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*> >':
/usr/local/include/boost/fusion/support/category_of.hpp:45:20:   required from 'struct boost::fusion::extension::category_of_impl<boost::fusion::non_fusion_tag>::apply<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*> >'
/usr/local/include/boost/fusion/support/category_of.hpp:64:16:   required from 'struct boost::fusion::traits::category_of<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*> >'
/usr/local/include/boost/fusion/algorithm/query/all.hpp:31:82:   required from 'bool boost::fusion::all(const Sequence&, F) [with Sequence = std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*>; F = dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*}]::<lambda(auto:2, auto:3)>]'
main.cpp:24:10:   required from 'dispatch(Iterator, Iterator, Args ...)::<lambda(auto:1)> [with auto:1 = std::vector<std::type_index>; Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*}]'
/usr/local/include/c++/4.9.0/bits/stl_algo.h:746:21:   required from '_OIter std::copy_if(_IIter, _IIter, _OIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; _OIter = std::back_insert_iterator<std::vector<std::vector<std::type_index> > >; _Predicate = dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*}]::<lambda(auto:1)>]'
main.cpp:25:6:   required from 'Iterator dispatch(Iterator, Iterator, Args ...) [with Iterator = __gnu_cxx::__normal_iterator<std::vector<std::type_index>*, std::vector<std::vector<std::type_index> > >; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*}]'
main.cpp:41:115:   required from here
/usr/local/include/boost/fusion/support/detail/category_of.hpp:15:38: error: no type named 'category' in 'class std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, const char*>'
