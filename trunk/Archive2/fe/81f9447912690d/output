g++ (GCC) 4.9.0
Copyright (C) 2014 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

main.cpp:5:22: error: template instantiation depth exceeds maximum of 900 (use -ftemplate-depth= to increase the maximum) instantiating ‘SelfRec<int>::value’
     static const int value = SelfRec<T>::value;
                      ^
main.cpp:5:22:   recursively required from ‘const int SelfRec<int>::value’
main.cpp:5:22:   required from ‘const int SelfRec<int>::value’
main.cpp:10:32:   required from here

main.cpp:5:22: error: template instantiation depth exceeds maximum of 900 (use -ftemplate-depth= to increase the maximum) instantiating ‘SelfRec<int>::value’
main.cpp:5:22:   recursively required from ‘const int SelfRec<int>::value’
main.cpp:5:22:   required from ‘const int SelfRec<int>::value’
main.cpp:10:32:   required from here

main.cpp:5:22: error: the value of ‘SelfRec<int>::value’ is not usable in a constant expression
main.cpp:5:22: note: ‘SelfRec<int>::value’ was not initialized with a constant expression
g++: internal compiler error: Killed (program cc1plus)
libbacktrace could not find executable to open
Please submit a full bug report,
with preprocessed source if appropriate.
See <http://gcc.gnu.org/bugs.html> for instructions.
clang version 3.4.2 (tags/RELEASE_342/final 216574)
Target: x86_64-unknown-linux-gnu
Thread model: posix
main.cpp:5:42: error: in-class initializer for static data member is not a constant expression; folding it to a constant is a GNU extension [-Werror,-Wgnu-folding-constant]
    static const int value = SelfRec<T>::value;
                             ~~~~~~~~~~~~^~~~~
main.cpp:10:18: note: in instantiation of template class 'SelfRec<int>' requested here
    std::cout << SelfRec<int>::value << std::endl;
                 ^
1 error generated.
