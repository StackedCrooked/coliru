In file included from /usr/local/include/boost/bind.hpp:22:0,
                 from /usr/local/include/boost/signals2/slot.hpp:15,
                 from /usr/local/include/boost/signals2/connection.hpp:23,
                 from /usr/local/include/boost/signals2/signal.hpp:21,
                 from /usr/local/include/boost/signals2.hpp:19,
                 from main.cpp:4:
/usr/local/include/boost/bind/bind.hpp: In instantiation of 'void boost::_bi::list2<A1, A2>::operator()(boost::_bi::type<void>, F&, A&, int) [with F = void (*)(const char*, const char*); A = boost::_bi::list2<std::basic_string<char>&, std::basic_string<char>&>; A1 = boost::arg<1>; A2 = boost::arg<2>]':
/usr/local/include/boost/bind/bind_template.hpp:61:59:   required from 'boost::_bi::bind_t<R, F, L>::result_type boost::_bi::bind_t<R, F, L>::operator()(A1&, A2&) [with A1 = std::basic_string<char>; A2 = std::basic_string<char>; R = void; F = void (*)(const char*, const char*); L = boost::_bi::list2<boost::arg<1>, boost::arg<2> >; boost::_bi::bind_t<R, F, L>::result_type = void]'
/usr/local/include/boost/function/function_template.hpp:153:11:   required from 'static void boost::detail::function::void_function_obj_invoker2<FunctionObj, R, T0, T1>::invoke(boost::detail::function::function_buffer&, T0, T1) [with FunctionObj = boost::_bi::bind_t<void, void (*)(const char*, const char*), boost::_bi::list2<boost::arg<1>, boost::arg<2> > >; R = void; T0 = std::basic_string<char>; T1 = std::basic_string<char>]'
/usr/local/include/boost/function/function_template.hpp:934:38:   required from 'void boost::function2<R, T1, T2>::assign_to(Functor) [with Functor = boost::_bi::bind_t<void, void (*)(const char*, const char*), boost::_bi::list2<boost::arg<1>, boost::arg<2> > >; R = void; T0 = std::basic_string<char>; T1 = std::basic_string<char>]'
/usr/local/include/boost/function/function_template.hpp:722:7:   required from 'boost::function2<R, T1, T2>::function2(Functor, typename boost::enable_if_c<(boost::type_traits::ice_not<(boost::is_integral<Functor>::value)>::value), int>::type) [with Functor = boost::_bi::bind_t<void, void (*)(const char*, const char*), boost::_bi::list2<boost::arg<1>, boost::arg<2> > >; R = void; T0 = std::basic_string<char>; T1 = std::basic_string<char>; typename boost::enable_if_c<(boost::type_traits::ice_not<(boost::is_integral<Functor>::value)>::value), int>::type = int]'
/usr/local/include/boost/function/function_template.hpp:1071:16:   required from 'boost::function<R(T0, T1)>::function(Functor, typename boost::enable_if_c<(boost::type_traits::ice_not<(boost::is_integral<Functor>::value)>::value), int>::type) [with Functor = boost::_bi::bind_t<void, void (*)(const char*, const char*), boost::_bi::list2<boost::arg<1>, boost::arg<2> > >; R = void; T0 = std::basic_string<char>; T1 = std::basic_string<char>; typename boost::enable_if_c<(boost::type_traits::ice_not<(boost::is_integral<Functor>::value)>::value), int>::type = int]'
/usr/local/include/boost/function/function_template.hpp:1126:5:   required from 'typename boost::enable_if_c<(boost::type_traits::ice_not<(boost::is_integral<Functor>::value)>::value), boost::function<R(T0, T1)>&>::type boost::function<R(T0, T1)>::operator=(Functor) [with Functor = boost::_bi::bind_t<void, void (*)(const char*, const char*), boost::_bi::list2<boost::arg<1>, boost::arg<2> > >; R = void; T0 = std::basic_string<char>; T1 = std::basic_string<char>; typename boost::enable_if_c<(boost::type_traits::ice_not<(boost::is_integral<Functor>::value)>::value), boost::function<R(T0, T1)>&>::type = boost::function<void(std::basic_string<char>, std::basic_string<char>)>&]'
/usr/local/include/boost/signals2/detail/slot_template.hpp:160:24:   required from 'void boost::signals2::slot<R(Args ...), SlotFunction>::init_slot_function(const F&) [with F = boost::_bi::bind_t<void, void (*)(const char*, const char*), boost::_bi::list2<boost::arg<1>, boost::arg<2> > >; SlotFunction = boost::function<void(std::basic_string<char>, std::basic_string<char>)>; R = void; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >}]'
/usr/local/include/boost/signals2/detail/slot_template.hpp:85:29:   required from 'boost::signals2::slot<R(Args ...), SlotFunction>::slot(const F&) [with F = boost::_bi::bind_t<void, void (*)(const char*, const char*), boost::_bi::list2<boost::arg<1>, boost::arg<2> > >; SlotFunction = boost::function<void(std::basic_string<char>, std::basic_string<char>)>; R = void; Args = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >}]'
main.cpp:20:43:   required from here
/usr/local/include/boost/bind/bind.hpp:313:34: error: cannot convert 'std::basic_string<char>' to 'const char*' in argument passing
         unwrapper<F>::unwrap(f, 0)(a[base_type::a1_], a[base_type::a2_]);
                                  ^
