main.cpp:5:21: error: 'T' was not declared in this scope
 typedef std::vector<T> Heap;
                     ^
main.cpp:5:22: error: template argument 1 is invalid
 typedef std::vector<T> Heap;
                      ^
main.cpp:5:22: error: template argument 2 is invalid
main.cpp:5:28: error: invalid type in declaration before ';' token
 typedef std::vector<T> Heap;
                            ^
main.cpp:7:1: error: 'T' does not name a type
 T& get_parent(const Heap<T> & heap, const T & node)
 ^
main.cpp: In constructor 'Tree<T>::Tree(int)':
main.cpp:17:9: error: class 'Tree<T>' does not have any field named 'mBuffer'
         mBuffer(CalculateBufferSize(inDepth)
         ^
main.cpp:17:44: error: there are no arguments to 'CalculateBufferSize' that depend on a template parameter, so a declaration of 'CalculateBufferSize' must be available [-fpermissive]
         mBuffer(CalculateBufferSize(inDepth)
                                            ^
main.cpp:17:44: note: (if you use '-fpermissive', G++ will accept your code, but allowing the use of an undeclared name is deprecated)
main.cpp:18:5: error: expected ')' before '{' token
     {
     ^
main.cpp:30:12: error: expected '{' at end of input
     Buffer mBuffer;
            ^
