+ g++ -std=c++03 main.cpp
main.cpp: In substitution of ‘template<class T2> YesType TestT(Sfinae<void (T2::*)(int), (& T2:: FuncT)>*) [with T2 = B]’:
main.cpp:25:49:   required from ‘const bool Check<B>::valueT’
main.cpp:34:36:   required from here
main.cpp:18:37: error: ‘&A::FuncT’ is not a valid template argument for type ‘void (B::*)(int)’ because it is of type ‘void (A::*)(int)’
 template< class T2 > static YesType TestT( Sfinae< void (T2::*)(int), &T2::FuncT >* );
                                     ^
main.cpp:18:37: note: standard conversions are not allowed in this context
