+ clang++ -std=c++11 -O3 -march=native -Wall -Wextra -pedantic -pthread main.cpp -S -o -
	.file	"main.cpp"
	.text
	.globl	_Z5test1v
	.align	16, 0x90
	.type	_Z5test1v,@function
_Z5test1v:                              # @_Z5test1v
	.cfi_startproc
# BB#0:
	movl	$1, %eax
	ret
.Ltmp0:
	.size	_Z5test1v, .Ltmp0-_Z5test1v
	.cfi_endproc

	.globl	_Z5test2v
	.align	16, 0x90
	.type	_Z5test2v,@function
_Z5test2v:                              # @_Z5test2v
	.cfi_startproc
# BB#0:
	movl	$2, %eax
	ret
.Ltmp1:
	.size	_Z5test2v, .Ltmp1-_Z5test2v
	.cfi_endproc

	.globl	_Z5test3v
	.align	16, 0x90
	.type	_Z5test3v,@function
_Z5test3v:                              # @_Z5test3v
	.cfi_startproc
# BB#0:
	movl	$3, %eax
	ret
.Ltmp2:
	.size	_Z5test3v, .Ltmp2-_Z5test3v
	.cfi_endproc

	.globl	_Z5test4v
	.align	16, 0x90
	.type	_Z5test4v,@function
_Z5test4v:                              # @_Z5test4v
	.cfi_startproc
# BB#0:
	movl	$4, %eax
	ret
.Ltmp3:
	.size	_Z5test4v, .Ltmp3-_Z5test4v
	.cfi_endproc

	.globl	_Z8testloopi
	.align	16, 0x90
	.type	_Z8testloopi,@function
_Z8testloopi:                           # @_Z8testloopi
	.cfi_startproc
# BB#0:
	pushq	%r14
.Ltmp7:
	.cfi_def_cfa_offset 16
	pushq	%rbx
.Ltmp8:
	.cfi_def_cfa_offset 24
	subq	$24, %rsp
.Ltmp9:
	.cfi_def_cfa_offset 48
.Ltmp10:
	.cfi_offset %rbx, -24
.Ltmp11:
	.cfi_offset %r14, -16
	movl	%edi, %ebx
	movq	$_ZTV6gadget+16, 8(%rsp)
	movl	$0, 16(%rsp)
	xorl	%eax, %eax
	testl	%ebx, %ebx
	jle	.LBB4_5
# BB#1:                                 # %.lr.ph
	movl	$_ZTV6gadget+16, %eax
	leaq	8(%rsp), %r14
	jmp	.LBB4_2
	.align	16, 0x90
.LBB4_3:                                # %._crit_edge2
                                        #   in Loop: Header=BB4_2 Depth=1
	movq	8(%rsp), %rax
.LBB4_2:                                # =>This Inner Loop Header: Depth=1
	movq	%r14, %rdi
	callq	*(%rax)
	decl	%ebx
	testl	%ebx, %ebx
	jg	.LBB4_3
# BB#4:                                 # %._crit_edge
	movl	16(%rsp), %eax
.LBB4_5:
	addq	$24, %rsp
	popq	%rbx
	popq	%r14
	ret
.Ltmp12:
	.size	_Z8testloopi, .Ltmp12-_Z8testloopi
	.cfi_endproc

	.section	.text._ZN6gadget3barEv,"axG",@progbits,_ZN6gadget3barEv,comdat
	.weak	_ZN6gadget3barEv
	.align	16, 0x90
	.type	_ZN6gadget3barEv,@function
_ZN6gadget3barEv:                       # @_ZN6gadget3barEv
	.cfi_startproc
# BB#0:
	incl	8(%rdi)
	ret
.Ltmp13:
	.size	_ZN6gadget3barEv, .Ltmp13-_ZN6gadget3barEv
	.cfi_endproc

	.type	_ZTV6gadget,@object     # @_ZTV6gadget
	.section	.rodata._ZTV6gadget,"aG",@progbits,_ZTV6gadget,comdat
	.weak	_ZTV6gadget
	.align	16
_ZTV6gadget:
	.quad	0
	.quad	_ZTI6gadget
	.quad	_ZN6gadget3barEv
	.size	_ZTV6gadget, 24

	.type	_ZTS6gadget,@object     # @_ZTS6gadget
	.section	.rodata._ZTS6gadget,"aG",@progbits,_ZTS6gadget,comdat
	.weak	_ZTS6gadget
_ZTS6gadget:
	.asciz	 "6gadget"
	.size	_ZTS6gadget, 8

	.type	_ZTS6widget,@object     # @_ZTS6widget
	.section	.rodata._ZTS6widget,"aG",@progbits,_ZTS6widget,comdat
	.weak	_ZTS6widget
_ZTS6widget:
	.asciz	 "6widget"
	.size	_ZTS6widget, 8

	.type	_ZTI6widget,@object     # @_ZTI6widget
	.section	.rodata._ZTI6widget,"aG",@progbits,_ZTI6widget,comdat
	.weak	_ZTI6widget
	.align	8
_ZTI6widget:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTS6widget
	.size	_ZTI6widget, 16

	.type	_ZTI6gadget,@object     # @_ZTI6gadget
	.section	.rodata._ZTI6gadget,"aG",@progbits,_ZTI6gadget,comdat
	.weak	_ZTI6gadget
	.align	16
_ZTI6gadget:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTS6gadget
	.quad	_ZTI6widget
	.size	_ZTI6gadget, 24


	.section	".note.GNU-stack","",@progbits
