terminate called after throwing an instance of 'std::bad_function_call'
  what():  std::exception
/tmp/compile.sh: line 6: 20735 Aborted                 (core dumped) ./test > .stdout
main.cppmain.cpp::45: std::future<decltype (f((* static_cast<T*>(nullptr))))> Actor<T>::execute(F) [with F = main()::<lambda(Car&)>; T = Car; decltype (f((* static_cast<T*>(nullptr)))) = unsigned int]
92: void Actor<T>::consume() [with T = Car]main.cpp:59: Actor<T>::execute(F)::functor::functor(T&, const SharedPromise&, F) [with F = main()::<lambda(Car&)>; T = Car; SharedPromise = std::shared_ptr<std::promise<unsigned int> >; decltype (f((* static_cast<T*>(nullptr)))) = unsigned int]

main.cpp:96: void Actor<T>::consume() [with T = Car]
main.cpp:101: void Actor<T>::consume() [with T = Car]
main.cpp:64: void Actor<T>::execute(F)::functor::operator()() const [with F = main()::<lambda(Car&)>; T = Car]
main.cpp:92: void Actor<T>::consume() [with T = Car]
main.cpp:101: void Actor<T>::consume() [with T = Car]
77777
main.cpp:45: std::future<decltype (f((* static_cast<T*>(nullptr))))> Actor<T>::execute(F) [with F = main()::<lambda(Car&)>; T = Car; decltype (f((* static_cast<T*>(nullptr)))) = unsigned int]
main.cpp:59: Actor<T>::execute(F)::functor::functor(T&, const SharedPromise&, F) [with F = main()::<lambda(Car&)>; T = Car; SharedPromise = std::shared_ptr<std::promise<unsigned int> >; decltype (f((* static_cast<T*>(nullptr)))) = unsigned int]
