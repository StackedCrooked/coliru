main.cpp: In instantiation of ‘void policies::Arguments<Args>::apply_on(const F&) const [with F = policies::PolicyInterface<policies::compression::Plain>; Args = {std::basic_ostream<char, std::char_traits<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]’:
main.cpp:45:9:   required from ‘void policies::PolicyVisitor<Args>::operator()(const policies::PolicyInterface<C>&) const [with C = policies::compression::Plain; Args = {std::basic_ostream<char, std::char_traits<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]’
/usr/local/include/boost/variant/variant.hpp:859:32:   required from ‘boost::detail::variant::invoke_visitor<Visitor>::result_type boost::detail::variant::invoke_visitor<Visitor>::internal_visit(T&, int) [with T = const policies::compression::Plain; Visitor = policies::PolicyVisitor<std::basic_ostream<char, std::char_traits<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&>; boost::detail::variant::invoke_visitor<Visitor>::result_type = void]’
/usr/local/include/boost/variant/detail/visitation_impl.hpp:130:9:   required from ‘typename Visitor::result_type boost::detail::variant::visitation_impl_invoke_impl(int, Visitor&, VoidPtrCV, T*, mpl_::true_) [with Visitor = boost::detail::variant::invoke_visitor<policies::PolicyVisitor<std::basic_ostream<char, std::char_traits<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&> >; VoidPtrCV = const void*; T = policies::compression::Plain; typename Visitor::result_type = void; mpl_::true_ = mpl_::bool_<true>]’
/usr/local/include/boost/variant/detail/visitation_impl.hpp:173:9:   required from ‘typename Visitor::result_type boost::detail::variant::visitation_impl_invoke(int, Visitor&, VoidPtrCV, T*, NoBackupFlag, int) [with Visitor = boost::detail::variant::invoke_visitor<policies::PolicyVisitor<std::basic_ostream<char, std::char_traits<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&> >; VoidPtrCV = const void*; T = policies::compression::Plain; NoBackupFlag = boost::variant<policies::compression::Plain, policies::compression::Zip>::has_fallback_type_; typename Visitor::result_type = void]’
/usr/local/include/boost/variant/detail/visitation_impl.hpp:260:1:   required from ‘typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VoidPtrCV, mpl_::false_, NoBackupFlag, Which*, step0*) [with Which = mpl_::int_<0>; step0 = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_item<mpl_::long_<2l>, policies::compression::Plain, boost::mpl::l_item<mpl_::long_<1l>, policies::compression::Zip, boost::mpl::l_end> > >, boost::mpl::l_iter<boost::mpl::l_end> >; Visitor = boost::detail::variant::invoke_visitor<policies::PolicyVisitor<std::basic_ostream<char, std::char_traits<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&> >; VoidPtrCV = const void*; NoBackupFlag = boost::variant<policies::compression::Plain, policies::compression::Zip>::has_fallback_type_; typename Visitor::result_type = void; mpl_::false_ = mpl_::bool_<false>]’
/usr/local/include/boost/variant/variant.hpp:1803:13:   required from ‘static typename Visitor::result_type boost::variant<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>::internal_apply_visitor_impl(int, int, Visitor&, VoidPtrCV) [with Visitor = boost::detail::variant::invoke_visitor<policies::PolicyVisitor<std::basic_ostream<char, std::char_traits<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&> >; VoidPtrCV = const void*; T0_ = policies::compression::Plain; T1 = policies::compression::Zip; T2 = boost::detail::variant::void_; T3 = boost::detail::variant::void_; T4 = boost::detail::variant::void_; T5 = boost::detail::variant::void_; T6 = boost::detail::variant::void_; T7 = boost::detail::variant::void_; T8 = boost::detail::variant::void_; T9 = boost::detail::variant::void_; T10 = boost::detail::variant::void_; T11 = boost::detail::variant::void_; T12 = boost::detail::variant::void_; T13 = boost::detail::variant::void_; T14 = boost::detail::variant::void_; T15 = boost::detail::variant::void_; T16 = boost::detail::variant::void_; T17 = boost::detail::variant::void_; T18 = boost::detail::variant::void_; T19 = boost::detail::variant::void_; typename Visitor::result_type = void]’
/usr/local/include/boost/variant/variant.hpp:1825:13:   required from ‘typename Visitor::result_type boost::variant<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>::internal_apply_visitor(Visitor&) const [with Visitor = boost::detail::variant::invoke_visitor<policies::PolicyVisitor<std::basic_ostream<char, std::char_traits<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&> >; T0_ = policies::compression::Plain; T1 = policies::compression::Zip; T2 = boost::detail::variant::void_; T3 = boost::detail::variant::void_; T4 = boost::detail::variant::void_; T5 = boost::detail::variant::void_; T6 = boost::detail::variant::void_; T7 = boost::detail::variant::void_; T8 = boost::detail::variant::void_; T9 = boost::detail::variant::void_; T10 = boost::detail::variant::void_; T11 = boost::detail::variant::void_; T12 = boost::detail::variant::void_; T13 = boost::detail::variant::void_; T14 = boost::detail::variant::void_; T15 = boost::detail::variant::void_; T16 = boost::detail::variant::void_; T17 = boost::detail::variant::void_; T18 = boost::detail::variant::void_; T19 = boost::detail::variant::void_; typename Visitor::result_type = void]’
/usr/local/include/boost/variant/variant.hpp:1847:52:   required from ‘typename Visitor::result_type boost::variant<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>::apply_visitor(Visitor&) const [with Visitor = policies::PolicyVisitor<std::basic_ostream<char, std::char_traits<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&>; T0_ = policies::compression::Plain; T1 = policies::compression::Zip; T2 = boost::detail::variant::void_; T3 = boost::detail::variant::void_; T4 = boost::detail::variant::void_; T5 = boost::detail::variant::void_; T6 = boost::detail::variant::void_; T7 = boost::detail::variant::void_; T8 = boost::detail::variant::void_; T9 = boost::detail::variant::void_; T10 = boost::detail::variant::void_; T11 = boost::detail::variant::void_; T12 = boost::detail::variant::void_; T13 = boost::detail::variant::void_; T14 = boost::detail::variant::void_; T15 = boost::detail::variant::void_; T16 = boost::detail::variant::void_; T17 = boost::detail::variant::void_; T18 = boost::detail::variant::void_; T19 = boost::detail::variant::void_; typename Visitor::result_type = void]’
main.cpp:61:5:   required from ‘void policies::RunPolicy(const P&, Args&& ...) [with P = boost::variant<policies::compression::Plain, policies::compression::Zip>; Args = {std::basic_ostream<char, std::char_traits<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]’
main.cpp:108:30:   required from here
main.cpp:22:9: error: no matching function for call to ‘policies::Arguments<std::basic_ostream<char, std::char_traits<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&>::do_apply_on(const policies::PolicyInterface<policies::compression::Plain>&, policies::Arguments<std::basic_ostream<char, std::char_traits<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&>::gens<0, 0, 1>::type) const’
main.cpp:22:9: note: candidate is:
main.cpp:14:40: note: void policies::Arguments<Args>::do_apply_on(const F&, policies::Arguments<Args>::seq<S ...>) [with F = policies::PolicyInterface<policies::compression::Plain>; int ...S = {0, 1}; Args = {std::basic_ostream<char, std::char_traits<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&}] <near match>
main.cpp:14:40: note:   no known conversion for implicit ‘this’ parameter from ‘const policies::Arguments<std::basic_ostream<char, std::char_traits<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&>* const’ to ‘policies::Arguments<std::basic_ostream<char, std::char_traits<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&>*’
main.cpp: In instantiation of ‘void policies::Arguments<Args>::apply_on(const F&) const [with F = policies::PolicyInterface<policies::compression::Zip>; Args = {std::basic_ostream<char, std::char_traits<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]’:
main.cpp:45:9:   required from ‘void policies::PolicyVisitor<Args>::operator()(const policies::PolicyInterface<C>&) const [with C = policies::compression::Zip; Args = {std::basic_ostream<char, std::char_traits<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]’
/usr/local/include/boost/variant/variant.hpp:859:32:   required from ‘boost::detail::variant::invoke_visitor<Visitor>::result_type boost::detail::variant::invoke_visitor<Visitor>::internal_visit(T&, int) [with T = const policies::compression::Zip; Visitor = policies::PolicyVisitor<std::basic_ostream<char, std::char_traits<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&>; boost::detail::variant::invoke_visitor<Visitor>::result_type = void]’
/usr/local/include/boost/variant/detail/visitation_impl.hpp:130:9:   required from ‘typename Visitor::result_type boost::detail::variant::visitation_impl_invoke_impl(int, Visitor&, VoidPtrCV, T*, mpl_::true_) [with Visitor = boost::detail::variant::invoke_visitor<policies::PolicyVisitor<std::basic_ostream<char, std::char_traits<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&> >; VoidPtrCV = const void*; T = policies::compression::Zip; typename Visitor::result_type = void; mpl_::true_ = mpl_::bool_<true>]’
/usr/local/include/boost/variant/detail/visitation_impl.hpp:173:9:   required from ‘typename Visitor::result_type boost::detail::variant::visitation_impl_invoke(int, Visitor&, VoidPtrCV, T*, NoBackupFlag, int) [with Visitor = boost::detail::variant::invoke_visitor<policies::PolicyVisitor<std::basic_ostream<char, std::char_traits<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&> >; VoidPtrCV = const void*; T = policies::compression::Zip; NoBackupFlag = boost::variant<policies::compression::Plain, policies::compression::Zip>::has_fallback_type_; typename Visitor::result_type = void]’
/usr/local/include/boost/variant/detail/visitation_impl.hpp:260:1:   required from ‘typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VoidPtrCV, mpl_::false_, NoBackupFlag, Which*, step0*) [with Which = mpl_::int_<0>; step0 = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_item<mpl_::long_<2l>, policies::compression::Plain, boost::mpl::l_item<mpl_::long_<1l>, policies::compression::Zip, boost::mpl::l_end> > >, boost::mpl::l_iter<boost::mpl::l_end> >; Visitor = boost::detail::variant::invoke_visitor<policies::PolicyVisitor<std::basic_ostream<char, std::char_traits<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&> >; VoidPtrCV = const void*; NoBackupFlag = boost::variant<policies::compression::Plain, policies::compression::Zip>::has_fallback_type_; typename Visitor::result_type = void; mpl_::false_ = mpl_::bool_<false>]’
/usr/local/include/boost/variant/variant.hpp:1803:13:   required from ‘static typename Visitor::result_type boost::variant<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>::internal_apply_visitor_impl(int, int, Visitor&, VoidPtrCV) [with Visitor = boost::detail::variant::invoke_visitor<policies::PolicyVisitor<std::basic_ostream<char, std::char_traits<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&> >; VoidPtrCV = const void*; T0_ = policies::compression::Plain; T1 = policies::compression::Zip; T2 = boost::detail::variant::void_; T3 = boost::detail::variant::void_; T4 = boost::detail::variant::void_; T5 = boost::detail::variant::void_; T6 = boost::detail::variant::void_; T7 = boost::detail::variant::void_; T8 = boost::detail::variant::void_; T9 = boost::detail::variant::void_; T10 = boost::detail::variant::void_; T11 = boost::detail::variant::void_; T12 = boost::detail::variant::void_; T13 = boost::detail::variant::void_; T14 = boost::detail::variant::void_; T15 = boost::detail::variant::void_; T16 = boost::detail::variant::void_; T17 = boost::detail::variant::void_; T18 = boost::detail::variant::void_; T19 = boost::detail::variant::void_; typename Visitor::result_type = void]’
/usr/local/include/boost/variant/variant.hpp:1825:13:   required from ‘typename Visitor::result_type boost::variant<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>::internal_apply_visitor(Visitor&) const [with Visitor = boost::detail::variant::invoke_visitor<policies::PolicyVisitor<std::basic_ostream<char, std::char_traits<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&> >; T0_ = policies::compression::Plain; T1 = policies::compression::Zip; T2 = boost::detail::variant::void_; T3 = boost::detail::variant::void_; T4 = boost::detail::variant::void_; T5 = boost::detail::variant::void_; T6 = boost::detail::variant::void_; T7 = boost::detail::variant::void_; T8 = boost::detail::variant::void_; T9 = boost::detail::variant::void_; T10 = boost::detail::variant::void_; T11 = boost::detail::variant::void_; T12 = boost::detail::variant::void_; T13 = boost::detail::variant::void_; T14 = boost::detail::variant::void_; T15 = boost::detail::variant::void_; T16 = boost::detail::variant::void_; T17 = boost::detail::variant::void_; T18 = boost::detail::variant::void_; T19 = boost::detail::variant::void_; typename Visitor::result_type = void]’
/usr/local/include/boost/variant/variant.hpp:1847:52:   required from ‘typename Visitor::result_type boost::variant<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>::apply_visitor(Visitor&) const [with Visitor = policies::PolicyVisitor<std::basic_ostream<char, std::char_traits<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&>; T0_ = policies::compression::Plain; T1 = policies::compression::Zip; T2 = boost::detail::variant::void_; T3 = boost::detail::variant::void_; T4 = boost::detail::variant::void_; T5 = boost::detail::variant::void_; T6 = boost::detail::variant::void_; T7 = boost::detail::variant::void_; T8 = boost::detail::variant::void_; T9 = boost::detail::variant::void_; T10 = boost::detail::variant::void_; T11 = boost::detail::variant::void_; T12 = boost::detail::variant::void_; T13 = boost::detail::variant::void_; T14 = boost::detail::variant::void_; T15 = boost::detail::variant::void_; T16 = boost::detail::variant::void_; T17 = boost::detail::variant::void_; T18 = boost::detail::variant::void_; T19 = boost::detail::variant::void_; typename Visitor::result_type = void]’
main.cpp:61:5:   required from ‘void policies::RunPolicy(const P&, Args&& ...) [with P = boost::variant<policies::compression::Plain, policies::compression::Zip>; Args = {std::basic_ostream<char, std::char_traits<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]’
main.cpp:108:30:   required from here
main.cpp:22:9: error: no matching function for call to ‘policies::Arguments<std::basic_ostream<char, std::char_traits<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&>::do_apply_on(const policies::PolicyInterface<policies::compression::Zip>&, policies::Arguments<std::basic_ostream<char, std::char_traits<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&>::gens<0, 0, 1>::type) const’
main.cpp:22:9: note: candidate is:
main.cpp:14:40: note: void policies::Arguments<Args>::do_apply_on(const F&, policies::Arguments<Args>::seq<S ...>) [with F = policies::PolicyInterface<policies::compression::Zip>; int ...S = {0, 1}; Args = {std::basic_ostream<char, std::char_traits<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&}] <near match>
main.cpp:14:40: note:   no known conversion for implicit ‘this’ parameter from ‘const policies::Arguments<std::basic_ostream<char, std::char_traits<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&>* const’ to ‘policies::Arguments<std::basic_ostream<char, std::char_traits<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&>*’
