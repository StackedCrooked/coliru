void FuckingCOM ( int** cominitializegogo ) {
    FuckingCOM ( &meow );
void FuckingCOMShit ( int** initializecomgogo ) {
    FuckingCOMShit( &commy );
void FuckingCOM ( int** cominitializegogo ) {delete *cominitializegogo; *cominitializegogo = new int(48);}
    FuckingCOM ( meow.get_ptrptr() );    
#include <vector>                               /* talk about   */       /* FUCK IT!!!!! */
#define BYEBYE 666                              /* the fucking  */       /* IT'S JUNK!!! */
string>hellos{       /* fuck you, you*/
            WHEELS_UNREACHABLE; // fuck
    static_assert( true, "Fuck you" )
#include <vector>                               /* talk about   */       /* FUCK IT!!!!! */
#define BYEBYE 666                              /* the fucking  */       /* IT'S JUNK!!! */
string>hellos{       /* fuck you, you*/
endl;
void fuckingPrints() {
    fuckingPrints<byte,6>();
void FuckingCOM ( int** cominitializegogo ) {delete *cominitializegogo; *cominitializegogo = new int(48);}
    FuckingCOM ( ptrptr(meow) );    
		// Do crazy shit with each of the arguments, related to the original SpecialType format...
void FuckingCOMShit ( int** initializecomgogo ) {
    FuckingCOMShit( &commy );
string(" N\n"), "N is the number of "       /* piece of shit*/
        void furrovineexport DoShit () {
 ISO C++ forbids declaration of ‘DoShit’ with no type [-fpermissive]
enum class FlagsnShit {
enumflagoperators( FlagsnShit );
Two;
endl;
string(" N\n"), "N is the number of "       /* piece of shit*/
	/* BLAH BLAH BLAH FUN SHIT */
        void furrovineexport DoShit () {
		void DoShit () {
enum class FlagsnShit {
enumflagoperators( FlagsnShit );
Two;
endl;
        // Do crazy shit with each of the arguments, related to the original SpecialType format...
