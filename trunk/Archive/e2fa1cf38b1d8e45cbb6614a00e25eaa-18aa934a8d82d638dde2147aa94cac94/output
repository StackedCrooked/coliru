begtest 0 
mergeRecurse(arr,tmp,0,0)
endtest 0 
begtest 0 0 
mergeRecurse(arr,tmp,0,1)
mergeRecurse(arr,tmp,0,0)
mergeRecurse(arr,tmp,1,1)
endtest 0 0 
begtest 0 1 
mergeRecurse(arr,tmp,0,1)
mergeRecurse(arr,tmp,0,0)
mergeRecurse(arr,tmp,1,1)
endtest 0 1 
begtest 1 0 
mergeRecurse(arr,tmp,0,1)
mergeRecurse(arr,tmp,0,0)
mergeRecurse(arr,tmp,1,1)
endtest 0 1 
begtest 0 0 0 
mergeRecurse(arr,tmp,0,2)
mergeRecurse(arr,tmp,0,1)
mergeRecurse(arr,tmp,0,0)
mergeRecurse(arr,tmp,1,1)
mergeRecurse(arr,tmp,2,2)
endtest 0 0 0 
begtest 0 0 1 
mergeRecurse(arr,tmp,0,2)
mergeRecurse(arr,tmp,0,1)
mergeRecurse(arr,tmp,0,0)
mergeRecurse(arr,tmp,1,1)
mergeRecurse(arr,tmp,2,2)
endtest 0 0 1 
begtest 0 1 0 
mergeRecurse(arr,tmp,0,2)
mergeRecurse(arr,tmp,0,1)
mergeRecurse(arr,tmp,0,0)
mergeRecurse(arr,tmp,1,1)
mergeRecurse(arr,tmp,2,2)
endtest 0 0 1 
begtest 1 0 0 
mergeRecurse(arr,tmp,0,2)
mergeRecurse(arr,tmp,0,1)
mergeRecurse(arr,tmp,0,0)
mergeRecurse(arr,tmp,1,1)
mergeRecurse(arr,tmp,2,2)
endtest 0 0 1 
begtest 0 1 1 
mergeRecurse(arr,tmp,0,2)
mergeRecurse(arr,tmp,0,1)
mergeRecurse(arr,tmp,0,0)
mergeRecurse(arr,tmp,1,1)
mergeRecurse(arr,tmp,2,2)
endtest 0 1 1 
begtest 1 0 1 
mergeRecurse(arr,tmp,0,2)
mergeRecurse(arr,tmp,0,1)
mergeRecurse(arr,tmp,0,0)
mergeRecurse(arr,tmp,1,1)
mergeRecurse(arr,tmp,2,2)
endtest 0 1 1 
begtest 1 1 0 
mergeRecurse(arr,tmp,0,2)
mergeRecurse(arr,tmp,0,1)
mergeRecurse(arr,tmp,0,0)
mergeRecurse(arr,tmp,1,1)
mergeRecurse(arr,tmp,2,2)
endtest 0 1 1 
begtest 0 1 2 
mergeRecurse(arr,tmp,0,2)
mergeRecurse(arr,tmp,0,1)
mergeRecurse(arr,tmp,0,0)
mergeRecurse(arr,tmp,1,1)
mergeRecurse(arr,tmp,2,2)
endtest 0 1 2 
begtest 0 2 1 
mergeRecurse(arr,tmp,0,2)
mergeRecurse(arr,tmp,0,1)
mergeRecurse(arr,tmp,0,0)
mergeRecurse(arr,tmp,1,1)
mergeRecurse(arr,tmp,2,2)
endtest 0 1 2 
begtest 1 0 2 
mergeRecurse(arr,tmp,0,2)
mergeRecurse(arr,tmp,0,1)
mergeRecurse(arr,tmp,0,0)
mergeRecurse(arr,tmp,1,1)
mergeRecurse(arr,tmp,2,2)
endtest 0 1 2 
begtest 1 2 0 
mergeRecurse(arr,tmp,0,2)
mergeRecurse(arr,tmp,0,1)
mergeRecurse(arr,tmp,0,0)
mergeRecurse(arr,tmp,1,1)
mergeRecurse(arr,tmp,2,2)
endtest 0 1 2 
begtest 2 0 1 
mergeRecurse(arr,tmp,0,2)
mergeRecurse(arr,tmp,0,1)
mergeRecurse(arr,tmp,0,0)
mergeRecurse(arr,tmp,1,1)
mergeRecurse(arr,tmp,2,2)
endtest 0 1 2 
begtest 2 1 0 
mergeRecurse(arr,tmp,0,2)
mergeRecurse(arr,tmp,0,1)
mergeRecurse(arr,tmp,0,0)
mergeRecurse(arr,tmp,1,1)
mergeRecurse(arr,tmp,2,2)
endtest 0 1 2 
begtest 0 0 0 0 
mergeRecurse(arr,tmp,0,3)
mergeRecurse(arr,tmp,0,1)
mergeRecurse(arr,tmp,0,0)
mergeRecurse(arr,tmp,1,1)
mergeRecurse(arr,tmp,2,3)
mergeRecurse(arr,tmp,2,2)
mergeRecurse(arr,tmp,3,3)
endtest 0 0 0 0 
begtest 0 0 0 1 
mergeRecurse(arr,tmp,0,3)
mergeRecurse(arr,tmp,0,1)
mergeRecurse(arr,tmp,0,0)
mergeRecurse(arr,tmp,1,1)
mergeRecurse(arr,tmp,2,3)
mergeRecurse(arr,tmp,2,2)
mergeRecurse(arr,tmp,3,3)
endtest 0 0 0 1 
begtest 0 0 1 0 
mergeRecurse(arr,tmp,0,3)
mergeRecurse(arr,tmp,0,1)
mergeRecurse(arr,tmp,0,0)
mergeRecurse(arr,tmp,1,1)
mergeRecurse(arr,tmp,2,3)
mergeRecurse(arr,tmp,2,2)
mergeRecurse(arr,tmp,3,3)
endtest 0 0 0 1 
begtest 0 1 0 0 
mergeRecurse(arr,tmp,0,3)
mergeRecurse(arr,tmp,0,1)
mergeRecurse(arr,tmp,0,0)
mergeRecurse(arr,tmp,1,1)
mergeRecurse(arr,tmp,2,3)
mergeRecurse(arr,tmp,2,2)
mergeRecurse(arr,tmp,3,3)
endtest 0 0 0 1 
begtest 1 0 0 0 
mergeRecurse(arr,tmp,0,3)
mergeRecurse(arr,tmp,0,1)
mergeRecurse(arr,tmp,0,0)
mergeRecurse(arr,tmp,1,1)
mergeRecurse(arr,tmp,2,3)
mergeRecurse(arr,tmp,2,2)
mergeRecurse(arr,tmp,3,3)
endtest 0 0 0 1 
begtest 0 0 1 1 
mergeRecurse(arr,tmp,0,3)
mergeRecurse(arr,tmp,0,1)
mergeRecurse(arr,tmp,0,0)
mergeRecurse(arr,tmp,1,1)
mergeRecurse(arr,tmp,2,3)
mergeRecurse(arr,tmp,2,2)
mergeRecurse(arr,tmp,3,3)
endtest 0 0 1 1 
begtest 0 1 0 1 
mergeRecurse(arr,tmp,0,3)
mergeRecurse(arr,tmp,0,1)
mergeRecurse(arr,tmp,0,0)
mergeRecurse(arr,tmp,1,1)
mergeRecurse(arr,tmp,2,3)
mergeRecurse(arr,tmp,2,2)
mergeRecurse(arr,tmp,3,3)
endtest 0 1 0 1 
test: main.cpp:58: void do_test(std::vector<int>): Assertion `std::is_sorted(data.begin(), data.end())' failed.
./cmd.sh: line 1: 27638 Aborted                 (core dumped) ./test
