module Standard {
    module Algorithm {
        Fold(pred) {
            return function(range)[pred := move(pred)] {
                var := range();
                return Fold(move(pred), *move(var))(move(range));
            };
        }
        Fold(pred, initial) {
            return function(range)[pred := move(pred), initial := move(initial)] {
                var := range();
                if (~var)
                    return move(initial);
                val := pred(move(initial), *move(var));
                return Fold(move(pred), move(val))(move(range));
            };
        }
    }
}